{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-table.jsx\";\nimport React from 'react';\nimport { useTable, useSortBy } from 'react-table';\n\nfunction LineItemTable(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      entryDescription = _ref.entryDescription,\n      entryDate = _ref.entryDate;\n  var columns = React.useMemo(function () {\n    return [// accessor is the \"key\" in the data},\n    {\n      Header: 'id',\n      accessor: 'lineItemId'\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }, {\n      Header: 'Account',\n      accessor: 'accountName'\n    }, {\n      Header: 'Category',\n      accessor: 'categoryName'\n    }, {\n      Header: 'Debit',\n      accessor: 'debitAmount'\n    }, {\n      Header: 'Credit',\n      accessor: 'creditAmount'\n    }];\n  }, []);\n  var initialSort = React.useMemo(function () {\n    return [{\n      id: 'lineItemId',\n      desc: false\n    }];\n  }, []);\n\n  var _useTable = useTable({\n    columns,\n    data,\n    initialState: {\n      sortBy: initialSort,\n      hiddenColumns: [\"lineItemId\"]\n    }\n  }, useSortBy),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Date \", entryDate), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Description \", entryDescription), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), headerGroup.headers.map(function (column) {\n      return (\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        }), column.render('Header'))\n      );\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), rows.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      }), cell.render('Cell'));\n    }));\n  })))));\n}\n\nexport default LineItemTable;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-table.jsx"],"names":["React","useTable","useSortBy","LineItemTable","data","entryDescription","entryDate","columns","useMemo","Header","accessor","initialSort","id","desc","initialState","sortBy","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable, useSortBy } from 'react-table'\n\nfunction LineItemTable({ data, entryDescription, entryDate }) {\n\n  const columns = React.useMemo(\n    () => [ // accessor is the \"key\" in the data},\n      { Header: 'id', accessor: 'lineItemId'},\n      { Header: 'Description', accessor: 'description'},\n      { Header: 'Account', accessor: 'accountName'},\n      { Header: 'Category', accessor: 'categoryName'},\n      { Header: 'Debit', accessor: 'debitAmount'},\n      { Header: 'Credit', accessor: 'creditAmount'},\n    ],\n    []\n  )\n\n  const initialSort = React.useMemo(\n    () => [\n      { id: 'lineItemId', desc: false},\n    ],\n    [])\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: initialSort,\n        hiddenColumns: [\"lineItemId\"]\n      }\n    },\n    useSortBy\n  )\n\n\n  return (\n    <>\n      <div className=\"row m-b-15\">\n        Date {entryDate}\n      </div>\n      <div className=\"row m-b-15\">\n        Description {entryDescription}\n      </div>\n\n      <div className=\"table-responsive\">\n      <table className=\"table\"{...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                    )\n                  })}\n                </tr>\n              )}\n          )}\n        </tbody>\n      </table>\n      </div>\n    </>\n  )\n}\n\nexport default LineItemTable\n"]},"metadata":{},"sourceType":"module"}