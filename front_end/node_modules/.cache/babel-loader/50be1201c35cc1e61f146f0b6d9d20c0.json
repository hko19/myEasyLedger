{"ast":null,"code":"import _classCallCheck from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/pages/accounts/accounts.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\nvar API_URL = 'http://localhost:8080/v0.1';\nvar ORGANIZATION_ID = 1;\nvar PERSON_ID = 1;\nvar localization = {\n  locale: 'en-US',\n  currency: 'USD'\n};\nvar accountTypes = [{\n  id: 1,\n  name: \"Assets\"\n}, {\n  id: 2,\n  name: \"Liabilities\"\n}, {\n  id: 3,\n  name: \"Owner's Equity\"\n}, {\n  id: 4,\n  name: \"Income\"\n}, {\n  id: 5,\n  name: \"Expenses\"\n}];\n\nvar Accounts = /*#__PURE__*/function (_React$Component) {\n  _inherits(Accounts, _React$Component);\n\n  var _super = _createSuper(Accounts);\n\n  function Accounts(props) {\n    var _this;\n\n    _classCallCheck(this, Accounts);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      accounts: [],\n      accountSubtypes: [],\n      categories: [],\n      activeTab: '1'\n    };\n    return _this;\n  }\n\n  _createClass(Accounts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = \"\".concat(API_URL, \"/organization/\").concat(ORGANIZATION_ID, \"/accountBalance\");\n      axios.get(url).then(function (response) {\n        _this2.setState({\n          accounts: response.data\n        });\n      });\n      axios.get(\"\".concat(API_URL, \"/organization/\").concat(ORGANIZATION_ID, \"/categoryBalance\")).then(function (response) {\n        _this2.setState({\n          categories: response.data\n        });\n      });\n      axios.get(\"\".concat(API_URL, \"/organization/\").concat(ORGANIZATION_ID, \"/accountSubtype\")).then(function (response) {\n        _this2.setState({\n          accountSubtypes: response.data\n        });\n      });\n    }\n  }, {\n    key: \"toggleTab\",\n    value: function toggleTab(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"breadcrumb float-xl-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"breadcrumb-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 53\n        }\n      }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"breadcrumb-item active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"Accounts\")), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"page-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, \"Accounts \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rounded\",\n        style: {\n          backgroundColor: \"#e4e4e4\",\n          border: \"0.5px solid silver\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        tabs: true,\n        className: \"d-flex px-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this3.toggleTab('1');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-sm-block px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, \"Assets\"))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this3.toggleTab('2');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-sm-block px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, \"Liabilities\"))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this3.toggleTab('3');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-sm-block px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, \"Equity\"))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '4'\n        }),\n        onClick: function onClick() {\n          _this3.toggleTab('4');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-sm-block px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }\n      }, \"Income\"))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '5'\n        }),\n        onClick: function onClick() {\n          _this3.toggleTab('5');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-sm-block px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, \"Expenses\")))), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        className: \"rounded-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, \" \", this.state.accountSubtypes.slice().filter(function (accountSubtype) {\n        return accountSubtype.accountTypeId === 1;\n      }).map(function (accountSubtype) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: accountSubtype.accountSubtypeId,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row bg-light my-2 py-1 px-2 border\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"my-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 49\n          }\n        }, accountSubtype.accountSubtypeName)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 45\n          }\n        }, _this3.state.accounts.slice().filter(function (account) {\n          return account.accountSubtypeId === accountSubtype.accountSubtypeId;\n        }).map(function (account) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-between border-bottom\",\n            key: account.accountId,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 65\n            }\n          }, account.accountName), /*#__PURE__*/React.createElement(\"span\", {\n            className: account.debitTotal < account.creditTotal ? \"text-red\" : \"\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 65\n            }\n          }, new Intl.NumberFormat(localization.locale, {\n            style: 'currency',\n            currency: localization.currency\n          }).format(account.debitTotal - account.creditTotal)));\n        })));\n      }))), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        className: \"rounded-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }, \" \", this.state.accountSubtypes.slice().filter(function (accountSubtype) {\n        return accountSubtype.accountTypeId === 2;\n      }).map(function (accountSubtype) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: accountSubtype.accountSubtypeId,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row bg-light my-2 py-1 px-2 border\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"my-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 49\n          }\n        }, accountSubtype.accountSubtypeName)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 45\n          }\n        }, _this3.state.accounts.slice().filter(function (account) {\n          return account.accountSubtypeId === accountSubtype.accountSubtypeId;\n        }).map(function (account) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-between border-bottom\",\n            key: account.accountId,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 65\n            }\n          }, account.accountName), /*#__PURE__*/React.createElement(\"span\", {\n            className: account.debitTotal < account.creditTotal ? \"text-red\" : \"\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 65\n            }\n          }, new Intl.NumberFormat(localization.locale, {\n            style: 'currency',\n            currency: localization.currency\n          }).format(account.debitTotal - account.creditTotal)));\n        })));\n      }))), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        className: \"rounded-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, \" \", this.state.accountSubtypes.slice().filter(function (accountSubtype) {\n        return accountSubtype.accountTypeId === 3;\n      }).map(function (accountSubtype) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: accountSubtype.accountSubtypeId,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row bg-light my-2 py-1 px-2 border\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"my-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 49\n          }\n        }, accountSubtype.accountSubtypeName)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 45\n          }\n        }, _this3.state.accounts.slice().filter(function (account) {\n          return account.accountSubtypeId === accountSubtype.accountSubtypeId;\n        }).map(function (account) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-between border-bottom\",\n            key: account.accountId,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 65\n            }\n          }, account.accountName), /*#__PURE__*/React.createElement(\"span\", {\n            className: account.debitTotal < account.creditTotal ? \"text-red\" : \"\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 65\n            }\n          }, new Intl.NumberFormat(localization.locale, {\n            style: 'currency',\n            currency: localization.currency\n          }).format(account.debitTotal - account.creditTotal)));\n        })));\n      }))), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        className: \"rounded-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      }, \" \", this.state.accountSubtypes.slice().filter(function (accountSubtype) {\n        return accountSubtype.accountTypeId === 4;\n      }).map(function (accountSubtype) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: accountSubtype.accountSubtypeId,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row bg-light my-2 py-1 px-2 border\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"my-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 49\n          }\n        }, accountSubtype.accountSubtypeName)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 45\n          }\n        }, _this3.state.accounts.slice().filter(function (account) {\n          return account.accountSubtypeId === accountSubtype.accountSubtypeId;\n        }).map(function (account) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-between border-bottom\",\n            key: account.accountId,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 65\n            }\n          }, account.accountName), /*#__PURE__*/React.createElement(\"span\", {\n            className: account.debitTotal < account.creditTotal ? \"text-red\" : \"\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 65\n            }\n          }, new Intl.NumberFormat(localization.locale, {\n            style: 'currency',\n            currency: localization.currency\n          }).format(account.debitTotal - account.creditTotal)));\n        })));\n      }))), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        className: \"rounded-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, \" \", this.state.accountSubtypes.slice().filter(function (accountSubtype) {\n        return accountSubtype.accountTypeId === 5;\n      }).map(function (accountSubtype) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: accountSubtype.accountSubtypeId,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row bg-light my-2 py-1 px-2 border\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"my-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 49\n          }\n        }, accountSubtype.accountSubtypeName)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 45\n          }\n        }, _this3.state.accounts.slice().filter(function (account) {\n          return account.accountSubtypeId === accountSubtype.accountSubtypeId;\n        }).map(function (account) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-between border-bottom\",\n            key: account.accountId,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 65\n            }\n          }, account.accountName), /*#__PURE__*/React.createElement(\"span\", {\n            className: account.debitTotal < account.creditTotal ? \"text-red\" : \"\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 65\n            }\n          }, new Intl.NumberFormat(localization.locale, {\n            style: 'currency',\n            currency: localization.currency\n          }).format(account.debitTotal - account.creditTotal)));\n        })));\n      })))));\n    }\n  }]);\n\n  return Accounts;\n}(React.Component);\n\nexport default Accounts;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/pages/accounts/accounts.js"],"names":["React","Link","axios","TabContent","TabPane","Nav","NavItem","NavLink","classnames","API_URL","ORGANIZATION_ID","PERSON_ID","localization","locale","currency","accountTypes","id","name","Accounts","props","state","accounts","accountSubtypes","categories","activeTab","url","get","then","response","setState","data","tab","backgroundColor","border","active","toggleTab","slice","filter","accountSubtype","accountTypeId","map","accountSubtypeId","accountSubtypeName","account","accountId","accountName","debitTotal","creditTotal","Intl","NumberFormat","style","format","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport classnames from 'classnames';\n\n\n\nconst API_URL = 'http://localhost:8080/v0.1';\nconst ORGANIZATION_ID = 1;\nconst PERSON_ID = 1;\nconst localization = {\n    locale: 'en-US',\n    currency: 'USD'\n}\nconst accountTypes = [\n    { id: 1, name: \"Assets\" },\n    { id: 2, name: \"Liabilities\" },\n    { id: 3, name: \"Owner's Equity\" },\n    { id: 4, name: \"Income\" },\n    { id: 5, name: \"Expenses\" },\n]\n\nclass Accounts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts: [],\n            accountSubtypes: [],\n            categories: [],\n            activeTab: '1'\n        };\n    }\n\n    componentDidMount() {\n        const url = `${API_URL}/organization/${ORGANIZATION_ID}/accountBalance`;\n        axios.get(url).then(response => {\n            this.setState({ accounts: response.data });\n        });\n        axios.get(`${API_URL}/organization/${ORGANIZATION_ID}/categoryBalance`).then(response => {\n            this.setState({ categories: response.data });\n        })\n        axios.get(`${API_URL}/organization/${ORGANIZATION_ID}/accountSubtype`).then(response => {\n            this.setState({ accountSubtypes: response.data });\n        })\n\n    }\n\n    toggleTab(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <ol className=\"breadcrumb float-xl-right\">\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\n                    <li className=\"breadcrumb-item active\">Accounts</li>\n                </ol>\n\n                <h1 className=\"page-header\">Accounts </h1>\n\n                <div className=\"rounded\" style={{ backgroundColor: \"#e4e4e4\", border: \"0.5px solid silver\" }}>\n                    <Nav tabs className=\"d-flex px-2\"> {/* Strangely, using a forEach loop to save space here causes React to refuse to render tabs */}\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '1' })}\n                                onClick={() => { this.toggleTab('1') }}\n                            >\n                                <span className=\"d-sm-block px-3\">Assets</span>\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '2' })}\n                                onClick={() => { this.toggleTab('2'); }}\n                            >\n                                <span className=\"d-sm-block px-3\">Liabilities</span>\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '3' })}\n                                onClick={() => { this.toggleTab('3'); }}\n                            >\n                                <span className=\"d-sm-block px-3\">Equity</span>\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '4' })}\n                                onClick={() => { this.toggleTab('4'); }}\n                            >\n                                <span className=\"d-sm-block px-3\">Income</span>\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '5' })}\n                                onClick={() => { this.toggleTab('5'); }}\n                            >\n                                <span className=\"d-sm-block px-3\">Expenses</span>\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={this.state.activeTab} className=\"rounded-0\">\n                        <TabPane tabId=\"1\"> {/* tabId for a tab must be the same as AccountTypeId for that tab */}\n                            {this.state.accountSubtypes.slice()\n                                .filter((accountSubtype => accountSubtype.accountTypeId === 1))\n                                .map((accountSubtype) => {\n                                    return (\n                                        <div key={accountSubtype.accountSubtypeId}>\n                                            <div className=\"row bg-light my-2 py-1 px-2 border\">\n                                                <h5 className=\"my-0\">{accountSubtype.accountSubtypeName}</h5>\n                                            </div>\n                                            <div>\n                                                {this.state.accounts.slice()\n                                                    .filter(account => account.accountSubtypeId === accountSubtype.accountSubtypeId)\n                                                    .map(account => {\n                                                        return (\n                                                            <div className={\"d-flex justify-content-between border-bottom\"} key={account.accountId}>\n                                                                <span>{account.accountName}</span>\n                                                                <span className={account.debitTotal < account.creditTotal ? \"text-red\" : \"\"}>\n                                                                    {new Intl.NumberFormat(localization.locale, { style: 'currency', currency: localization.currency }).format(account.debitTotal - account.creditTotal)}\n                                                                </span>\n                                                            </div>\n                                                        )\n                                                    })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                        </TabPane>\n                    </TabContent>\n                    <TabContent activeTab={this.state.activeTab} className=\"rounded-0\">\n                        <TabPane tabId=\"2\"> {/* tabId for a tab must be the same as AccountTypeId for that tab */}\n                            {this.state.accountSubtypes.slice()\n                                .filter((accountSubtype => accountSubtype.accountTypeId === 2))\n                                .map((accountSubtype) => {\n                                    return (\n                                        <div key={accountSubtype.accountSubtypeId}>\n                                            <div className=\"row bg-light my-2 py-1 px-2 border\">\n                                                <h5 className=\"my-0\">{accountSubtype.accountSubtypeName}</h5>\n                                            </div>\n                                            <div>\n                                                {this.state.accounts.slice()\n                                                    .filter(account => account.accountSubtypeId === accountSubtype.accountSubtypeId)\n                                                    .map(account => {\n                                                        return (\n                                                            <div className={\"d-flex justify-content-between border-bottom\"} key={account.accountId}>\n                                                                <span>{account.accountName}</span>\n                                                                <span className={account.debitTotal < account.creditTotal ? \"text-red\" : \"\"}>\n                                                                    {new Intl.NumberFormat(localization.locale, { style: 'currency', currency: localization.currency }).format(account.debitTotal - account.creditTotal)}\n                                                                </span>\n                                                            </div>\n                                                        )\n                                                    })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                        </TabPane>\n                    </TabContent>\n                    <TabContent activeTab={this.state.activeTab} className=\"rounded-0\">\n                        <TabPane tabId=\"3\"> {/* tabId for a tab must be the same as AccountTypeId for that tab */}\n                            {this.state.accountSubtypes.slice()\n                                .filter((accountSubtype => accountSubtype.accountTypeId === 3))\n                                .map((accountSubtype) => {\n                                    return (\n                                        <div key={accountSubtype.accountSubtypeId}>\n                                            <div className=\"row bg-light my-2 py-1 px-2 border\">\n                                                <h5 className=\"my-0\">{accountSubtype.accountSubtypeName}</h5>\n                                            </div>\n                                            <div>\n                                                {this.state.accounts.slice()\n                                                    .filter(account => account.accountSubtypeId === accountSubtype.accountSubtypeId)\n                                                    .map(account => {\n                                                        return (\n                                                            <div className={\"d-flex justify-content-between border-bottom\"} key={account.accountId}>\n                                                                <span>{account.accountName}</span>\n                                                                <span className={account.debitTotal < account.creditTotal ? \"text-red\" : \"\"}>\n                                                                    {new Intl.NumberFormat(localization.locale, { style: 'currency', currency: localization.currency }).format(account.debitTotal - account.creditTotal)}\n                                                                </span>\n                                                            </div>\n                                                        )\n                                                    })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                        </TabPane>\n                    </TabContent>\n                    <TabContent activeTab={this.state.activeTab} className=\"rounded-0\">\n                        <TabPane tabId=\"4\"> {/* tabId for a tab must be the same as AccountTypeId for that tab */}\n                            {this.state.accountSubtypes.slice()\n                                .filter((accountSubtype => accountSubtype.accountTypeId === 4))\n                                .map((accountSubtype) => {\n                                    return (\n                                        <div key={accountSubtype.accountSubtypeId}>\n                                            <div className=\"row bg-light my-2 py-1 px-2 border\">\n                                                <h5 className=\"my-0\">{accountSubtype.accountSubtypeName}</h5>\n                                            </div>\n                                            <div>\n                                                {this.state.accounts.slice()\n                                                    .filter(account => account.accountSubtypeId === accountSubtype.accountSubtypeId)\n                                                    .map(account => {\n                                                        return (\n                                                            <div className={\"d-flex justify-content-between border-bottom\"} key={account.accountId}>\n                                                                <span>{account.accountName}</span>\n                                                                <span className={account.debitTotal < account.creditTotal ? \"text-red\" : \"\"}>\n                                                                    {new Intl.NumberFormat(localization.locale, { style: 'currency', currency: localization.currency }).format(account.debitTotal - account.creditTotal)}\n                                                                </span>\n                                                            </div>\n                                                        )\n                                                    })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                        </TabPane>\n                    </TabContent>\n                    <TabContent activeTab={this.state.activeTab} className=\"rounded-0\">\n                        <TabPane tabId=\"5\"> {/* tabId for a tab must be the same as AccountTypeId for that tab */}\n                            {this.state.accountSubtypes.slice()\n                                .filter((accountSubtype => accountSubtype.accountTypeId === 5))\n                                .map((accountSubtype) => {\n                                    return (\n                                        <div key={accountSubtype.accountSubtypeId}>\n                                            <div className=\"row bg-light my-2 py-1 px-2 border\">\n                                                <h5 className=\"my-0\">{accountSubtype.accountSubtypeName}</h5>\n                                            </div>\n                                            <div>\n                                                {this.state.accounts.slice()\n                                                    .filter(account => account.accountSubtypeId === accountSubtype.accountSubtypeId)\n                                                    .map(account => {\n                                                        return (\n                                                            <div className={\"d-flex justify-content-between border-bottom\"} key={account.accountId}>\n                                                                <span>{account.accountName}</span>\n                                                                <span className={account.debitTotal < account.creditTotal ? \"text-red\" : \"\"}>\n                                                                    {new Intl.NumberFormat(localization.locale, { style: 'currency', currency: localization.currency }).format(account.debitTotal - account.creditTotal)}\n                                                                </span>\n                                                            </div>\n                                                        )\n                                                    })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                        </TabPane>\n                    </TabContent>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Accounts;"]},"metadata":{},"sourceType":"module"}