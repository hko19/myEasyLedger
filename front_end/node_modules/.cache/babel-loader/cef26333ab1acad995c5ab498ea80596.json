{"ast":null,"code":"import _slicedToArray from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-table.jsx\";\nimport React from 'react';\nimport TableOfJournalEntries from '../../../components/table/table-of-journal-entries';\nimport axios from 'axios';\n\nfunction JournalTable(_ref) {\n  var API_URL = _ref.API_URL,\n      localization = _ref.localization;\n  var columns = React.useMemo(function () {\n    return [// accessor is the \"key\" in the data},\n    {\n      Header: 'Date',\n      accessor: 'journalEntryDate',\n      width: \"10%\"\n    }, {\n      Header: 'Description',\n      accessor: 'description',\n      width: \"50%\"\n    }, {\n      Header: 'Debit',\n      accessor: 'debitAmount',\n      width: \"20%\"\n    }, {\n      Header: 'Credit',\n      accessor: 'creditAmount',\n      width: \"20%\"\n    }];\n  }, []);\n  var ORGANIZATION_ID = '1'; // We'll start our table without any data\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      pageCount = _React$useState4[0],\n      setPageCount = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      elementCount = _React$useState6[0],\n      setElementCount = _React$useState6[1];\n\n  var fetchIdRef = React.useRef(0);\n  var fetchData = React.useCallback(function (_ref2) {\n    var pageSize = _ref2.pageSize,\n        pageIndex = _ref2.pageIndex;\n    // This will get called when the table needs new data\n    //fetch data from Easy Ledger API\n    var url = \"\".concat(API_URL, \"/organization/\").concat(ORGANIZATION_ID, \"/journalEntryViewModel/?page=\").concat(pageIndex, \"&size=\").concat(pageSize);\n    axios.get(url).then(function (response) {\n      var dataContent = response.data.content;\n      dataContent.forEach(function (entry) {\n        entry.debitAmount = entry.debitAmount;\n        entry.creditAmount = entry.creditAmount;\n      });\n      setData(dataContent);\n      setPageCount(response.data.totalPages);\n      setElementCount(response.data.totalElements);\n    }).catch(console.log);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableOfJournalEntries, {\n    columns: columns,\n    data: data,\n    fetchData: fetchData,\n    pageCount: pageCount,\n    elementCount: elementCount,\n    organizationId: ORGANIZATION_ID,\n    API_URL: API_URL,\n    localization: localization,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default JournalTable;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-table.jsx"],"names":["React","TableOfJournalEntries","axios","JournalTable","API_URL","localization","columns","useMemo","Header","accessor","width","ORGANIZATION_ID","useState","data","setData","pageCount","setPageCount","elementCount","setElementCount","fetchIdRef","useRef","fetchData","useCallback","pageSize","pageIndex","url","get","then","response","dataContent","content","forEach","entry","debitAmount","creditAmount","totalPages","totalElements","catch","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TableOfJournalEntries from '../../../components/table/table-of-journal-entries';\nimport axios from 'axios';\n\n\nfunction JournalTable({API_URL, localization}) {\n\n  const columns = React.useMemo(\n    () => [ // accessor is the \"key\" in the data},\n      { Header: 'Date', accessor: 'journalEntryDate', width:\"10%\"},\n      { Header: 'Description', accessor: 'description', width:\"50%\"},\n      { Header: 'Debit', accessor: 'debitAmount', width:\"20%\"},\n      { Header: 'Credit', accessor: 'creditAmount', width: \"20%\"},\n    ],\n    []\n  )\n  const ORGANIZATION_ID = '1';\n\n  // We'll start our table without any data\n  const [data, setData] = React.useState([])\n  const [pageCount, setPageCount] = React.useState(0)\n  const [elementCount, setElementCount] = React.useState(0)\n  const fetchIdRef = React.useRef(0)\n\n  const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\n    // This will get called when the table needs new data\n        \n    //fetch data from Easy Ledger API\n    const url = `${API_URL}/organization/${ORGANIZATION_ID}/journalEntryViewModel/?page=${pageIndex}&size=${pageSize}`;\n    axios.get(url).then(response => {\n        var dataContent = response.data.content;\n        dataContent.forEach( entry => {\n          entry.debitAmount = entry.debitAmount;\n          entry.creditAmount = entry.creditAmount;\n        })\n        setData(dataContent);\n        setPageCount(response.data.totalPages);\n        setElementCount(response.data.totalElements);\n      })\n      .catch(console.log);\n  }, [])\n  \n  return (\n    <div >\n      <TableOfJournalEntries\n        columns={columns}\n        data={data}\n        fetchData={fetchData}\n        pageCount={pageCount}\n        elementCount={elementCount}\n        organizationId={ORGANIZATION_ID}\n        API_URL={API_URL}\n        localization={localization}\n      />\n    </div>\n  )\n}\n\n\n\n\nexport default JournalTable"]},"metadata":{},"sourceType":"module"}