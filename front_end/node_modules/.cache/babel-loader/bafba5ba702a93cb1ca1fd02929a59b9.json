{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-table.jsx\";\nimport React from 'react';\nimport { useTable } from 'react-table';\n\nfunction LineItemTable(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      journalEntryDescription = _ref.journalEntryDescription,\n      journalEntryDate = _ref.journalEntryDate,\n      localization = _ref.localization;\n  var columns = React.useMemo(function () {\n    return [// accessor is the \"key\" in the data},\n    {\n      Header: 'Description',\n      accessor: 'description'\n    }, {\n      Header: 'Account',\n      accessor: 'accountName'\n    }, {\n      Header: 'Category',\n      accessor: 'categoryName'\n    }, {\n      Header: 'Debit',\n      accessor: 'debitAmount'\n    }, {\n      Header: 'Credit',\n      accessor: 'creditAmount'\n    }];\n  }, []);\n\n  var _useTable = useTable({\n    columns,\n    data\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  var sumAmountsInColumn = function sumAmountsInColumn(columnName) {\n    var sum = 0;\n    data.forEach(function (row) {\n      sum += row[columnName];\n    });\n\n    if (isNaN(sum)) {\n      return 0;\n    } else {\n      return sum;\n    }\n  };\n\n  var formatCell = function formatCell(cell) {\n    var columnId = cell.column.id;\n\n    switch (columnId) {\n      case \"debitAmount\":\n      case \"creditAmount\":\n        return new Intl.NumberFormat(localization.locale, {\n          style: 'currency',\n          currency: localization.currency\n        }).format(cell.value);\n\n      default:\n        return cell.value;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 35\n    }\n  }, \"Date\")), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 63\n    }\n  }, journalEntryDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 35\n    }\n  }, \"Description\")), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 70\n    }\n  }, journalEntryDescription)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), headerGroup.headers.map(function (column) {\n      return (\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }\n        }), column.render('Header'))\n      );\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), rows.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }\n      }), formatCell(cell));\n    }));\n  })), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Total\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, new Intl.NumberFormat(localization.locale, {\n    style: 'currency',\n    currency: localization.currency\n  }).format(sumAmountsInColumn(\"debitAmount\")))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, new Intl.NumberFormat(localization.locale, {\n    style: 'currency',\n    currency: localization.currency\n  }).format(sumAmountsInColumn(\"creditAmount\")))))))));\n}\n\nexport default LineItemTable;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-table.jsx"],"names":["React","useTable","LineItemTable","data","journalEntryDescription","journalEntryDate","localization","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","sumAmountsInColumn","columnName","sum","forEach","row","isNaN","formatCell","cell","columnId","column","id","Intl","NumberFormat","locale","style","currency","format","value","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","i","getRowProps","cells","getCellProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable } from 'react-table'\n\nfunction LineItemTable({ data, journalEntryDescription, journalEntryDate, localization}) {\n\n  const columns = React.useMemo(\n    () => [ // accessor is the \"key\" in the data},\n      { Header: 'Description', accessor: 'description'},\n      { Header: 'Account', accessor: 'accountName'},\n      { Header: 'Category', accessor: 'categoryName'},\n      { Header: 'Debit', accessor: 'debitAmount'},\n      { Header: 'Credit', accessor: 'creditAmount'},\n    ],\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data\n    }\n  )\n\n  const sumAmountsInColumn = columnName => {\n    let sum = 0;\n    data.forEach(row => {\n        sum += row[columnName];\n    });\n    if (isNaN(sum)) {\n        return 0\n    } else {\n        return sum;\n    }\n  }\n\n  const formatCell = cell => {\n    let columnId = cell.column.id;\n    switch (columnId) {\n      case \"debitAmount\":\n      case \"creditAmount\":\n        return (new Intl.NumberFormat(localization.locale, { style: 'currency', currency:localization.currency }).format(cell.value));\n      default:\n        return cell.value;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row m-b-10\">\n        <div className=\"col-md-1\"><strong>Date</strong></div> <div className=\"col-md-11\">{journalEntryDate}</div>\n      </div>\n      <div className=\"row m-b-10\">\n        <div className=\"col-md-1\"><strong>Description</strong></div> <div className=\"col-md-11\">{journalEntryDescription}</div>\n      </div>\n      <br></br>\n      \n      <div className=\"table-responsive\">\n      <table className=\"table\"{...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td {...cell.getCellProps()}>{formatCell(cell)}</td>\n                    )\n                  })}\n                </tr>\n              )}\n          )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td><strong>Total</strong></td>\n            <td></td>\n            <td></td>\n            <td><strong>{new Intl.NumberFormat(localization.locale, { style: 'currency', currency:localization.currency }).format(sumAmountsInColumn(\"debitAmount\"))}</strong></td>\n            <td><strong>{new Intl.NumberFormat(localization.locale, { style: 'currency', currency:localization.currency }).format(sumAmountsInColumn(\"creditAmount\"))}</strong></td>\n          </tr>\n        </tfoot>\n      </table>\n      </div>\n    </>\n  )\n}\n\nexport default LineItemTable\n"]},"metadata":{},"sourceType":"module"}