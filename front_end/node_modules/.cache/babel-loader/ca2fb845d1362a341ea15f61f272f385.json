{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-table.jsx\";\nimport React from 'react';\nimport { useTable, useSortBy } from 'react-table';\n\nfunction LineItemTable(_ref) {\n  var _this = this;\n\n  var entry = _ref.entry;\n  var columns = React.useMemo(function () {\n    return [// accessor is the \"key\" in the data},\n    {\n      Header: 'Account',\n      accessor: 'accountName'\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }, {\n      Header: 'Amount',\n      accessor: 'amount'\n    }, {\n      Header: 'isCredit',\n      accessor: 'isCredit'\n    }, {\n      Header: 'Category',\n      accessor: 'categoryName'\n    }];\n  }, []);\n  var data = entry.lineItems;\n\n  var _useTable = useTable({\n    columns,\n    data\n  }, useSortBy),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), headerGroup.headers.map(function (column) {\n      return (\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }), column.render('Header'), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }\n        }, column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''))\n      );\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), rows.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Showing the first 20 results of \", rows.length, \" rows\"));\n}\n\nexport default LineItemTable;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-table.jsx"],"names":["React","useTable","useSortBy","LineItemTable","entry","columns","useMemo","Header","accessor","data","lineItems","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;;AAEA,SAASC,aAAT,OAAkC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AAChC,MAAMC,OAAO,GAAGL,KAAK,CAACM,OAAN,CACd;AAAA,WAAM,CAAE;AACN;AAAEC,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KADI,EAEJ;AAAED,MAAAA,MAAM,EAAE,aAAV;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC,KAFI,EAGJ;AAAED,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAHI,EAIJ;AAAED,MAAAA,MAAM,EAAE,UAAV;AAAsBC,MAAAA,QAAQ,EAAE;AAAhC,KAJI,EAKJ;AAAED,MAAAA,MAAM,EAAE,UAAV;AAAsBC,MAAAA,QAAQ,EAAE;AAAhC,KALI,CAAN;AAAA,GADc,EAQd,EARc,CAAhB;AAUA,MAAMC,IAAI,GAAGL,KAAK,CAACM,SAAnB;;AAXgC,kBAmB5BT,QAAQ,CACV;AACEI,IAAAA,OADF;AAEEI,IAAAA;AAFF,GADU,EAKVP,SALU,CAnBoB;AAAA,MAc9BS,aAd8B,aAc9BA,aAd8B;AAAA,MAe9BC,iBAf8B,aAe9BA,iBAf8B;AAAA,MAgB9BC,YAhB8B,aAgB9BA,YAhB8B;AAAA,MAiB9BC,IAjB8B,aAiB9BA,IAjB8B;AAAA,MAkB9BC,UAlB8B,aAkB9BA,UAlB8B;;AA6BhC,sBACE,uDACE,+CAAWJ,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACG,GAAb,CAAiB,UAAAC,WAAW;AAAA,wBAC3B,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,UAAAI,MAAM;AAAA;AAAA;AAC7B;AACA;AACA,oDAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACGF,MAAM,CAACG,MAAP,CAAc,QAAd,CADH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,MAAM,CAACI,QAAP,GACGJ,MAAM,CAACK,YAAP,GACE,KADF,GAEE,KAHL,GAIG,EALN,CAHF;AAH6B;AAAA,KAA9B,CADH,CAD2B;AAAA,GAA5B,CADH,CADF,eAsBE,+CAAWb,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACE,GAAL,CACC,UAACU,GAAD,EAAMC,CAAN,EAAY;AACVZ,IAAAA,UAAU,CAACW,GAAD,CAAV;AACA,wBACE,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUb,GAAV,CAAc,UAAAc,IAAI,EAAI;AACrB,0BACE,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACP,MAAL,CAAY,MAAZ,CAA9B,CADF;AAGD,KAJA,CADH,CADF;AAQE,GAXL,CADH,CAtBF,CADF,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,eAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAsCT,IAAI,CAACkB,MAA3C,UAxCF,CADF;AA4CD;;AAED,eAAe7B,aAAf","sourcesContent":["import React from 'react'\nimport { useTable, useSortBy } from 'react-table'\n\nfunction LineItemTable({ entry }) {\n  const columns = React.useMemo(\n    () => [ // accessor is the \"key\" in the data},\n      { Header: 'Account', accessor: 'accountName'},\n      { Header: 'Description', accessor: 'description'},\n      { Header: 'Amount', accessor: 'amount'},\n      { Header: 'isCredit', accessor: 'isCredit'},\n      { Header: 'Category', accessor: 'categoryName'},\n    ],\n    []\n  )\n  const data = entry.lineItems;\n  \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  )\n\n\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' ðŸ”½'\n                        : ' ðŸ”¼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                    )\n                  })}\n                </tr>\n              )}\n          )}\n        </tbody>\n      </table>\n      <br />\n      <div>Showing the first 20 results of {rows.length} rows</div>\n    </>\n  )\n}\n\nexport default LineItemTable\n"]},"metadata":{},"sourceType":"module"}