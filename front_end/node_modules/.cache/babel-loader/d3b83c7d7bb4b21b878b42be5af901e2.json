{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-form.jsx\";\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport { Alert } from 'reactstrap';\n\nfunction LineItemForm(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      setLineItemData = _ref.setLineItemData,\n      journalEntryDate = _ref.journalEntryDate,\n      setJournalEntryDate = _ref.setJournalEntryDate,\n      journalEntryDescription = _ref.journalEntryDescription,\n      setJournalEntryDescription = _ref.setJournalEntryDescription,\n      categories = _ref.categories,\n      accounts = _ref.accounts,\n      localization = _ref.localization,\n      alertMessages = _ref.alertMessages;\n  var columns = React.useMemo(function () {\n    return [// accessor is the \"key\" in the data},\n    {\n      Header: 'Description',\n      accessor: 'description',\n      width: '40%',\n      minWidth: \"9em\"\n    }, {\n      Header: 'Account',\n      accessor: 'accountName',\n      width: '18%',\n      minWidth: \"6em\"\n    }, {\n      Header: 'Category',\n      accessor: 'categoryName',\n      width: '18%',\n      minWidth: \"6em\"\n    }, {\n      Header: 'Debit',\n      accessor: 'debitAmount',\n      width: '10%',\n      minWidth: \"6em\"\n    }, {\n      Header: 'Credit',\n      accessor: 'creditAmount',\n      width: '10%',\n      minWidth: \"6em\"\n    }];\n  }, []);\n\n  var _useTable = useTable({\n    columns,\n    data\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  var returnFormByColumnType = function returnFormByColumnType(cell) {\n    var columnId = cell.column.id;\n    var accountTypesWithCategories = [3, 4, 5];\n\n    switch (columnId) {\n      case \"description\":\n        return /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: cell.value ? cell.value : '',\n          onChange: function onChange(event) {\n            var updatedLineItemData = data.slice();\n            updatedLineItemData[cell.row.index].description = event.target.value;\n            setLineItemData(updatedLineItemData);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        });\n\n      case \"debitAmount\":\n        return /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          value: cell.value ? cell.value : '',\n          step: \"any\",\n          onChange: function onChange(event) {\n            var updatedLineItemData = data.slice();\n            updatedLineItemData[cell.row.index].debitAmount = parseFloat(event.target.value);\n            updatedLineItemData[cell.row.index].creditAmount = null;\n            setLineItemData(updatedLineItemData);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }\n        });\n\n      case \"creditAmount\":\n        return /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          value: cell.value ? cell.value : '',\n          step: \"any\",\n          onChange: function onChange(event) {\n            var updatedLineItemData = data.slice();\n            updatedLineItemData[cell.row.index].creditAmount = parseFloat(event.target.value);\n            updatedLineItemData[cell.row.index].debitAmount = null;\n            setLineItemData(updatedLineItemData);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        });\n\n      case \"accountName\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n          value: data[cell.row.index].accountId,\n          className: \"form-control\",\n          onChange: function onChange(event) {\n            var updatedLineItemData = data.slice();\n            var selectedAccount = accounts.find(function (account) {\n              return account.accountId == event.target.value;\n            });\n            updatedLineItemData[cell.row.index].accountId = selectedAccount.accountId;\n            updatedLineItemData[cell.row.index].accountName = selectedAccount.accountName;\n            updatedLineItemData[cell.row.index].accountTypeId = selectedAccount.accountTypeId;\n\n            if (!accountTypesWithCategories.includes(selectedAccount.accountTypeId)) {\n              updatedLineItemData[cell.row.index].categoryId = null;\n              updatedLineItemData[cell.row.index].categoryName = null;\n            }\n\n            setLineItemData(updatedLineItemData);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          disabled: true,\n          className: \"text-italic\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }\n        }, \"Select an account...\"), accounts.map(function (account) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: account.accountId,\n            value: account.accountId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 41\n            }\n          }, account.accountName);\n        })));\n\n      case \"categoryName\":\n        if (accountTypesWithCategories.includes(data[cell.row.index].accountTypeId)) {\n          var categoriesForThisAccountType = categories.filter(function (category) {\n            return category.accountTypeId == data[cell.row.index].accountTypeId;\n          });\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n            value: data[cell.row.index].categoryId ? data[cell.row.index].categoryId : \"\",\n            className: \"form-control\",\n            onChange: function onChange(event) {\n              var updatedLineItemData = data.slice();\n              var selectedCategory = categories.find(function (category) {\n                return category.categoryId == event.target.value;\n              });\n              updatedLineItemData[cell.row.index].categoryId = selectedCategory.categoryId;\n              updatedLineItemData[cell.row.index].categoryName = selectedCategory.categoryName;\n              setLineItemData(updatedLineItemData);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }\n          }, categoriesForThisAccountType.map(function (category) {\n            return /*#__PURE__*/React.createElement(\"option\", {\n              key: category.categoryId,\n              value: category.categoryId,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 45\n              }\n            }, category.categoryName);\n          })));\n        } else {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n            value: \"\",\n            readOnly: true,\n            className: \"form-control\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }\n          }));\n        }\n\n      default:\n        return cell.value;\n    }\n  };\n\n  var addEmptyLineItem = function addEmptyLineItem() {\n    var updatedLineItemData = data.slice();\n    updatedLineItemData.push({\n      lineItemId: \"\",\n      accountName: \"\",\n      accountId: \"\",\n      accountTypeId: \"\",\n      description: \"\",\n      debitAmount: 0,\n      creditAmount: 0,\n      categoryName: \"\",\n      categoryId: \"\"\n    });\n    setLineItemData(updatedLineItemData);\n  };\n\n  var sumAmountsInColumn = function sumAmountsInColumn(columnName) {\n    var sum = 0;\n    data.forEach(function (row) {\n      sum += row[columnName];\n    });\n\n    if (isNaN(sum)) {\n      return 0;\n    } else {\n      return sum;\n    }\n  };\n\n  var removeRow = function removeRow(i) {\n    var updatedLineItemData = data.slice();\n    updatedLineItemData.splice(i, 1);\n    setLineItemData(updatedLineItemData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, alertMessages.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: \"danger\",\n    className: \"m-b-15\",\n    style: {\n      borderStyle: \"solid\",\n      borderColor: \"FireBrick\",\n      borderWidth: \"1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, alertMessages.map(function (alertMessage, i) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, alertMessage);\n  }))))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 43\n    }\n  }, \"Date\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-control\",\n    value: journalEntryDate,\n    onChange: function onChange(event) {\n      return setJournalEntryDate(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 43\n    }\n  }, \"Description\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: journalEntryDescription,\n    onChange: function onChange(event) {\n      return setJournalEntryDescription(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }), headerGroup.headers.map(function (column) {\n      return (\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n          style: {\n            width: column.width,\n            minWidth: column.minWidth\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 37\n          }\n        }), column.render('Header'))\n      );\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: \"4%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 33\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }), rows.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 37\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 49\n        }\n      }), returnFormByColumnType(cell));\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-lg btn-icon btn-light\",\n      onClick: function onClick() {\n        return removeRow(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ion ion-md-close fa-fw fa-lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 49\n      }\n    }))));\n  })), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, \"Total\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 33\n    }\n  }, new Intl.NumberFormat(localization.locale, {\n    style: 'currency',\n    currency: localization.currency\n  }).format(sumAmountsInColumn(\"debitAmount\")))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, new Intl.NumberFormat(localization.locale, {\n    style: 'currency',\n    currency: localization.currency\n  }).format(sumAmountsInColumn(\"creditAmount\")))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block row\",\n    style: {\n      margin: \"auto\",\n      padding: \"1em\",\n      borderStyle: \"solid\",\n      borderColor: \"LightGray\",\n      borderWidth: \"1px\"\n    },\n    onClick: function onClick() {\n      return addEmptyLineItem();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ion ion-md-add fa-fw fa-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }), \"Add a Line Item\")));\n}\n\nexport default LineItemForm;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-form.jsx"],"names":["React","useTable","Alert","LineItemForm","data","setLineItemData","journalEntryDate","setJournalEntryDate","journalEntryDescription","setJournalEntryDescription","categories","accounts","localization","alertMessages","columns","useMemo","Header","accessor","width","minWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","returnFormByColumnType","cell","columnId","column","id","accountTypesWithCategories","value","event","updatedLineItemData","slice","row","index","description","target","debitAmount","parseFloat","creditAmount","accountId","selectedAccount","find","account","accountName","accountTypeId","includes","categoryId","categoryName","map","categoriesForThisAccountType","filter","category","selectedCategory","addEmptyLineItem","push","lineItemId","sumAmountsInColumn","columnName","sum","forEach","isNaN","removeRow","i","splice","length","borderStyle","borderColor","borderWidth","alertMessage","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","getCellProps","Intl","NumberFormat","locale","style","currency","format","margin","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable } from 'react-table'\nimport { Alert } from 'reactstrap'\n\nfunction LineItemForm({\n    data, setLineItemData,\n    journalEntryDate, setJournalEntryDate,\n    journalEntryDescription, setJournalEntryDescription,\n    categories,\n    accounts,\n    localization,\n    alertMessages\n}) {\n\n    const columns = React.useMemo(\n        () => [ // accessor is the \"key\" in the data},\n            { Header: 'Description', accessor: 'description', width:'40%', minWidth:\"9em\" },\n            { Header: 'Account', accessor: 'accountName', width:'18%', minWidth:\"6em\" },\n            { Header: 'Category', accessor: 'categoryName', width:'18%', minWidth:\"6em\" },\n            { Header: 'Debit', accessor: 'debitAmount', width:'10%', minWidth:\"6em\" },\n            { Header: 'Credit', accessor: 'creditAmount', width:'10%', minWidth:\"6em\" },\n        ],\n        []\n    )\n\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable(\n        {\n            columns,\n            data\n        }\n    )\n    \n    const returnFormByColumnType = cell => {\n        const columnId = cell.column.id;\n        const accountTypesWithCategories = [3, 4, 5];\n        switch (columnId) {\n            case \"description\":\n                return( \n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={cell.value ? cell.value : ''}\n                        onChange={event => {\n                            let updatedLineItemData = data.slice();\n                            updatedLineItemData[cell.row.index].description = event.target.value;\n                            setLineItemData(updatedLineItemData);\n                        }}\n                    />\n                )\n            case \"debitAmount\":\n                return(\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        value={cell.value ? cell.value : ''}\n                        step=\"any\"\n                        onChange={event => {\n                            let updatedLineItemData = data.slice();\n                            updatedLineItemData[cell.row.index].debitAmount = parseFloat(event.target.value);\n                            updatedLineItemData[cell.row.index].creditAmount = null;\n                            setLineItemData(updatedLineItemData);\n                        }}\n                    />\n                )\n            case \"creditAmount\":\n                return(\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        value={cell.value ? cell.value : ''}\n                        step=\"any\"\n                        onChange={event => {\n                            let updatedLineItemData = data.slice();\n                            updatedLineItemData[cell.row.index].creditAmount = parseFloat(event.target.value);\n                            updatedLineItemData[cell.row.index].debitAmount = null;\n                            setLineItemData(updatedLineItemData);\n                        }}\n                    />\n                )\n            case \"accountName\":\n                return(\n                    <>\n                        <select\n                            value={(data[cell.row.index].accountId)}\n                            className=\"form-control\"\n                            onChange={event => {\n                                let updatedLineItemData = data.slice();\n                                let selectedAccount = accounts.find(account => account.accountId == event.target.value);\n                                updatedLineItemData[cell.row.index].accountId = selectedAccount.accountId;\n                                updatedLineItemData[cell.row.index].accountName = selectedAccount.accountName;\n                                updatedLineItemData[cell.row.index].accountTypeId = selectedAccount.accountTypeId;\n                                if (!accountTypesWithCategories.includes(selectedAccount.accountTypeId)) {\n                                    updatedLineItemData[cell.row.index].categoryId = null;\n                                    updatedLineItemData[cell.row.index].categoryName = null;\n                                }\n                                setLineItemData(updatedLineItemData);\n                            }}\n                        >\n                            <option value='' disabled className=\"text-italic\">Select an account...</option>\n                            {accounts.map(\n                                (account) => {\n                                    return(\n                                        <option key={account.accountId} value={account.accountId}>{account.accountName}</option>\n                                    )\n                                }\n                            )}\n                        </select>\n                    </>\n                )\n            case \"categoryName\":\n                if (accountTypesWithCategories.includes(data[cell.row.index].accountTypeId)) {\n                    const categoriesForThisAccountType = categories.filter(category => category.accountTypeId == data[cell.row.index].accountTypeId);\n                    return(\n                        <>\n                            <select\n                                value={data[cell.row.index].categoryId ? data[cell.row.index].categoryId : \"\" }\n                                className=\"form-control\"\n                                onChange={event => {\n                                    let updatedLineItemData = data.slice();\n                                    let selectedCategory = categories.find(category => category.categoryId == event.target.value);\n                                    updatedLineItemData[cell.row.index].categoryId = selectedCategory.categoryId;\n                                    updatedLineItemData[cell.row.index].categoryName = selectedCategory.categoryName;\n                                    setLineItemData(updatedLineItemData);\n                                }}\n                            >\n                                {categoriesForThisAccountType.map(\n                                    (category) => {\n                                        return(\n                                            <option key={category.categoryId} value={category.categoryId}>{category.categoryName}</option>\n                                        )\n                                    }\n                                )}\n                            </select>\n                        </>\n                    )\n                } else {\n                    return(\n                        <>\n                            <select\n                                value=\"\"\n                                readOnly\n                                className=\"form-control\">\n                            </select>\n                        </>\n                    )\n                }\n            default:\n                return (cell.value);\n        }\n    }\n\n    const addEmptyLineItem = () => {\n        let updatedLineItemData = data.slice();\n        updatedLineItemData.push({\n            lineItemId: \"\",\n            accountName: \"\",\n            accountId: \"\",\n            accountTypeId: \"\",\n            description: \"\",\n            debitAmount: 0,\n            creditAmount: 0,\n            categoryName: \"\",\n            categoryId: \"\",\n        })\n        setLineItemData(updatedLineItemData);\n    }\n\n    const sumAmountsInColumn = columnName => {\n        let sum = 0;\n        data.forEach(row => {\n            sum += row[columnName];\n        });\n        if (isNaN(sum)) {\n            return 0\n        } else {\n            return sum;\n        }\n    }\n    \n    const removeRow = i => {\n        let updatedLineItemData = data.slice();\n        updatedLineItemData.splice(i, 1);\n        setLineItemData(updatedLineItemData);\n    }\n\n    return (\n        <>\n            { alertMessages.length ? \n                <div>\n                    <Alert color=\"danger\" className=\"m-b-15\" style={{borderStyle: \"solid\", borderColor:\"FireBrick\", borderWidth: \"1px\"}}>\n                        <div className=\"d-flex justify-content-center\">\n                            <ul className=\"my-0\">\n                                {alertMessages.map((alertMessage, i) => (\n                                    <li key={i}>{alertMessage}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    </Alert>\n                </div> : null\n            }\n\n            <div className=\"row m-b-10\">\n                <div className=\"col-md-1\"><strong>Date</strong></div> \n                <div className=\"col-md-2\">\n                    <input \n                        type=\"date\" \n                        className=\"form-control\"\n                        value={journalEntryDate} \n                        onChange={event => setJournalEntryDate(event.target.value)}/>\n                    </div>\n            </div>\n            <div className=\"row m-b-10\">\n                <div className=\"col-md-1\"><strong>Description</strong></div> \n                <div className=\"col-md-11\">\n                    <input \n                        type=\"text\" \n                        className=\"form-control\"\n                        value={journalEntryDescription} \n                        onChange={event => setJournalEntryDescription(event.target.value)}/>\n                    </div>\n            </div>\n            <br></br>\n\n            <div className=\"table-responsive\">\n                <table className=\"table\"{...getTableProps()}>\n                    <thead>\n                        {headerGroups.map(headerGroup => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => (\n                                    // Add the sorting props to control sorting. For this example\n                                    // we can add them into the header props\n                                    <th {...column.getHeaderProps()} style={{width: column.width, minWidth: column.minWidth}}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                                <th style={{width: \"4%\"}}></th>\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {rows.map(\n                            (row, i) => {\n                                prepareRow(row);\n                                return (\n                                    <tr {...row.getRowProps()}>\n                                        {row.cells.map(cell => {\n                                            return (\n                                                <td {...cell.getCellProps()}>\n                                                    {returnFormByColumnType(cell)}\n                                                </td>\n                                            )\n                                        })}\n                                        <td>\n                                            <button className=\"btn btn-lg btn-icon btn-light\" onClick={() => removeRow(i)}>\n                                                <i className=\"ion ion-md-close fa-fw fa-lg\"></i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        )}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td><strong>Total</strong></td>\n                            <td></td>\n                            <td></td>\n                            <td><strong>{new Intl.NumberFormat(localization.locale, { style: 'currency', currency:localization.currency }).format(sumAmountsInColumn(\"debitAmount\"))}</strong></td>\n                            <td><strong>{new Intl.NumberFormat(localization.locale, { style: 'currency', currency:localization.currency }).format(sumAmountsInColumn(\"creditAmount\"))}</strong></td>\n                            <td></td>\n                        </tr>\n                    </tfoot>\n                </table>\n                <button className=\"btn btn-light btn-block row\" style={{margin:\"auto\", padding:\"1em\", borderStyle:\"solid\", borderColor:\"LightGray\", borderWidth:\"1px\"}} onClick={() => addEmptyLineItem()}>\n                    <i className=\"ion ion-md-add fa-fw fa-lg\"></i>Add a Line Item\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default LineItemForm\n"]},"metadata":{},"sourceType":"module"}