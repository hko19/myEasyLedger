{"ast":null,"code":"import _slicedToArray from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/table-of-journal-entries.jsx\";\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LineItemTable from './line-item-table';\nimport LineItemForm from './line-item-form'; //Generates a table with react-table 7 using pagination\n// Let's add a fetchData method to our Table component that will be used to fetch\n// new data when pagination state changes\n// We can also add a loading state to let our table know it's loading new data\n\nfunction TableOfJournalEntries(_ref) {\n  var _this = this;\n\n  var columns = _ref.columns,\n      data = _ref.data,\n      fetchData = _ref.fetchData,\n      controlledPageCount = _ref.pageCount,\n      elementCount = _ref.elementCount,\n      organizationId = _ref.organizationId,\n      API_URL = _ref.API_URL,\n      localization = _ref.localization;\n\n  var _useTable = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 10\n    },\n    // Pass our hoisted table state\n    manualPagination: true,\n    // Tell the usePagination\n    // hook that we'll handle our own data fetching\n    // This means we'll also have to provide our own\n    // pageCount.\n    pageCount: controlledPageCount\n  }, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      journalEntryExpanded = _React$useState2[0],\n      setJournalEntryExpanded = _React$useState2[1]; //Whether or not the modal  is shown\n\n\n  var toggleJournalEntryExpanded = function toggleJournalEntryExpanded() {\n    return setJournalEntryExpanded(!journalEntryExpanded);\n  }; //Toggles modal on or off\n\n\n  var expandJournalEntry = function expandJournalEntry(i) {\n    fetchJournalEntry(i);\n    toggleJournalEntryExpanded();\n  };\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      journalEntryId = _React$useState4[0],\n      setJournalEntryId = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      journalEntryDescription = _React$useState6[0],\n      setJournalEntryDescription = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      journalEntryDate = _React$useState8[0],\n      setJournalEntryDate = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      lineItemData = _React$useState10[0],\n      setLineItemData = _React$useState10[1]; //Data to be passed in to lineItemTable\n\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      categories = _React$useState12[0],\n      setCategories = _React$useState12[1];\n\n  var _React$useState13 = React.useState([]),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      accounts = _React$useState14[0],\n      setAccounts = _React$useState14[1];\n\n  var fetchJournalEntry = function fetchJournalEntry(i) {\n    var url = \"\".concat(API_URL, \"/journalEntry/\").concat(i);\n    axios.get(url).then(function (response) {\n      var journalEntry = response.data;\n      var formattedLineItems = [];\n      journalEntry.lineItems.forEach(function (lineItem) {\n        var formattedLineItem = {\n          lineItemId: lineItem.lineItemId,\n          accountName: lineItem.accountName,\n          accountId: lineItem.accountId,\n          accountTypeId: lineItem.accountTypeId,\n          description: lineItem.description,\n          debitAmount: lineItem.isCredit ? null : lineItem.amount,\n          creditAmount: lineItem.isCredit ? lineItem.amount : null,\n          categoryName: lineItem.categoryName,\n          categoryId: lineItem.categoryId\n        };\n        formattedLineItems.push(formattedLineItem);\n      });\n      formattedLineItems.sort(function (a, b) {\n        return a.lineItemId > b.lineItemId ? 1 : -1;\n      }); //sort by LineItemId to preserve insertion order\n\n      setLineItemData(formattedLineItems);\n      setJournalEntryId(journalEntry.journalEntryId);\n      setJournalEntryDescription(journalEntry.description);\n      setJournalEntryDate(journalEntry.journalEntryDate);\n    }).catch(console.log);\n  };\n\n  var fetchCategoriesAndAccounts = function fetchCategoriesAndAccounts(i) {\n    axios.get(\"\".concat(API_URL, \"/organization/\").concat(i, \"/category\")).then(function (response) {\n      var categories = response.data;\n      setCategories(categories);\n    }).catch(console.log);\n    axios.get(\"\".concat(API_URL, \"/organization/\").concat(i, \"/account\")).then(function (response) {\n      var accounts = response.data;\n      setAccounts(accounts);\n    });\n  }; // Listen for changes in pagination and use the state to fetch our new data\n\n\n  React.useEffect(function () {\n    fetchData({\n      pageIndex,\n      pageSize\n    });\n  }, [fetchData, pageIndex, pageSize]);\n  React.useEffect(function () {\n    fetchCategoriesAndAccounts(organizationId);\n  }, [organizationId]); //format table cell value based on column name and locale\n\n  var formatCellValue = function formatCellValue(cell) {\n    var columnId = cell.column.id;\n\n    switch (columnId) {\n      case \"creditAmount\":\n      case \"debitAmount\":\n        return new Intl.NumberFormat(localization.locale, {\n          style: 'currency',\n          currency: localization.currency\n        }).format(cell.value);\n\n      default:\n        return cell.value;\n    }\n  }; // Render the UI for your table\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table table-hover m-b-0 text-inverse\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), headerGroup.headers.map(function (column) {\n      return /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }), column.render('Header'), /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''));\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), page.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return expandJournalEntry(data[i].journalEntryId);\n      }\n    }, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 26\n        }\n      }), formatCellValue(cell));\n    }));\n  }))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: journalEntryExpanded,\n    toggle: function toggle() {\n      return toggleJournalEntryExpanded();\n    },\n    size: \"lg\",\n    style: {\n      maxWidth: '1600px',\n      width: '80%',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: function toggle() {\n      return toggleJournalEntryExpanded();\n    },\n    className: \"bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"Journal Entry\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LineItemForm, {\n    data: lineItemData,\n    setLineItemData: setLineItemData,\n    journalEntryDate: journalEntryDate,\n    setJournalEntryDate: setJournalEntryDate,\n    journalEntryDescription: journalEntryDescription,\n    setJournalEntryDescription: setJournalEntryDescription,\n    categories: categories,\n    accounts: accounts,\n    localization: localization,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      console.log(journalEntryId);\n      console.log(journalEntryDate);\n      console.log(journalEntryDescription);\n      console.log(lineItemData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-white\",\n    onClick: function onClick() {\n      return toggleJournalEntryExpanded();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"Close\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row px-3 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pager m-t-0 m-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: canPreviousPage ? \"previous\" : \"previous disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, canPreviousPage ? /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return previousPage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 43\n    }\n  }, \"\\u2190 Newer\") : null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Showing \", pageIndex * page.length + 1 + \"-\" + (pageIndex + 1) * page.length, \" of \", elementCount, ' ', \"results\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pager m-t-0 m-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: canNextPage ? \"next\" : \"next disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, canNextPage ? /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return nextPage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 39\n    }\n  }, \"Older \\u2192\") : null))));\n}\n\nexport default TableOfJournalEntries;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/table-of-journal-entries.jsx"],"names":["React","useTable","usePagination","Modal","ModalHeader","ModalBody","ModalFooter","Link","axios","LineItemTable","LineItemForm","TableOfJournalEntries","columns","data","fetchData","controlledPageCount","pageCount","elementCount","organizationId","API_URL","localization","initialState","pageIndex","pageSize","manualPagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","state","useState","journalEntryExpanded","setJournalEntryExpanded","toggleJournalEntryExpanded","expandJournalEntry","i","fetchJournalEntry","journalEntryId","setJournalEntryId","journalEntryDescription","setJournalEntryDescription","journalEntryDate","setJournalEntryDate","lineItemData","setLineItemData","categories","setCategories","accounts","setAccounts","url","get","then","response","journalEntry","formattedLineItems","lineItems","forEach","lineItem","formattedLineItem","lineItemId","accountName","accountId","accountTypeId","description","debitAmount","isCredit","amount","creditAmount","categoryName","categoryId","push","sort","a","b","catch","console","log","fetchCategoriesAndAccounts","useEffect","formatCellValue","cell","columnId","column","id","Intl","NumberFormat","locale","style","currency","format","value","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","isSorted","isSortedDesc","row","cursor","getRowProps","cells","getCellProps","maxWidth","width","margin","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable, usePagination } from 'react-table'\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LineItemTable from './line-item-table';\nimport LineItemForm from './line-item-form';\n\n//Generates a table with react-table 7 using pagination\n\n// Let's add a fetchData method to our Table component that will be used to fetch\n// new data when pagination state changes\n// We can also add a loading state to let our table know it's loading new data\nfunction TableOfJournalEntries({\n  columns,\n  data,\n  fetchData,\n  pageCount: controlledPageCount,\n  elementCount,\n  organizationId,\n  API_URL,\n  localization\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Get the state from the instance\n    state: { pageIndex, pageSize},\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Pass our hoisted table state\n      manualPagination: true, // Tell the usePagination\n      // hook that we'll handle our own data fetching\n      // This means we'll also have to provide our own\n      // pageCount.\n      pageCount: controlledPageCount,\n    },\n    usePagination\n  )\n\n  const [journalEntryExpanded, setJournalEntryExpanded] = React.useState(false); //Whether or not the modal  is shown\n  const toggleJournalEntryExpanded = () => setJournalEntryExpanded(!journalEntryExpanded); //Toggles modal on or off\n  const expandJournalEntry = i => {\n    fetchJournalEntry(i);\n    toggleJournalEntryExpanded();\n  }\n\n  const [journalEntryId, setJournalEntryId] = React.useState(null);\n  const [journalEntryDescription, setJournalEntryDescription] = React.useState('');\n  const [journalEntryDate, setJournalEntryDate] = React.useState('');\n  const [lineItemData, setLineItemData] = React.useState([]); //Data to be passed in to lineItemTable\n  const [categories, setCategories] = React.useState([]);\n  const [accounts, setAccounts] = React.useState([]);\n  \n  const fetchJournalEntry = i => {\n    const url = `${API_URL}/journalEntry/${i}`;\n    axios.get(url).then(response => {\n        var journalEntry = response.data;\n        var formattedLineItems = [];\n        journalEntry.lineItems.forEach( lineItem => {\n          var formattedLineItem = {\n            lineItemId: lineItem.lineItemId,\n            accountName: lineItem.accountName,\n            accountId: lineItem.accountId,\n            accountTypeId: lineItem.accountTypeId,\n            description: lineItem.description,\n            debitAmount: (lineItem.isCredit ? null : lineItem.amount),\n            creditAmount: (lineItem.isCredit ? lineItem.amount : null),\n            categoryName: lineItem.categoryName,\n            categoryId: lineItem.categoryId\n          };\n          formattedLineItems.push(formattedLineItem);\n        })\n        formattedLineItems.sort((a, b) => (a.lineItemId > b.lineItemId) ? 1 : -1) //sort by LineItemId to preserve insertion order\n        setLineItemData(formattedLineItems);\n        setJournalEntryId(journalEntry.journalEntryId);\n        setJournalEntryDescription(journalEntry.description);\n        setJournalEntryDate(journalEntry.journalEntryDate);\n      })\n      .catch(console.log);\n  }\n\n  const fetchCategoriesAndAccounts = i => {\n      axios.get(`${API_URL}/organization/${i}/category`).then(response => {\n      const categories = response.data;\n      setCategories(categories);\n    })\n    .catch(console.log);\n    axios.get(`${API_URL}/organization/${i}/account`).then(response => {\n      const accounts = response.data;\n      setAccounts(accounts);\n    })\n  }\n\n  // Listen for changes in pagination and use the state to fetch our new data\n  React.useEffect(() => {\n    fetchData({ pageIndex, pageSize })\n  }, [fetchData, pageIndex, pageSize])\n\n  React.useEffect(() => {\n    fetchCategoriesAndAccounts(organizationId);\n  }, [organizationId])\n\n  //format table cell value based on column name and locale\n  const formatCellValue = cell => {\n    let columnId = cell.column.id;\n    switch (columnId) {\n      case \"creditAmount\":\n      case \"debitAmount\":\n        return (new Intl.NumberFormat(localization.locale, { style: 'currency', currency:localization.currency }).format(cell.value));\n      default: \n        return (cell.value);\n    }\n  }\n\n  // Render the UI for your table\n  return (\n    <><div className=\"table-responsive\">\n      <table  className=\"table table-hover m-b-0 text-inverse\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' ðŸ”½'\n                        : ' ðŸ”¼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr style={{cursor: \"pointer\"}} onClick={() => expandJournalEntry(data[i].journalEntryId)} {...row.getRowProps()}>{/* entry is represented as a clickable row that opens a modal when clicked*/}\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{formatCellValue(cell)}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\n      {/* Modal that opens when a row in the table is clicked */}\n      <Modal isOpen={journalEntryExpanded} toggle={() => toggleJournalEntryExpanded()}size=\"lg\" style={{maxWidth: '1600px', width: '80%', margin: 'auto'}}>\n          <ModalHeader toggle={() => toggleJournalEntryExpanded()} className=\"bg-dark text-white\">Journal Entry</ModalHeader>\n          <ModalBody>\n            <LineItemForm \n              data={lineItemData} setLineItemData={setLineItemData}\n              journalEntryDate={journalEntryDate} setJournalEntryDate={setJournalEntryDate}\n              journalEntryDescription={journalEntryDescription} setJournalEntryDescription={setJournalEntryDescription}\n              categories={categories} \n              accounts={accounts}\n              localization={localization}>\n            </LineItemForm>\n          </ModalBody>\n          <ModalFooter>\n            <button className=\"btn btn-primary\" onClick={() => {\n              console.log(journalEntryId);\n              console.log(journalEntryDate);\n              console.log(journalEntryDescription);\n              console.log(lineItemData);\n            }}>\n              Action</button>\n            <button className=\"btn btn-white\" onClick={() => toggleJournalEntryExpanded()}>Close</button>\n          </ModalFooter>\n      </Modal>\n\n      </div>\n      {/* \n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n    <div className=\"row px-3 py-2\">\n\n                <ul className=\"pager m-t-0 m-b-0\">\n                    <li className={canPreviousPage? \"previous\" : \"previous disabled\"}>\n                        {canPreviousPage? <Link onClick={() => previousPage()}>&larr; Newer</Link> : null} \n                    </li>\n                </ul>\n                <span className=\"py-2\">\n                    Showing {((pageIndex * page.length) + 1) + \"-\" + ((pageIndex + 1) * page.length)} of {elementCount}{' '}\n                    results\n                </span>\n                <ul className=\"pager m-t-0 m-b-0\">\n                    <li className={canNextPage? \"next\" : \"next disabled\"}>\n                        {canNextPage? <Link onClick={() => nextPage()}>Older &rarr;</Link> : null}\n                    </li>\n                </ul>\n                \n\n        {/*go to page, page size*/}\n        {/*<span className=\"p-10\">\n            Go to page: {' '}\n            <input className=\"p-10 form-control-sm\"\n                type=\"number\"\n                defaultValue={pageIndex + 1}\n                onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                gotoPage(page)\n                }}\n            /> {' '}\n        </span>*/}\n\n\n\n    </div>\n\n    </>\n  )\n}\n\nexport default TableOfJournalEntries\n\n"]},"metadata":{},"sourceType":"module"}