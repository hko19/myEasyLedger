{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Easy_Ledger/template_react/src/components/content/content.jsx\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport routes from './../../config/page-route.jsx';\nimport { PageSettings } from './../../config/page-settings.js';\n\nfunction setTitle(path, routeArray) {\n  var pageTitle;\n\n  for (var i = 0; i < routeArray.length; i++) {\n    if (routeArray[i].path === path) {\n      pageTitle = 'Color Admin | ' + routeArray[i].title;\n    }\n  }\n\n  document.title = pageTitle ? pageTitle : 'Color Admin | React App';\n}\n\nclass Content extends React.Component {\n  componentDidMount() {\n    setTitle(this.props.history.location.pathname, routes);\n  }\n\n  componentWillMount() {\n    this.props.history.listen(() => {\n      setTitle(this.props.history.location.pathname, routes);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PageSettings.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, ({\n      pageContentFullWidth,\n      pageContentClass,\n      pageContentInverseMode\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: 'content ' + (pageContentFullWidth ? 'content-full-width ' : '') + (pageContentInverseMode ? 'content-inverse-mode ' : '') + pageContentClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }\n    }, routes.map((route, index) => /*#__PURE__*/React.createElement(Route, {\n      key: index,\n      path: route.path,\n      exact: route.exact,\n      component: route.component,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(Content);","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/template_react/src/components/content/content.jsx"],"names":["React","Route","withRouter","routes","PageSettings","setTitle","path","routeArray","pageTitle","i","length","title","document","Content","Component","componentDidMount","props","history","location","pathname","componentWillMount","listen","render","pageContentFullWidth","pageContentClass","pageContentInverseMode","map","route","index","exact","component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AACnC,MAAIC,SAAJ;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGF,UAAU,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,QAAIF,UAAU,CAACE,CAAD,CAAV,CAAcH,IAAd,KAAuBA,IAA3B,EAAiC;AAChCE,MAAAA,SAAS,GAAG,mBAAmBD,UAAU,CAACE,CAAD,CAAV,CAAcE,KAA7C;AACA;AACD;;AACDC,EAAAA,QAAQ,CAACD,KAAT,GAAkBH,SAAD,GAAcA,SAAd,GAA0B,yBAA3C;AACA;;AAED,MAAMK,OAAN,SAAsBb,KAAK,CAACc,SAA5B,CAAsC;AACrCC,EAAAA,iBAAiB,GAAG;AACnBV,IAAAA,QAAQ,CAAC,KAAKW,KAAL,CAAWC,OAAX,CAAmBC,QAAnB,CAA4BC,QAA7B,EAAuChB,MAAvC,CAAR;AACA;;AACDiB,EAAAA,kBAAkB,GAAG;AAClB,SAAKJ,KAAL,CAAWC,OAAX,CAAmBI,MAAnB,CAA0B,MAAM;AACjChB,MAAAA,QAAQ,CAAC,KAAKW,KAAL,CAAWC,OAAX,CAAmBC,QAAnB,CAA4BC,QAA7B,EAAuChB,MAAvC,CAAR;AACE,KAFD;AAGD;;AAEFmB,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,CAAC;AAACC,MAAAA,oBAAD;AAAuBC,MAAAA,gBAAvB;AAAyCC,MAAAA;AAAzC,KAAD,kBACA;AAAK,MAAA,SAAS,EAAE,cAAcF,oBAAoB,GAAG,qBAAH,GAA2B,EAA7D,KAAoEE,sBAAsB,GAAG,uBAAH,GAA6B,EAAvH,IAA6HD,gBAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACErB,MAAM,CAACuB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACX,oBAAC,KAAD;AACC,MAAA,GAAG,EAAEA,KADN;AAEC,MAAA,IAAI,EAAED,KAAK,CAACrB,IAFb;AAGC,MAAA,KAAK,EAAEqB,KAAK,CAACE,KAHd;AAIC,MAAA,SAAS,EAAEF,KAAK,CAACG,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CAFF,CADD;AAiBA;;AA5BoC;;AA+BtC,eAAe5B,UAAU,CAACW,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport routes from './../../config/page-route.jsx';\nimport { PageSettings } from './../../config/page-settings.js';\n\nfunction setTitle(path, routeArray) {\n\tvar pageTitle;\n\tfor (var i=0; i < routeArray.length; i++) {\n\t\tif (routeArray[i].path === path) {\n\t\t\tpageTitle = 'Color Admin | ' + routeArray[i].title;\n\t\t}\n\t}\n\tdocument.title = (pageTitle) ? pageTitle : 'Color Admin | React App';\n}\n\nclass Content extends React.Component {\n\tcomponentDidMount() {\n\t\tsetTitle(this.props.history.location.pathname, routes);\n\t}\n\tcomponentWillMount() {\n    this.props.history.listen(() => {\n\t\t\tsetTitle(this.props.history.location.pathname, routes);\n    });\n  }\n  \n\trender() {\n\t\treturn (\n\t\t\t<PageSettings.Consumer>\n\t\t\t\t{({pageContentFullWidth, pageContentClass, pageContentInverseMode}) => (\n\t\t\t\t\t<div className={'content ' + (pageContentFullWidth ? 'content-full-width ' : '') + (pageContentInverseMode ? 'content-inverse-mode ' : '') + pageContentClass}>\n\t\t\t\t\t\t{routes.map((route, index) => (\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</PageSettings.Consumer>\n\t\t)\n\t}\n}\n\nexport default withRouter(Content);\n"]},"metadata":{},"sourceType":"module"}