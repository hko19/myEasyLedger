{"ast":null,"code":"import React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nvar ONE_SECOND_IN_MILLISECONDS = 1000;\nvar ONE_MINUTE_IN_MILLISECONDS = 60 * ONE_SECOND_IN_MILLISECONDS;\nvar ONE_HOUR_IN_MILLISECONDS = 60 * ONE_MINUTE_IN_MILLISECONDS;\nvar ONE_DAY_IN_MILLISECONDS = 24 * ONE_HOUR_IN_MILLISECONDS;\n\nfunction doubleDigit(val) {\n  return String(val).padStart(2, '0');\n}\n/* eslint-disable react/prop-types */\n\n\nvar renderer = function renderer(_ref) {\n  var days = _ref.days,\n      hrs = _ref.hrs,\n      mins = _ref.mins,\n      secs = _ref.secs;\n  return React.createElement(Fragment, null, days, ' days ', doubleDigit(hrs), ':', doubleDigit(mins), ':', doubleDigit(secs));\n};\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"/* add css styles here (optional) */\\n\\n.styles_countdown__6MraL {\\n  display: inline-block;\\n}\\n\";\nvar styles = {\n  \"countdown\": \"styles_countdown__6MraL\"\n};\nstyleInject(css);\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar DEFAULT_STATE = {\n  days: 0,\n  hrs: 0,\n  mins: 0,\n  secs: 0,\n  timestamp: null,\n  isCompleted: false\n};\n\nvar Countdown = function (_PureComponent) {\n  inherits(Countdown, _PureComponent);\n\n  function Countdown() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Countdown.__proto__ || Object.getPrototypeOf(Countdown)).call.apply(_ref, [this].concat(args))), _this), _this.intervalId = null, _this.state = _extends({}, DEFAULT_STATE), _this.init = function () {\n      /* istanbul ignore next */\n      if (_this.props.endDate) {\n        var now = Date.now();\n\n        _this.setState({\n          timestamp: _this.constructor.normalize(_this.props.endDate),\n          isCompleted: false\n        }, function () {\n          if (now < _this.state.timestamp) {\n            _this.update(now);\n\n            _this.start();\n          } else {\n            _this.stop({\n              isCompleted: true\n            });\n\n            _this.complete();\n          }\n        });\n      }\n    }, _this.start = function () {\n      _this.intervalId = setInterval(_this.tick, 1000);\n    }, _this.tick = function () {\n      var now = Date.now();\n\n      if (now >= _this.state.timestamp) {\n        _this.stop({\n          isCompleted: true\n        });\n\n        _this.complete();\n      } else {\n        _this.update(now);\n      }\n    }, _this.update = function (now) {\n      // how much time is left\n      var diff = Math.round(_this.state.timestamp - now); // round up to the whole seconds\n\n      diff = Math.round(diff / 1000) * 1000;\n      var timeLeft = {\n        days: 0,\n        hrs: 0,\n        mins: 0,\n        secs: 0\n      };\n      var _this$props = _this.props,\n          useDays = _this$props.useDays,\n          useHours = _this$props.useHours,\n          useMinutes = _this$props.useMinutes;\n\n      if (useDays && diff >= ONE_DAY_IN_MILLISECONDS) {\n        timeLeft.days = Math.floor(diff / ONE_DAY_IN_MILLISECONDS);\n        diff -= timeLeft.days * ONE_DAY_IN_MILLISECONDS;\n      }\n\n      if (useHours && diff >= ONE_HOUR_IN_MILLISECONDS) {\n        timeLeft.hrs = Math.floor(diff / ONE_HOUR_IN_MILLISECONDS);\n        diff -= timeLeft.hrs * ONE_HOUR_IN_MILLISECONDS;\n      }\n\n      if (useMinutes && diff >= ONE_MINUTE_IN_MILLISECONDS) {\n        timeLeft.mins = Math.floor(diff / ONE_MINUTE_IN_MILLISECONDS);\n        diff -= timeLeft.mins * ONE_MINUTE_IN_MILLISECONDS;\n      }\n\n      timeLeft.secs = Math.round(diff / 1000);\n\n      _this.setState(timeLeft);\n    }, _this.stop = function () {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$isCompleted = _ref2.isCompleted,\n          isCompleted = _ref2$isCompleted === undefined ? false : _ref2$isCompleted;\n\n      _this.setState(_extends({}, DEFAULT_STATE, {\n        isCompleted: isCompleted\n      }));\n\n      if (_this.intervalId) {\n        clearInterval(_this.intervalId);\n        _this.intervalId = null;\n      }\n    }, _this.complete = function () {\n      var onCompleted = _this.props.onCompleted;\n      onCompleted && onCompleted();\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(Countdown, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.init();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.endDate !== this.props.endDate) {\n        this.stop();\n        this.init();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stop();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          endDate = _props.endDate,\n          onCompleted = _props.onCompleted,\n          useDays = _props.useDays,\n          useHours = _props.useHours,\n          useMinutes = _props.useMinutes,\n          className = _props.className,\n          children = _props.children,\n          restProps = objectWithoutProperties(_props, ['endDate', 'onCompleted', 'useDays', 'useHours', 'useMinutes', 'className', 'children']);\n      var _state = this.state,\n          days = _state.days,\n          hrs = _state.hrs,\n          mins = _state.mins,\n          secs = _state.secs,\n          isCompleted = _state.isCompleted;\n      return React.createElement('div', _extends({\n        className: className || styles.countdown\n      }, restProps), children({\n        days: days,\n        hrs: hrs,\n        mins: mins,\n        secs: secs,\n        isCompleted: isCompleted\n      }));\n    }\n  }]);\n  return Countdown;\n}(PureComponent);\n\nCountdown.propTypes = {\n  endDate: PropTypes.oneOfType([PropTypes.number, PropTypes.instanceOf(Date)]).isRequired,\n  onCompleted: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.func,\n  useDays: PropTypes.bool,\n  useHours: PropTypes.bool,\n  useMinutes: PropTypes.bool\n};\nCountdown.defaultProps = {\n  children: renderer,\n  useDays: true,\n  useHours: true,\n  useMinutes: true\n};\n\nCountdown.normalize = function (now) {\n  if (now instanceof Date) {\n    return +now;\n  }\n\n  return now;\n};\n\nexport default Countdown;\nexport { doubleDigit };","map":{"version":3,"sources":["../src/consts.js","../src/utils.js","../src/renderer.js","../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"names":["ONE_SECOND_IN_MILLISECONDS","ONE_MINUTE_IN_MILLISECONDS","ONE_HOUR_IN_MILLISECONDS","ONE_DAY_IN_MILLISECONDS","String","renderer","days","hrs","mins","secs","DEFAULT_STATE","Countdown","PureComponent","propTypes","PropTypes","bool","defaultProps","normalize","now","intervalId","state","prevProps","init","Date","isCompleted","start","setInterval","tick","update","diff","Math","timeLeft","useDays","useHours","useMinutes","stop","complete","onCompleted","endDate","className","children","restProps","styles"],"mappings":"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","sourcesContent":["export const ONE_SECOND_IN_MILLISECONDS = 1000\nexport const ONE_MINUTE_IN_MILLISECONDS = 60 * ONE_SECOND_IN_MILLISECONDS\nexport const ONE_HOUR_IN_MILLISECONDS = 60 * ONE_MINUTE_IN_MILLISECONDS\nexport const ONE_DAY_IN_MILLISECONDS = 24 * ONE_HOUR_IN_MILLISECONDS\n","export function doubleDigit(val) {\n  return String(val).padStart(2, '0')\n}\n","/* eslint-disable react/prop-types */\n\nimport React, { Fragment } from 'react'\nimport { doubleDigit } from './utils'\n\nconst renderer = ({ days, hrs, mins, secs }) =>\n  <Fragment>{days} days {doubleDigit(hrs)}:{doubleDigit(mins)}:{doubleDigit(secs)}</Fragment>\n\nexport default renderer\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  ONE_MINUTE_IN_MILLISECONDS,\n  ONE_HOUR_IN_MILLISECONDS,\n  ONE_DAY_IN_MILLISECONDS\n} from './consts'\nimport defaultRenderer from './renderer'\n\nimport styles from './styles.css'\n\nconst DEFAULT_STATE = {\n  days: 0,\n  hrs: 0,\n  mins: 0,\n  secs: 0,\n  timestamp: null,\n  isCompleted: false\n}\n\nexport default class Countdown extends PureComponent {\n  static propTypes = {\n    endDate: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.instanceOf(Date)\n    ]).isRequired,\n    onCompleted: PropTypes.func,\n    className: PropTypes.string,\n    children: PropTypes.func,\n    useDays: PropTypes.bool,\n    useHours: PropTypes.bool,\n    useMinutes: PropTypes.bool\n  }\n\n  static defaultProps = {\n    children: defaultRenderer,\n    useDays: true,\n    useHours: true,\n    useMinutes: true\n  }\n\n  static normalize = (now) => {\n    if (now instanceof Date) {\n      return +now\n    }\n    return now\n  }\n\n  intervalId = null\n  state = { ...DEFAULT_STATE }\n\n  componentWillMount() {\n    this.init()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.endDate !== this.props.endDate) {\n      this.stop()\n      this.init()\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop()\n  }\n\n  init = () => {\n    /* istanbul ignore next */\n    if (this.props.endDate) {\n      const now = Date.now()\n      this.setState({\n        timestamp: this.constructor.normalize(this.props.endDate),\n        isCompleted: false\n      }, () => {\n        if (now < this.state.timestamp) {\n          this.update(now)\n          this.start()\n        } else {\n          this.stop({ isCompleted: true })\n          this.complete()\n        }\n      })\n    }\n  }\n\n  start = () => {\n    this.intervalId = setInterval(this.tick, 1000)\n  }\n\n  tick = () => {\n    const now = Date.now()\n    if (now >= this.state.timestamp) {\n      this.stop({ isCompleted: true })\n      this.complete()\n    } else {\n      this.update(now)\n    }\n  }\n\n  update = (now) => {\n    // how much time is left\n    let diff = Math.round((this.state.timestamp - now))\n    // round up to the whole seconds\n    diff = Math.round(diff / 1000) * 1000\n\n    const timeLeft = {\n      days: 0,\n      hrs: 0,\n      mins: 0,\n      secs: 0\n    }\n\n    const { useDays, useHours, useMinutes } = this.props\n\n    if (useDays && diff >= ONE_DAY_IN_MILLISECONDS) {\n      timeLeft.days = Math.floor(diff / ONE_DAY_IN_MILLISECONDS)\n      diff -= timeLeft.days * ONE_DAY_IN_MILLISECONDS\n    }\n    if (useHours && diff >= ONE_HOUR_IN_MILLISECONDS) {\n      timeLeft.hrs = Math.floor(diff / ONE_HOUR_IN_MILLISECONDS)\n      diff -= timeLeft.hrs * ONE_HOUR_IN_MILLISECONDS\n    }\n    if (useMinutes && diff >= ONE_MINUTE_IN_MILLISECONDS) {\n      timeLeft.mins = Math.floor(diff / ONE_MINUTE_IN_MILLISECONDS)\n      diff -= timeLeft.mins * ONE_MINUTE_IN_MILLISECONDS\n    }\n    timeLeft.secs = Math.round(diff / 1000)\n\n    this.setState(timeLeft)\n  }\n\n  stop = ({ isCompleted = false } = {}) => {\n    this.setState({ ...DEFAULT_STATE, isCompleted })\n    if (this.intervalId) {\n      clearInterval(this.intervalId)\n      this.intervalId = null\n    }\n  }\n\n  complete = () => {\n    const { onCompleted } = this.props\n    onCompleted && onCompleted()\n  }\n\n  render() {\n    const {\n      endDate,\n      onCompleted,\n      useDays,\n      useHours,\n      useMinutes,\n      className,\n      children,\n      ...restProps\n    } = this.props\n\n    const { days, hrs, mins, secs, isCompleted } = this.state\n\n    return (\n      <div className={className || styles.countdown} {...restProps}>\n        {children({ days, hrs, mins, secs, isCompleted })}\n      </div>\n    )\n  }\n}\n\nexport { doubleDigit } from './utils'\n"]},"metadata":{},"sourceType":"module"}