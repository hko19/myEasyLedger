{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-form.jsx\";\nimport React from 'react';\nimport { useTable, useSortBy } from 'react-table';\n\nfunction LineItemForm(props) {\n  var _this = this;\n\n  var data = props.data;\n  var journalEntryDescription = props.journalEntryDescription;\n  var journalEntryDate = props.journalEntryDate;\n  var categories = props.categories;\n  var accounts = props.accounts;\n  var columns = React.useMemo(function () {\n    return [// accessor is the \"key\" in the data},\n    {\n      Header: 'id',\n      accessor: 'lineItemId'\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }, {\n      Header: 'Account',\n      accessor: 'accountName'\n    }, {\n      Header: 'Category',\n      accessor: 'categoryName'\n    }, {\n      Header: 'Debit',\n      accessor: 'debitAmount'\n    }, {\n      Header: 'Credit',\n      accessor: 'creditAmount'\n    }];\n  }, []);\n  var initialSort = React.useMemo(function () {\n    return [{\n      id: 'lineItemId',\n      desc: false\n    }];\n  }, []);\n\n  var _useTable = useTable({\n    columns,\n    data,\n    initialState: {\n      sortBy: initialSort,\n      hiddenColumns: [\"lineItemId\"]\n    }\n  }, useSortBy),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  var returnFormByColumnType = function returnFormByColumnType(cell) {\n    var columnId = cell.column.id;\n\n    switch (columnId) {\n      case \"description\":\n      case \"debitAmount\":\n      case \"creditAmount\":\n      case \"account\":\n      case \"category\":\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 43\n    }\n  }, \"Date\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, journalEntryDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 43\n    }\n  }, \"Description\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, journalEntryDescription)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }), headerGroup.headers.map(function (column) {\n      return (\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }\n        }), column.render('Header'))\n      );\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), rows.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 49\n        }\n      }), cell.render('Cell'));\n    }));\n  })))));\n}\n\nexport default LineItemForm;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/line-item-form.jsx"],"names":["React","useTable","useSortBy","LineItemForm","props","data","journalEntryDescription","journalEntryDate","categories","accounts","columns","useMemo","Header","accessor","initialSort","id","desc","initialState","sortBy","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","returnFormByColumnType","cell","columnId","column","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","row","i","getRowProps","cells","getCellProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable, useSortBy } from 'react-table'\n\nfunction LineItemForm(props) {\n    \n    const data = props.data;\n    const journalEntryDescription = props.journalEntryDescription\n    const journalEntryDate = props.journalEntryDate;\n    const categories = props.categories;\n    const accounts = props.accounts;\n\n    const columns = React.useMemo(\n        () => [ // accessor is the \"key\" in the data},\n            { Header: 'id', accessor: 'lineItemId' },\n            { Header: 'Description', accessor: 'description' },\n            { Header: 'Account', accessor: 'accountName' },\n            { Header: 'Category', accessor: 'categoryName' },\n            { Header: 'Debit', accessor: 'debitAmount' },\n            { Header: 'Credit', accessor: 'creditAmount' },\n        ],\n        []\n    )\n\n    const initialSort = React.useMemo(\n        () => [\n            { id: 'lineItemId', desc: false },\n        ],\n        [])\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: {\n                sortBy: initialSort,\n                hiddenColumns: [\"lineItemId\"]\n            }\n        },\n        useSortBy\n    )\n    \n    const returnFormByColumnType = cell => {\n        const columnId = cell.column.id;\n        switch (columnId) {\n            case \"description\":\n            case \"debitAmount\":\n            case \"creditAmount\":\n            case \"account\":\n            case \"category\":\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"row m-b-10\">\n                <div className=\"col-md-1\"><strong>Date</strong></div> \n                <div className=\"col-md-11\">{journalEntryDate}</div>\n            </div>\n            <div className=\"row m-b-10\">\n                <div className=\"col-md-1\"><strong>Description</strong></div> \n                <div className=\"col-md-11\">{journalEntryDescription}</div>\n            </div>\n            <br></br>\n\n            <div className=\"table-responsive\">\n                <table className=\"table\"{...getTableProps()}>\n                    <thead>\n                        {headerGroups.map(headerGroup => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => (\n                                    // Add the sorting props to control sorting. For this example\n                                    // we can add them into the header props\n                                    <th {...column.getHeaderProps()}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {rows.map(\n                            (row, i) => {\n                                prepareRow(row);\n                                return (\n                                    <tr {...row.getRowProps()}>\n                                        {row.cells.map(cell => {\n                                            return (\n                                                <td {...cell.getCellProps()}>\n                                                    {cell.render('Cell')}\n                                                </td>\n                                            )\n                                        })}\n                                    </tr>\n                                )\n                            }\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n}\n\nexport default LineItemForm\n"]},"metadata":{},"sourceType":"module"}