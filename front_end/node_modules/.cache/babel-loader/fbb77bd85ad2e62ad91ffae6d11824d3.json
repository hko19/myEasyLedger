{"ast":null,"code":"import _slicedToArray from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-table.jsx\";\nimport React from 'react';\nimport TableOfJournalEntries from '../../../components/table/table-of-journal-entries';\nimport axios from 'axios';\n\nfunction JournalTable() {\n  var columns = React.useMemo(function () {\n    return [// accessor is the \"key\" in the data},\n    {\n      Header: 'Date',\n      accessor: 'journalEntryDate'\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }, {\n      Header: 'Debit',\n      accessor: 'debitAmount'\n    }, {\n      Header: 'Credit',\n      accessor: 'creditAmount'\n    }];\n  }, []);\n  var API_URL = 'http://localhost:8080/v0.1';\n  var ORGANIZATION_ID = '1'; // We'll start our table without any data\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      pageCount = _React$useState4[0],\n      setPageCount = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      elementCount = _React$useState6[0],\n      setElementCount = _React$useState6[1];\n\n  var fetchIdRef = React.useRef(0);\n  var fetchData = React.useCallback(function (_ref) {\n    var pageSize = _ref.pageSize,\n        pageIndex = _ref.pageIndex;\n    // This will get called when the table needs new data\n    //fetch data from Easy Ledger API\n    var url = \"\".concat(API_URL, \"/organization/\").concat(ORGANIZATION_ID, \"/journalEntryViewModel/?page=\").concat(pageIndex, \"&size=\").concat(pageSize);\n    axios.get(url).then(function (response) {\n      var dataContent = response.data.content;\n      dataContent.forEach(function (entry) {\n        entry.debitAmount = entry.debitAmount.toFixed(2);\n        entry.creditAmount = entry.creditAmount.toFixed(2);\n      });\n      setData(dataContent);\n      setPageCount(response.data.totalPages);\n      setElementCount(response.data.totalElements);\n    }).catch(console.log);\n  }, []);\n  return /*#__PURE__*/React.createElement(TableOfJournalEntries, {\n    columns: columns,\n    data: data,\n    fetchData: fetchData,\n    pageCount: pageCount,\n    elementCount: elementCount,\n    organizationId: ORGANIZATION_ID,\n    API_URL: API_URL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default JournalTable;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-table.jsx"],"names":["React","TableOfJournalEntries","axios","JournalTable","columns","useMemo","Header","accessor","API_URL","ORGANIZATION_ID","useState","data","setData","pageCount","setPageCount","elementCount","setElementCount","fetchIdRef","useRef","fetchData","useCallback","pageSize","pageIndex","url","get","then","response","dataContent","content","forEach","entry","debitAmount","toFixed","creditAmount","totalPages","totalElements","catch","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,oDAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,YAAT,GAAwB;AAEtB,MAAMC,OAAO,GAAGJ,KAAK,CAACK,OAAN,CACd;AAAA,WAAM,CAAE;AACN;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KADI,EAEJ;AAAED,MAAAA,MAAM,EAAE,aAAV;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC,KAFI,EAGJ;AAAED,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAHI,EAIJ;AAAED,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAJI,CAAN;AAAA,GADc,EAOd,EAPc,CAAhB;AASA,MAAMC,OAAO,GAAG,4BAAhB;AACA,MAAMC,eAAe,GAAG,GAAxB,CAZsB,CActB;;AAdsB,wBAeET,KAAK,CAACU,QAAN,CAAe,EAAf,CAfF;AAAA;AAAA,MAefC,IAfe;AAAA,MAeTC,OAfS;;AAAA,yBAgBYZ,KAAK,CAACU,QAAN,CAAe,CAAf,CAhBZ;AAAA;AAAA,MAgBfG,SAhBe;AAAA,MAgBJC,YAhBI;;AAAA,yBAiBkBd,KAAK,CAACU,QAAN,CAAe,CAAf,CAjBlB;AAAA;AAAA,MAiBfK,YAjBe;AAAA,MAiBDC,eAjBC;;AAkBtB,MAAMC,UAAU,GAAGjB,KAAK,CAACkB,MAAN,CAAa,CAAb,CAAnB;AAEA,MAAMC,SAAS,GAAGnB,KAAK,CAACoB,WAAN,CAAkB,gBAA6B;AAAA,QAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;AAC/D;AAEA;AACA,QAAMC,GAAG,aAAMf,OAAN,2BAA8BC,eAA9B,0CAA6Ea,SAA7E,mBAA+FD,QAA/F,CAAT;AACAnB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoB,UAAAC,QAAQ,EAAI;AAC5B,UAAIC,WAAW,GAAGD,QAAQ,CAACf,IAAT,CAAciB,OAAhC;AACAD,MAAAA,WAAW,CAACE,OAAZ,CAAqB,UAAAC,KAAK,EAAI;AAC5BA,QAAAA,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAAN,CAAkBC,OAAlB,CAA0B,CAA1B,CAApB;AACAF,QAAAA,KAAK,CAACG,YAAN,GAAqBH,KAAK,CAACG,YAAN,CAAmBD,OAAnB,CAA2B,CAA3B,CAArB;AACD,OAHD;AAIApB,MAAAA,OAAO,CAACe,WAAD,CAAP;AACAb,MAAAA,YAAY,CAACY,QAAQ,CAACf,IAAT,CAAcuB,UAAf,CAAZ;AACAlB,MAAAA,eAAe,CAACU,QAAQ,CAACf,IAAT,CAAcwB,aAAf,CAAf;AACD,KATH,EAUGC,KAVH,CAUSC,OAAO,CAACC,GAVjB;AAWD,GAhBiB,EAgBf,EAhBe,CAAlB;AAkBA,sBACI,oBAAC,qBAAD;AACE,IAAA,OAAO,EAAElC,OADX;AAEE,IAAA,IAAI,EAAEO,IAFR;AAGE,IAAA,SAAS,EAAEQ,SAHb;AAIE,IAAA,SAAS,EAAEN,SAJb;AAKE,IAAA,YAAY,EAAEE,YALhB;AAME,IAAA,cAAc,EAAEN,eANlB;AAOE,IAAA,OAAO,EAAED,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAWD;;AAKD,eAAeL,YAAf","sourcesContent":["import React from 'react';\nimport TableOfJournalEntries from '../../../components/table/table-of-journal-entries';\nimport axios from 'axios';\n\n\nfunction JournalTable() {\n\n  const columns = React.useMemo(\n    () => [ // accessor is the \"key\" in the data},\n      { Header: 'Date', accessor: 'journalEntryDate'},\n      { Header: 'Description', accessor: 'description'},\n      { Header: 'Debit', accessor: 'debitAmount'},\n      { Header: 'Credit', accessor: 'creditAmount'},\n    ],\n    []\n  )\n  const API_URL = 'http://localhost:8080/v0.1';\n  const ORGANIZATION_ID = '1';\n\n  // We'll start our table without any data\n  const [data, setData] = React.useState([])\n  const [pageCount, setPageCount] = React.useState(0)\n  const [elementCount, setElementCount] = React.useState(0)\n  const fetchIdRef = React.useRef(0)\n\n  const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\n    // This will get called when the table needs new data\n        \n    //fetch data from Easy Ledger API\n    const url = `${API_URL}/organization/${ORGANIZATION_ID}/journalEntryViewModel/?page=${pageIndex}&size=${pageSize}`;\n    axios.get(url).then(response => {\n        var dataContent = response.data.content;\n        dataContent.forEach( entry => {\n          entry.debitAmount = entry.debitAmount.toFixed(2);\n          entry.creditAmount = entry.creditAmount.toFixed(2);\n        })\n        setData(dataContent);\n        setPageCount(response.data.totalPages);\n        setElementCount(response.data.totalElements);\n      })\n      .catch(console.log);\n  }, [])\n  \n  return (\n      <TableOfJournalEntries\n        columns={columns}\n        data={data}\n        fetchData={fetchData}\n        pageCount={pageCount}\n        elementCount={elementCount}\n        organizationId={ORGANIZATION_ID}\n        API_URL={API_URL}\n      />\n  )\n}\n\n\n\n\nexport default JournalTable"]},"metadata":{},"sourceType":"module"}