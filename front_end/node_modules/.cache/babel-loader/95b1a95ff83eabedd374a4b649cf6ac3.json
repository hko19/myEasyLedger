{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/table.jsx\";\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\n\nfunction Table(_ref) {\n  var _this = this;\n\n  var columns = _ref.columns,\n      data = _ref.data;\n\n  //uses react-table 7 to generate a table with pagination\n  // Use the state and functions returned from useTable to build your UI\n  var _useTable = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize; // Render the UI for your table\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, JSON.stringify({\n    pageIndex,\n    pageSize,\n    pageCount,\n    canNextPage,\n    canPreviousPage\n  }, null, 2))), /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table table-hover m-b-0 text-inverse\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), headerGroup.headers.map(function (column) {\n      return /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }), column.render('Header'));\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), page.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 28\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: function onClick() {\n      return gotoPage(0);\n    },\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, '<<'), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return previousPage();\n    },\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, '<'), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return nextPage();\n    },\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, '>'), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return gotoPage(pageCount - 1);\n    },\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, '>>'), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Page\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, pageIndex + 1, \" of \", pageOptions.length), ' '), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"| Go to page:\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: function onChange(e) {\n      var page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    style: {\n      width: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), ' ', /*#__PURE__*/React.createElement(\"select\", {\n    value: pageSize,\n    onChange: function onChange(e) {\n      setPageSize(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, [10, 20, 30, 40, 50].map(function (pageSize) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: pageSize,\n      value: pageSize,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"Show \", pageSize);\n  }))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/table.jsx"],"names":["React","useTable","usePagination","Table","columns","data","initialState","pageIndex","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","JSON","stringify","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTable, usePagination } from 'react-table';\n\nfunction Table ({ columns, data }) { //uses react-table 7 to generate a table with pagination\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      prepareRow,\n      page, // Instead of using 'rows', we'll use page,\n      // which has only the rows for the active page\n  \n      // The rest of these things are super handy, too ;)\n      canPreviousPage,\n      canNextPage,\n      pageOptions,\n      pageCount,\n      gotoPage,\n      nextPage,\n      previousPage,\n      setPageSize,\n      state: { pageIndex, pageSize },\n    } = useTable(\n      {\n        columns,\n        data,\n        initialState: { pageIndex: 0 },\n      },\n      usePagination\n    )\n  \n    // Render the UI for your table\n    return (\n      <>\n        <pre>\n          <code>\n            {JSON.stringify(\n              {\n                pageIndex,\n                pageSize,\n                pageCount,\n                canNextPage,\n                canPreviousPage,\n              },\n              null,\n              2\n            )}\n          </code>\n        </pre>\n        <table className=\"table table-hover m-b-0 text-inverse\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n        {/* \n          Pagination can be built however you'd like. \n          This is just a very basic UI implementation:\n        */}\n        <div>\n          <button className='button' onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n          </button>{' '}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'<'}\n          </button>{' '}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </button>{' '}\n          <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n            {'>>'}\n          </button>{' '}\n          <span>\n            Page{' '}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n          </span>\n          <span>\n            | Go to page:{' '}\n            <input\n              type=\"number\"\n              defaultValue={pageIndex + 1}\n              onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                gotoPage(page)\n              }}\n              style={{ width: '100px' }}\n            />\n          </span>{' '}\n          <select\n            value={pageSize}\n            onChange={e => {\n              setPageSize(Number(e.target.value))\n            }}\n          >\n            {[10, 20, 30, 40, 50].map(pageSize => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </>\n    )\n  }\n\nexport default Table"]},"metadata":{},"sourceType":"module"}