{"ast":null,"code":"import _slicedToArray from \"/Users/kyle/Easy_Ledger/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kyle/Easy_Ledger/front_end/src/components/table/table-of-journal-entries.jsx\";\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LineItemTable from './line-item-table';\nimport LineItemForm from './line-item-form'; //Generates a table with react-table 7 using pagination\n// Let's add a fetchData method to our Table component that will be used to fetch\n// new data when pagination state changes\n// We can also add a loading state to let our table know it's loading new data\n\nfunction TableOfJournalEntries(_ref) {\n  var _this = this;\n\n  var columns = _ref.columns,\n      data = _ref.data,\n      fetchData = _ref.fetchData,\n      controlledPageCount = _ref.pageCount,\n      elementCount = _ref.elementCount,\n      organizationId = _ref.organizationId,\n      personId = _ref.personId,\n      API_URL = _ref.API_URL,\n      localization = _ref.localization;\n\n  var _useTable = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 2\n    },\n    // Pass our hoisted table state\n    manualPagination: true,\n    // Tell the usePagination\n    // hook that we'll handle our own data fetching\n    // This means we'll also have to provide our own\n    // pageCount.\n    pageCount: controlledPageCount\n  }, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      journalEntryExpanded = _React$useState2[0],\n      setJournalEntryExpanded = _React$useState2[1]; //Whether or not the modal  is shown\n\n\n  var toggleJournalEntryExpanded = function toggleJournalEntryExpanded() {\n    return setJournalEntryExpanded(!journalEntryExpanded);\n  }; //Toggles modal on or off\n\n\n  var expandJournalEntry = function expandJournalEntry(i) {\n    //fetches a journalEntry from the API and toggles the modal on\n    fetchJournalEntry(i);\n    toggleJournalEntryExpanded();\n  };\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      editMode = _React$useState4[0],\n      setEditMode = _React$useState4[1]; //Toggle editmode for an expanded entry\n\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      createMode = _React$useState6[0],\n      setCreateMode = _React$useState6[1];\n\n  var toggleEditMode = function toggleEditMode() {\n    return setEditMode(!editMode);\n  };\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      journalEntryId = _React$useState8[0],\n      setJournalEntryId = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      journalEntryDescription = _React$useState10[0],\n      setJournalEntryDescription = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      journalEntryDate = _React$useState12[0],\n      setJournalEntryDate = _React$useState12[1];\n\n  var _React$useState13 = React.useState([]),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      lineItemData = _React$useState14[0],\n      setLineItemData = _React$useState14[1]; //Data to be passed in to lineItemTable\n\n\n  var _React$useState15 = React.useState([]),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      categories = _React$useState16[0],\n      setCategories = _React$useState16[1];\n\n  var _React$useState17 = React.useState([]),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      accounts = _React$useState18[0],\n      setAccounts = _React$useState18[1];\n\n  var _React$useState19 = React.useState([]),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      alertMessages = _React$useState20[0],\n      setAlertMessages = _React$useState20[1];\n\n  var fetchJournalEntry = function fetchJournalEntry(i) {\n    var url = \"\".concat(API_URL, \"/journalEntry/\").concat(i);\n    axios.get(url).then(function (response) {\n      var journalEntry = response.data;\n      var formattedLineItems = [];\n      journalEntry.lineItems.forEach(function (lineItem) {\n        var formattedLineItem = {\n          lineItemId: lineItem.lineItemId,\n          accountName: lineItem.accountName,\n          accountId: lineItem.accountId,\n          accountTypeId: lineItem.accountTypeId,\n          description: lineItem.description,\n          debitAmount: lineItem.isCredit ? null : lineItem.amount,\n          creditAmount: lineItem.isCredit ? lineItem.amount : null,\n          categoryName: lineItem.categoryName,\n          categoryId: lineItem.categoryId\n        };\n        formattedLineItems.push(formattedLineItem);\n      });\n      formattedLineItems.sort(function (a, b) {\n        return a.lineItemId > b.lineItemId ? 1 : -1;\n      }); //sort by LineItemId to preserve insertion order\n\n      setLineItemData(formattedLineItems);\n      setJournalEntryId(journalEntry.journalEntryId);\n      setJournalEntryDescription(journalEntry.description);\n      setJournalEntryDate(journalEntry.journalEntryDate);\n      setAlertMessages([]); //reset alert messages every time an entry is fetched to refresh the page\n    }).catch(console.log);\n  };\n\n  var openEditorForNewEntry = function openEditorForNewEntry() {\n    setJournalEntryId(null);\n    setJournalEntryDate('');\n    setJournalEntryDescription('');\n    setLineItemData([{\n      lineItemId: \"\",\n      accountName: \"\",\n      accountId: \"\",\n      accountTypeId: \"\",\n      description: \"\",\n      debitAmount: \"\",\n      creditAmount: \"\",\n      categoryName: \"\",\n      categoryId: \"\"\n    }]);\n    toggleEditMode();\n    setCreateMode(true);\n    toggleJournalEntryExpanded();\n  };\n\n  var cancelCreateMode = function cancelCreateMode() {\n    setCreateMode(false);\n    setAlertMessages([]);\n    toggleJournalEntryExpanded();\n  };\n\n  var fetchCategoriesAndAccounts = function fetchCategoriesAndAccounts(i) {\n    axios.get(\"\".concat(API_URL, \"/organization/\").concat(i, \"/category\")).then(function (response) {\n      var categories = response.data;\n      setCategories(categories);\n    }).catch(console.log);\n    axios.get(\"\".concat(API_URL, \"/organization/\").concat(i, \"/account\")).then(function (response) {\n      var accounts = response.data;\n      setAccounts(accounts);\n    });\n  }; // Listen for changes in pagination and use the state to fetch our new data\n\n\n  React.useEffect(function () {\n    fetchData({\n      pageIndex,\n      pageSize\n    });\n  }, [fetchData, pageIndex, pageSize]);\n  React.useEffect(function () {\n    fetchCategoriesAndAccounts(organizationId);\n  }, [organizationId]); //format table cell value based on column name and locale\n\n  var formatCellValue = function formatCellValue(cell) {\n    var columnId = cell.column.id;\n\n    switch (columnId) {\n      case \"creditAmount\":\n      case \"debitAmount\":\n        return new Intl.NumberFormat(localization.locale, {\n          style: 'currency',\n          currency: localization.currency\n        }).format(cell.value);\n\n      default:\n        return cell.value;\n    }\n  };\n\n  var checkEntryForValidationErrors = function checkEntryForValidationErrors() {\n    var errorMessages = [];\n\n    if (!journalEntryDate) {\n      errorMessages.push(\"Please choose a date for this entry.\");\n    }\n\n    if (!journalEntryDescription) {\n      errorMessages.push(\"Please provide a description for this entry.\");\n    }\n\n    var debitSum = 0;\n    var creditSum = 0;\n    var missingDescription = false;\n    var missingAmount = false;\n    lineItemData.forEach(function (lineItem) {\n      // check for missing descriptions and amounts, and sum debits and credits.\n      if (!lineItem.description) {\n        if (lineItem.creditAmount || lineItem.debitAmount) {\n          missingDescription = true;\n        }\n      }\n\n      if (!lineItem.creditAmount && !lineItem.debitAmount) {\n        if (lineItem.description) {\n          missingAmount = true;\n        }\n      } // if description and amount are both missing we will simply delete the line item when formatting for submission\n\n\n      if (lineItem.debitAmount) {\n        debitSum += lineItem.debitAmount;\n      }\n\n      if (lineItem.creditAmount) {\n        creditSum += lineItem.creditAmount;\n      }\n    }); //move missing description and missing amount error messages out of the loop to avoid duplicate messages\n\n    if (missingDescription) {\n      errorMessages.push(\"Line-items must have a description.\");\n    }\n\n    if (missingAmount) {\n      errorMessages.push(\"Line-items must have either a debit or credit.\");\n    }\n\n    if (debitSum.toFixed(2) != creditSum.toFixed(2)) {\n      errorMessages.push(\"Debits and Credits must balance.\");\n    }\n\n    setAlertMessages(errorMessages);\n    console.log(errorMessages);\n    return errorMessages;\n  }; //Returns a POSTable/PUTable journalEntry created from this function's state POSTable entries have null journalEntryId, otherwise they should be PUT instead. \n\n\n  var formatJournalEntryToSendToServer = function formatJournalEntryToSendToServer() {\n    var lineItems = lineItemData.map(function (lineItem) {\n      return {\n        accountId: lineItem.accountId,\n        amount: lineItem.debitAmount ? lineItem.debitAmount : lineItem.creditAmount,\n        categoryId: lineItem.categoryId,\n        description: lineItem.description,\n        isCredit: lineItem.creditAmount ? true : false\n      };\n    }); //remove any lineItems with no amount or description. make sure checkEntryForValidationErrors() returns an empty array before formatting entry to send to server!\n\n    var lineItemsWithEmptyItemsRemoved = lineItems.filter(function (lineItem) {\n      return lineItem.description || lineItem.amount;\n    });\n    return {\n      journalEntryId: journalEntryId,\n      journalEntryDate: journalEntryDate,\n      description: journalEntryDescription,\n      personId: personId,\n      organizationId: organizationId,\n      lineItems: lineItemsWithEmptyItemsRemoved\n    };\n  }; // Render the UI for your table\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderRadius: \"5px\",\n      borderStyle: \"solid\",\n      borderWidth: \"0.5px\",\n      borderColor: \"DarkGray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex bg-light justify-content-between px-2 py-2\",\n    style: {\n      borderRadius: \"inherit\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h5 align-self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, \"Accounting Entries\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-green align-self-center\",\n    onClick: function onClick() {\n      return openEditorForNewEntry();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ion ion-md-add fa-fw fa-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }), \"Add an entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive bg-white\",\n    style: {\n      borderTop: \"solid 1px Silver\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table table-hover m-b-0 text-inverse\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }), headerGroup.headers.map(function (column) {\n      return /*#__PURE__*/React.createElement(\"th\", Object.assign({\n        style: {\n          width: column.width\n        }\n      }, column.getHeaderProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 19\n        }\n      }), column.render('Header'), /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }, column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : ''));\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    style: {\n      borderBottom: \"solid 1px Silver\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }), page.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return expandJournalEntry(data[i].journalEntryId);\n      }\n    }, row.getRowProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 28\n        }\n      }), formatCellValue(cell));\n    }));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex bg-light justify-content-between px-1 py-2\",\n    style: {\n      borderRadius: \"inherit\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      width: \"25ch\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pager align-self-center m-t-0 m-b-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: canPreviousPage ? \"previous\" : \"previous disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, canPreviousPage ? /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return previousPage();\n    },\n    to: \"/journals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 34\n    }\n  }, \"\\u2190 Newer\") : null))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"align-self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, \"Showing \", pageIndex * page.length + 1 + \"-\" + (pageIndex + 1) * page.length, \" of \", elementCount, ' ', \"results\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pager align-self-center m-t-0 m-b-0\",\n    style: {\n      width: \"25ch\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: canNextPage ? \"next\" : \"next disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, canNextPage ? /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return nextPage();\n    },\n    to: \"/journals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 30\n    }\n  }, \"Older \\u2192\") : null))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: journalEntryExpanded,\n    toggle: function toggle() {\n      return toggleJournalEntryExpanded();\n    },\n    size: \"lg\",\n    style: {\n      maxWidth: '1600px',\n      width: '80%',\n      margin: 'auto'\n    },\n    backdrop: editMode ? \"static\" : true,\n    centered: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    style: {\n      backgroundColor: \"#e4e4e4\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, \"Journal Entry\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(LineItemForm, {\n    data: lineItemData,\n    setLineItemData: setLineItemData,\n    journalEntryDate: journalEntryDate,\n    setJournalEntryDate: setJournalEntryDate,\n    journalEntryDescription: journalEntryDescription,\n    setJournalEntryDescription: setJournalEntryDescription,\n    categories: categories,\n    accounts: accounts,\n    localization: localization,\n    alertMessages: alertMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(LineItemTable, {\n    data: lineItemData,\n    journalEntryDate: journalEntryDate,\n    journalEntryDescription: journalEntryDescription,\n    localization: localization,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"justify-content-between\",\n    style: {\n      backgroundColor: \"#e4e4e4\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }, createMode ? null : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-red\",\n    style: {\n      width: \"10ch\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 38\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    style: {\n      width: \"10ch\"\n    },\n    onClick: function onClick() {\n      console.log(journalEntryId);\n      console.log(journalEntryDate);\n      console.log(journalEntryDescription);\n      console.log(lineItemData);\n      console.log(checkEntryForValidationErrors().length);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, \"Print?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-white m-l-10\",\n    style: {\n      width: \"10ch\"\n    },\n    onClick: function onClick() {\n      createMode ? cancelCreateMode() : fetchJournalEntry(journalEntryId);\n      toggleEditMode();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, \"Cancel\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return toggleEditMode();\n    },\n    style: {\n      width: \"10ch\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-white m-l-10\",\n    onClick: function onClick() {\n      return toggleJournalEntryExpanded();\n    },\n    style: {\n      width: \"10ch\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, \"Close\"))))));\n}\n\nexport default TableOfJournalEntries;","map":{"version":3,"sources":["/Users/kyle/Easy_Ledger/front_end/src/components/table/table-of-journal-entries.jsx"],"names":["React","useTable","usePagination","Modal","ModalHeader","ModalBody","ModalFooter","Link","axios","LineItemTable","LineItemForm","TableOfJournalEntries","columns","data","fetchData","controlledPageCount","pageCount","elementCount","organizationId","personId","API_URL","localization","initialState","pageIndex","pageSize","manualPagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","state","useState","journalEntryExpanded","setJournalEntryExpanded","toggleJournalEntryExpanded","expandJournalEntry","i","fetchJournalEntry","editMode","setEditMode","createMode","setCreateMode","toggleEditMode","journalEntryId","setJournalEntryId","journalEntryDescription","setJournalEntryDescription","journalEntryDate","setJournalEntryDate","lineItemData","setLineItemData","categories","setCategories","accounts","setAccounts","alertMessages","setAlertMessages","url","get","then","response","journalEntry","formattedLineItems","lineItems","forEach","lineItem","formattedLineItem","lineItemId","accountName","accountId","accountTypeId","description","debitAmount","isCredit","amount","creditAmount","categoryName","categoryId","push","sort","a","b","catch","console","log","openEditorForNewEntry","cancelCreateMode","fetchCategoriesAndAccounts","useEffect","formatCellValue","cell","columnId","column","id","Intl","NumberFormat","locale","style","currency","format","value","checkEntryForValidationErrors","errorMessages","debitSum","creditSum","missingDescription","missingAmount","toFixed","formatJournalEntryToSendToServer","map","lineItemsWithEmptyItemsRemoved","filter","borderRadius","borderStyle","borderWidth","borderColor","borderTop","headerGroup","getHeaderGroupProps","headers","width","getHeaderProps","render","isSorted","isSortedDesc","borderBottom","row","cursor","getRowProps","cells","getCellProps","length","maxWidth","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable, usePagination } from 'react-table'\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LineItemTable from './line-item-table';\nimport LineItemForm from './line-item-form';\n\n//Generates a table with react-table 7 using pagination\n\n// Let's add a fetchData method to our Table component that will be used to fetch\n// new data when pagination state changes\n// We can also add a loading state to let our table know it's loading new data\nfunction TableOfJournalEntries({\n  columns,\n  data,\n  fetchData,\n  pageCount: controlledPageCount,\n  elementCount,\n  organizationId,\n  personId,\n  API_URL,\n  localization\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Get the state from the instance\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 2 }, // Pass our hoisted table state\n      manualPagination: true, // Tell the usePagination\n      // hook that we'll handle our own data fetching\n      // This means we'll also have to provide our own\n      // pageCount.\n      pageCount: controlledPageCount,\n    },\n    usePagination\n  )\n  \n  const [journalEntryExpanded, setJournalEntryExpanded] = React.useState(false); //Whether or not the modal  is shown\n  const toggleJournalEntryExpanded = () => setJournalEntryExpanded(!journalEntryExpanded); //Toggles modal on or off\n  const expandJournalEntry = i => { //fetches a journalEntry from the API and toggles the modal on\n    fetchJournalEntry(i);\n    toggleJournalEntryExpanded();\n  }\n  const [editMode, setEditMode] = React.useState(false); //Toggle editmode for an expanded entry\n  const [createMode, setCreateMode] = React.useState(false);\n  const toggleEditMode = () => setEditMode(!editMode);\n\n\n  const [journalEntryId, setJournalEntryId] = React.useState(null);\n  const [journalEntryDescription, setJournalEntryDescription] = React.useState('');\n  const [journalEntryDate, setJournalEntryDate] = React.useState('');\n  const [lineItemData, setLineItemData] = React.useState([]); //Data to be passed in to lineItemTable\n  const [categories, setCategories] = React.useState([]);\n  const [accounts, setAccounts] = React.useState([]);\n\n  const [alertMessages, setAlertMessages] = React.useState([]);\n\n  const fetchJournalEntry = i => {\n    const url = `${API_URL}/journalEntry/${i}`;\n    axios.get(url).then(response => {\n      var journalEntry = response.data;\n      var formattedLineItems = [];\n      journalEntry.lineItems.forEach(lineItem => {\n        var formattedLineItem = {\n          lineItemId: lineItem.lineItemId,\n          accountName: lineItem.accountName,\n          accountId: lineItem.accountId,\n          accountTypeId: lineItem.accountTypeId,\n          description: lineItem.description,\n          debitAmount: (lineItem.isCredit ? null : lineItem.amount),\n          creditAmount: (lineItem.isCredit ? lineItem.amount : null),\n          categoryName: lineItem.categoryName,\n          categoryId: lineItem.categoryId\n        };\n        formattedLineItems.push(formattedLineItem);\n      })\n      formattedLineItems.sort((a, b) => (a.lineItemId > b.lineItemId) ? 1 : -1) //sort by LineItemId to preserve insertion order\n      setLineItemData(formattedLineItems);\n      setJournalEntryId(journalEntry.journalEntryId);\n      setJournalEntryDescription(journalEntry.description);\n      setJournalEntryDate(journalEntry.journalEntryDate);\n      setAlertMessages([]); //reset alert messages every time an entry is fetched to refresh the page\n    })\n      .catch(console.log);\n  }\n  const openEditorForNewEntry = () => {\n    setJournalEntryId(null);\n    setJournalEntryDate('');\n    setJournalEntryDescription('');\n    setLineItemData([{\n      lineItemId: \"\",\n      accountName: \"\",\n      accountId: \"\",\n      accountTypeId: \"\",\n      description: \"\",\n      debitAmount: \"\",\n      creditAmount: \"\",\n      categoryName: \"\",\n      categoryId: \"\"\n    }])\n    toggleEditMode();\n    setCreateMode(true);\n    toggleJournalEntryExpanded();\n  }\n\n  const cancelCreateMode = () => {\n    setCreateMode(false);\n    setAlertMessages([]);\n    toggleJournalEntryExpanded();\n  }\n\n  const fetchCategoriesAndAccounts = i => {\n    axios.get(`${API_URL}/organization/${i}/category`).then(response => {\n      const categories = response.data;\n      setCategories(categories);\n    })\n      .catch(console.log);\n    axios.get(`${API_URL}/organization/${i}/account`).then(response => {\n      const accounts = response.data;\n      setAccounts(accounts);\n    })\n  }\n\n  // Listen for changes in pagination and use the state to fetch our new data\n  React.useEffect(() => {\n    fetchData({ pageIndex, pageSize })\n  }, [fetchData, pageIndex, pageSize])\n  \n  React.useEffect(() => {\n    fetchCategoriesAndAccounts(organizationId);\n  }, [organizationId])\n\n  //format table cell value based on column name and locale\n  const formatCellValue = cell => {\n    let columnId = cell.column.id;\n    switch (columnId) {\n      case \"creditAmount\":\n      case \"debitAmount\":\n        return (new Intl.NumberFormat(localization.locale, { style: 'currency', currency: localization.currency }).format(cell.value));\n      default:\n        return (cell.value);\n    }\n  }\n\n  const checkEntryForValidationErrors = () => {\n    let errorMessages = [];\n    if (!journalEntryDate) {\n      errorMessages.push(\"Please choose a date for this entry.\");\n    }\n    if (!journalEntryDescription) {\n      errorMessages.push(\"Please provide a description for this entry.\");\n    }\n\n    let debitSum = 0;\n    let creditSum = 0;\n    let missingDescription = false;\n    let missingAmount = false;\n    lineItemData.forEach(lineItem => { // check for missing descriptions and amounts, and sum debits and credits.\n      if (!lineItem.description) {\n        if (lineItem.creditAmount || lineItem.debitAmount) {\n          missingDescription = true;\n        }\n      }\n      if (!lineItem.creditAmount && !lineItem.debitAmount) {\n        if (lineItem.description) {\n          missingAmount = true;\n        }\n      } // if description and amount are both missing we will simply delete the line item when formatting for submission\n      if (lineItem.debitAmount) {\n        debitSum += lineItem.debitAmount;\n      }\n      if (lineItem.creditAmount) {\n        creditSum += lineItem.creditAmount;\n      }\n    })\n    //move missing description and missing amount error messages out of the loop to avoid duplicate messages\n    if (missingDescription) {\n      errorMessages.push(\"Line-items must have a description.\");\n    }\n    if (missingAmount) {\n      errorMessages.push(\"Line-items must have either a debit or credit.\");\n    }\n    if (debitSum.toFixed(2) != creditSum.toFixed(2)) {\n      errorMessages.push(\"Debits and Credits must balance.\")\n    }\n    setAlertMessages(errorMessages);\n    console.log(errorMessages);\n    return errorMessages;\n  }\n\n  //Returns a POSTable/PUTable journalEntry created from this function's state POSTable entries have null journalEntryId, otherwise they should be PUT instead. \n  const formatJournalEntryToSendToServer = () => {\n    let lineItems = lineItemData.map(lineItem => {\n      return {\n        accountId: lineItem.accountId,\n        amount: (lineItem.debitAmount ? lineItem.debitAmount : lineItem.creditAmount),\n        categoryId: lineItem.categoryId,\n        description: lineItem.description,\n        isCredit: (lineItem.creditAmount ? true : false)\n      }\n    });\n    //remove any lineItems with no amount or description. make sure checkEntryForValidationErrors() returns an empty array before formatting entry to send to server!\n    let lineItemsWithEmptyItemsRemoved = lineItems.filter(lineItem => (lineItem.description || lineItem.amount)); \n  \n    return {\n      journalEntryId : journalEntryId,\n      journalEntryDate: journalEntryDate,\n      description: journalEntryDescription,\n      personId: personId,\n      organizationId: organizationId,\n      lineItems: lineItemsWithEmptyItemsRemoved\n    }\n  }\n\n  // Render the UI for your table\n  return (\n    <>\n      <div style={{borderRadius: \"5px\", borderStyle: \"solid\", borderWidth:\"0.5px\", borderColor: \"DarkGray\"}}>\n      <div className=\"d-flex bg-light justify-content-between px-2 py-2\" style={{ borderRadius: \"inherit\" }}>\n        <span className=\"h5 align-self-center\">\n          Accounting Entries\n      </span>\n        <span>\n          <button className=\"btn btn-green align-self-center\" onClick={() => openEditorForNewEntry()}>\n            <i className=\"ion ion-md-add fa-fw fa-lg\"></i>Add an entry\n        </button>\n        </span>\n      </div>\n      <div className=\"table-responsive bg-white\" style={{ borderTop: \"solid 1px Silver\" }}>\n        <table className=\"table table-hover m-b-0 text-inverse\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th style={{width: column.width}}{...column.getHeaderProps()}>\n                    {column.render('Header')}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' 🔽'\n                          : ' 🔼'\n                        : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} style={{borderBottom: \"solid 1px Silver\"}}>\n            {page.map((row, i) => {\n              prepareRow(row)\n              return (\n                <tr style={{ cursor: \"pointer\" }} onClick={() => expandJournalEntry(data[i].journalEntryId)} {...row.getRowProps()}>{/* entry is represented as a clickable row that opens a modal when clicked*/}\n                  {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{formatCellValue(cell)}</td>\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"d-flex bg-light justify-content-between px-1 py-2\" style={{borderRadius:\"inherit\"}}>\n        <span style={{ width: \"25ch\" }}>\n          <ul className=\"pager align-self-center m-t-0 m-b-0\">\n            <li className={canPreviousPage ? \"previous\" : \"previous disabled\"}>\n              {canPreviousPage ? <Link onClick={() => previousPage()} to=\"/journals\">&larr; Newer</Link> : null}\n            </li>\n          </ul>\n        </span>\n        <span className=\"align-self-center\">\n          Showing {((pageIndex * page.length) + 1) + \"-\" + ((pageIndex + 1) * page.length)} of {elementCount}{' '}\n                    results\n        </span>\n        <span>\n          <ul className=\"pager align-self-center m-t-0 m-b-0\" style={{ width: \"25ch\" }}>\n            <li className={canNextPage ? \"next\" : \"next disabled\"}>\n              {canNextPage ? <Link onClick={() => nextPage()} to=\"/journals\">Older &rarr;</Link> : null}\n            </li>\n          </ul>\n        </span>\n      </div>\n      </div>\n      {/* Modal that opens when a row in the table is clicked */}\n      <Modal\n        isOpen={journalEntryExpanded}\n        toggle={() => toggleJournalEntryExpanded()}\n        size=\"lg\" style={{ maxWidth: '1600px', width: '80%', margin: 'auto' }}\n        backdrop={editMode ? \"static\" : true}\n        centered={false}\n      >\n        <ModalHeader style={{backgroundColor: \"#e4e4e4\"}}>Journal Entry</ModalHeader>\n        <ModalBody className=\"bg-light\">\n          {editMode ?\n            <LineItemForm\n              data={lineItemData} setLineItemData={setLineItemData}\n              journalEntryDate={journalEntryDate} setJournalEntryDate={setJournalEntryDate}\n              journalEntryDescription={journalEntryDescription} setJournalEntryDescription={setJournalEntryDescription}\n              categories={categories}\n              accounts={accounts}\n              localization={localization}\n              alertMessages={alertMessages}>\n            </LineItemForm> :\n            <LineItemTable\n              data={lineItemData}\n              journalEntryDate={journalEntryDate}\n              journalEntryDescription={journalEntryDescription}\n              localization={localization}>\n            </LineItemTable>\n          }\n        </ModalBody>\n        <ModalFooter className=\"justify-content-between\" style={{ backgroundColor: \"#e4e4e4\" }}>\n          {editMode ?\n            <>\n              <div>\n                {createMode ? null : <button className=\"btn btn-red\" style={{ width: \"10ch\" }}>Delete</button>}\n              </div>\n              <div>\n                <button className=\"btn btn-primary\"\n                  style={{ width: \"10ch\" }}\n                  onClick={() => {\n                    console.log(journalEntryId);\n                    console.log(journalEntryDate);\n                    console.log(journalEntryDescription);\n                    console.log(lineItemData);\n                    console.log(checkEntryForValidationErrors().length);\n                  }}>\n                  Print?</button>\n                <button\n                  className=\"btn btn-white m-l-10\"\n                  style={{ width: \"10ch\" }}\n                  onClick={() => {\n                    createMode ? cancelCreateMode() : fetchJournalEntry(journalEntryId);\n                    toggleEditMode();\n                  }}>\n                  Cancel</button>\n              </div>\n            </> :\n            <>\n              <div>{/*empty div to push the other two buttons to the right*/}</div>\n              <div>\n                <button className=\"btn btn-primary\" onClick={() => toggleEditMode()} style={{ width: \"10ch\" }}>Edit</button>\n                <button className=\"btn btn-white m-l-10\" onClick={() => toggleJournalEntryExpanded()} style={{ width: \"10ch\" }}>Close</button>\n              </div>\n            </>\n          }\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nexport default TableOfJournalEntries\n\n"]},"metadata":{},"sourceType":"module"}