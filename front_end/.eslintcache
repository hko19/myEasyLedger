[{"/Users/kyle/Easy_Ledger/front_end/src/index.js":"1","/Users/kyle/Easy_Ledger/front_end/src/app.jsx":"2","/Users/kyle/Easy_Ledger/front_end/src/config/page-settings.js":"3","/Users/kyle/Easy_Ledger/front_end/src/utils/constants.js":"4","/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/top-menu.jsx":"5","/Users/kyle/Easy_Ledger/front_end/src/components/header/header.jsx":"6","/Users/kyle/Easy_Ledger/front_end/src/components/content/content.jsx":"7","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar-right/sidebar-right.jsx":"8","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar.jsx":"9","/Users/kyle/Easy_Ledger/front_end/src/components/footer/footer.jsx":"10","/Users/kyle/Easy_Ledger/front_end/src/components/float-sub-menu/float-sub-menu.jsx":"11","/Users/kyle/Easy_Ledger/front_end/src/utils/interceptors.js":"12","/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/top-menu-nav.jsx":"13","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar-nav.jsx":"14","/Users/kyle/Easy_Ledger/front_end/src/config/page-route.jsx":"15","/Users/kyle/Easy_Ledger/front_end/src/components/float-sub-menu/float-sub-menu-list.jsx":"16","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar-profile.jsx":"17","/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/notification.jsx":"18","/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/profile.jsx":"19","/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/mega.jsx":"20","/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/language.jsx":"21","/Users/kyle/Easy_Ledger/front_end/src/components/header/search/form.jsx":"22","/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/menu.jsx":"23","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/menu.jsx":"24","/Users/kyle/Easy_Ledger/front_end/src/pages/chart-of-accounts/account-details.js":"25","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/balance-sheet-report.js":"26","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/income-statement-report.js":"27","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/reports.js":"28","/Users/kyle/Easy_Ledger/front_end/src/pages/chart-of-accounts/chart-of-accounts.js":"29","/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard.js":"30","/Users/kyle/Easy_Ledger/front_end/src/pages/user/registration-successful.js":"31","/Users/kyle/Easy_Ledger/front_end/src/pages/user/register-v3.js":"32","/Users/kyle/Easy_Ledger/front_end/src/pages/user/logout.js":"33","/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v3.js":"34","/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v1.js":"35","/Users/kyle/Easy_Ledger/front_end/src/pages/journals/journals.js":"36","/Users/kyle/Easy_Ledger/front_end/src/pages/helper/helper-css.js":"37","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-scrum-board.js":"38","/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v2.js":"39","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-cookie-acceptance-banner.js":"40","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-search.js":"41","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-invoice.js":"42","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-coming-soon.js":"43","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-timeline.js":"44","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-search-sidebar.js":"45","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-profile.js":"46","/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-error.js":"47","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-transparent-sidebar.js":"48","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-boxed-layout.js":"49","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-mixed-menu.js":"50","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-boxed-layout-with-mixed-menu.js":"51","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-mega-menu.js":"52","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-light-sidebar.js":"53","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-top-menu.js":"54","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-full-height.js":"55","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-two-sidebar.js":"56","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-wide-sidebar.js":"57","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-without-sidebar.js":"58","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-footer.js":"59","/Users/kyle/Easy_Ledger/front_end/src/pages/map/map.js":"60","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-blank.js":"61","/Users/kyle/Easy_Ledger/front_end/src/pages/calendar/calendar.js":"62","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-right-sidebar.js":"63","/Users/kyle/Easy_Ledger/front_end/src/pages/gallery/gallery.js":"64","/Users/kyle/Easy_Ledger/front_end/src/pages/chart/chart-js.js":"65","/Users/kyle/Easy_Ledger/front_end/src/pages/chart/chart-apex.js":"66","/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-minified-sidebar.js":"67","/Users/kyle/Easy_Ledger/front_end/src/pages/chart/chart-d3.js":"68","/Users/kyle/Easy_Ledger/front_end/src/pages/form/form-plugins.js":"69","/Users/kyle/Easy_Ledger/front_end/src/pages/table/table-basic.js":"70","/Users/kyle/Easy_Ledger/front_end/src/pages/form/form-elements.js":"71","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-social-buttons.js":"72","/Users/kyle/Easy_Ledger/front_end/src/pages/bootstrap/bootstrap-4.js":"73","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-language-bar-icon.js":"74","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-simple-line-icons.js":"75","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-icons.js":"76","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-ionicons.js":"77","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-buttons.js":"78","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-media-object.js":"79","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-widget-boxes.js":"80","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-tabs-accordion.js":"81","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-modal-notification.js":"82","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-general.js":"83","/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-typography.js":"84","/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard-v3.js":"85","/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard-v2.js":"86","/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard-v1.js":"87","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar-nav-list.jsx":"88","/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/top-menu-nav-list.jsx":"89","/Users/kyle/Easy_Ledger/front_end/src/pages/email/email-inbox.js":"90","/Users/kyle/Easy_Ledger/front_end/src/pages/email/email-compose.js":"91","/Users/kyle/Easy_Ledger/front_end/src/pages/email/email-detail.js":"92","/Users/kyle/Easy_Ledger/front_end/src/pages/widget/widget.js":"93","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/components/report-type-list.js":"94","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/components/balance-sheet-render.js":"95","/Users/kyle/Easy_Ledger/front_end/src/components/panel/panel.jsx":"96","/Users/kyle/Easy_Ledger/front_end/src/pages/chart-of-accounts/components/account-details-sidebar.js":"97","/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v3-render.js":"98","/Users/kyle/Easy_Ledger/front_end/src/pages/user/register-v3-render.js":"99","/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/components/income-and-expense-summary.js":"100","/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/components/balance-summary.js":"101","/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/general-journal.jsx":"102","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/components/income-statement-render.js":"103","/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-entry-view-mode.jsx":"104","/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-entry-edit-mode.jsx":"105","/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/table-of-journal-entries.jsx":"106","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/toggle-mobile-sidebar-button.jsx":"107","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/login-v3-text.js":"108","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/balance-sheet-render-text.js":"109","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/report-type-list-text.js":"110","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/income-statement-render-text.js":"111","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/balance-sheet-report-text.js":"112","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/income-statement-report-text.js":"113","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/reports-text.js":"114","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/journal-entry-view-mode-text.js":"115","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/general-journal-text.js":"116","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/journal-entry-edit-mode-text.js":"117","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/table-of-journal-entries-text.js":"118","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/journals-text.js":"119","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/balance-summary-text.js":"120","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/income-and-expense-summary-text.js":"121","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/dashboard-text.js":"122","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/chart-of-accounts-text.js":"123","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/account-details-text.js":"124","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/account-details-sidebar-text.js":"125","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/sidebar-text.js":"126","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/register-v3-text.js":"127","/Users/kyle/Easy_Ledger/front_end/src/pages/settings/settings.js":"128","/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/settings-text.js":"129"},{"size":827,"mtime":1578275996000,"results":"130","hashOfConfig":"131"},{"size":14838,"mtime":1612246682618,"results":"132","hashOfConfig":"131"},{"size":78,"mtime":1547770483000,"results":"133","hashOfConfig":"131"},{"size":168,"mtime":1611620931959,"results":"134","hashOfConfig":"131"},{"size":448,"mtime":1564580395000,"results":"135","hashOfConfig":"131"},{"size":3448,"mtime":1611980694094,"results":"136","hashOfConfig":"131"},{"size":1471,"mtime":1611036675139,"results":"137","hashOfConfig":"131"},{"size":2368,"mtime":1564631645000,"results":"138","hashOfConfig":"131"},{"size":1232,"mtime":1608188976998,"results":"139","hashOfConfig":"131"},{"size":390,"mtime":1548255605000,"results":"140","hashOfConfig":"131"},{"size":2365,"mtime":1564622980000,"results":"141","hashOfConfig":"131"},{"size":2446,"mtime":1605777870246,"results":"142","hashOfConfig":"131"},{"size":4375,"mtime":1548341456000,"results":"143","hashOfConfig":"131"},{"size":2457,"mtime":1612226971619,"results":"144","hashOfConfig":"131"},{"size":12274,"mtime":1612250264195,"results":"145","hashOfConfig":"131"},{"size":2425,"mtime":1564639384000,"results":"146","hashOfConfig":"131"},{"size":2545,"mtime":1612250283661,"results":"147","hashOfConfig":"131"},{"size":3200,"mtime":1564542038000,"results":"148","hashOfConfig":"131"},{"size":1180,"mtime":1597105252912,"results":"149","hashOfConfig":"131"},{"size":7063,"mtime":1564585623000,"results":"150","hashOfConfig":"131"},{"size":1432,"mtime":1564583657000,"results":"151","hashOfConfig":"131"},{"size":464,"mtime":1564544298000,"results":"152","hashOfConfig":"131"},{"size":6392,"mtime":1564998749000,"results":"153","hashOfConfig":"131"},{"size":6955,"mtime":1611901899782,"results":"154","hashOfConfig":"131"},{"size":7038,"mtime":1612226934638,"results":"155","hashOfConfig":"131"},{"size":1444,"mtime":1612226818409,"results":"156","hashOfConfig":"131"},{"size":1475,"mtime":1612226819799,"results":"157","hashOfConfig":"131"},{"size":1194,"mtime":1612226821158,"results":"158","hashOfConfig":"131"},{"size":27114,"mtime":1612226933053,"results":"159","hashOfConfig":"131"},{"size":1694,"mtime":1612226896197,"results":"160","hashOfConfig":"131"},{"size":2188,"mtime":1607413792268,"results":"161","hashOfConfig":"131"},{"size":695,"mtime":1612227861575,"results":"162","hashOfConfig":"131"},{"size":425,"mtime":1605776867875,"results":"163","hashOfConfig":"131"},{"size":705,"mtime":1605775953167,"results":"164","hashOfConfig":"131"},{"size":2119,"mtime":1564578127000,"results":"165","hashOfConfig":"131"},{"size":1009,"mtime":1612226857890,"results":"166","hashOfConfig":"131"},{"size":136032,"mtime":1564569494000,"results":"167","hashOfConfig":"131"},{"size":16522,"mtime":1578623308000,"results":"168","hashOfConfig":"131"},{"size":4351,"mtime":1564577946000,"results":"169","hashOfConfig":"131"},{"size":2063,"mtime":1578553159000,"results":"170","hashOfConfig":"131"},{"size":15236,"mtime":1564558875000,"results":"171","hashOfConfig":"131"},{"size":5247,"mtime":1548310025000,"results":"172","hashOfConfig":"131"},{"size":3480,"mtime":1564631698000,"results":"173","hashOfConfig":"131"},{"size":7956,"mtime":1564558899000,"results":"174","hashOfConfig":"131"},{"size":1119,"mtime":1578553512000,"results":"175","hashOfConfig":"131"},{"size":56558,"mtime":1564555429000,"results":"176","hashOfConfig":"131"},{"size":1094,"mtime":1564554927000,"results":"177","hashOfConfig":"131"},{"size":1171,"mtime":1564581674000,"results":"178","hashOfConfig":"131"},{"size":1115,"mtime":1564581045000,"results":"179","hashOfConfig":"131"},{"size":1095,"mtime":1564581616000,"results":"180","hashOfConfig":"131"},{"size":1255,"mtime":1564579025000,"results":"181","hashOfConfig":"131"},{"size":1104,"mtime":1564581118000,"results":"182","hashOfConfig":"131"},{"size":1123,"mtime":1564581110000,"results":"183","hashOfConfig":"131"},{"size":1170,"mtime":1564581671000,"results":"184","hashOfConfig":"131"},{"size":4478,"mtime":1564639008000,"results":"185","hashOfConfig":"131"},{"size":1108,"mtime":1564581676000,"results":"186","hashOfConfig":"131"},{"size":1116,"mtime":1564581146000,"results":"187","hashOfConfig":"131"},{"size":1277,"mtime":1564581678000,"results":"188","hashOfConfig":"131"},{"size":1071,"mtime":1564581070000,"results":"189","hashOfConfig":"131"},{"size":1094,"mtime":1564578159000,"results":"190","hashOfConfig":"131"},{"size":793,"mtime":1564578974000,"results":"191","hashOfConfig":"131"},{"size":2521,"mtime":1564545412000,"results":"192","hashOfConfig":"131"},{"size":1123,"mtime":1564581624000,"results":"193","hashOfConfig":"131"},{"size":12536,"mtime":1564568464000,"results":"194","hashOfConfig":"131"},{"size":8208,"mtime":1564545950000,"results":"195","hashOfConfig":"131"},{"size":29003,"mtime":1578801443000,"results":"196","hashOfConfig":"131"},{"size":1147,"mtime":1564581456000,"results":"197","hashOfConfig":"131"},{"size":15786,"mtime":1564545984000,"results":"198","hashOfConfig":"131"},{"size":12032,"mtime":1564568417000,"results":"199","hashOfConfig":"131"},{"size":14947,"mtime":1564585378000,"results":"200","hashOfConfig":"131"},{"size":31593,"mtime":1564559145000,"results":"201","hashOfConfig":"131"},{"size":12329,"mtime":1564584866000,"results":"202","hashOfConfig":"131"},{"size":17801,"mtime":1607927507621,"results":"203","hashOfConfig":"131"},{"size":54213,"mtime":1564583625000,"results":"204","hashOfConfig":"131"},{"size":18649,"mtime":1564584267000,"results":"205","hashOfConfig":"131"},{"size":175057,"mtime":1564583452000,"results":"206","hashOfConfig":"131"},{"size":152142,"mtime":1564583583000,"results":"207","hashOfConfig":"131"},{"size":17297,"mtime":1564582416000,"results":"208","hashOfConfig":"131"},{"size":12373,"mtime":1564583686000,"results":"209","hashOfConfig":"131"},{"size":20706,"mtime":1564639016000,"results":"210","hashOfConfig":"131"},{"size":10627,"mtime":1564585698000,"results":"211","hashOfConfig":"131"},{"size":12760,"mtime":1597806002217,"results":"212","hashOfConfig":"131"},{"size":15722,"mtime":1612249449141,"results":"213","hashOfConfig":"131"},{"size":14727,"mtime":1564585754000,"results":"214","hashOfConfig":"131"},{"size":36920,"mtime":1578302175000,"results":"215","hashOfConfig":"131"},{"size":18463,"mtime":1597804217604,"results":"216","hashOfConfig":"131"},{"size":26567,"mtime":1607842433380,"results":"217","hashOfConfig":"131"},{"size":2823,"mtime":1612226969759,"results":"218","hashOfConfig":"131"},{"size":1959,"mtime":1564581527000,"results":"219","hashOfConfig":"131"},{"size":19329,"mtime":1564638992000,"results":"220","hashOfConfig":"131"},{"size":9036,"mtime":1564638974000,"results":"221","hashOfConfig":"131"},{"size":8404,"mtime":1564638982000,"results":"222","hashOfConfig":"131"},{"size":76994,"mtime":1608189971688,"results":"223","hashOfConfig":"131"},{"size":1625,"mtime":1612226815253,"results":"224","hashOfConfig":"131"},{"size":13255,"mtime":1612226812260,"results":"225","hashOfConfig":"131"},{"size":3028,"mtime":1564545901000,"results":"226","hashOfConfig":"131"},{"size":10388,"mtime":1612226936690,"results":"227","hashOfConfig":"131"},{"size":5298,"mtime":1612226799099,"results":"228","hashOfConfig":"131"},{"size":9847,"mtime":1612249936232,"results":"229","hashOfConfig":"131"},{"size":7391,"mtime":1612226893897,"results":"230","hashOfConfig":"131"},{"size":3241,"mtime":1612226892589,"results":"231","hashOfConfig":"131"},{"size":2130,"mtime":1612226848190,"results":"232","hashOfConfig":"131"},{"size":12931,"mtime":1612226814956,"results":"233","hashOfConfig":"131"},{"size":4067,"mtime":1612226854337,"results":"234","hashOfConfig":"131"},{"size":11007,"mtime":1612226852881,"results":"235","hashOfConfig":"131"},{"size":17612,"mtime":1612226856435,"results":"236","hashOfConfig":"131"},{"size":494,"mtime":1611982504559,"results":"237","hashOfConfig":"131"},{"size":1709,"mtime":1612248763027,"results":"238","hashOfConfig":"131"},{"size":6027,"mtime":1612247739846,"results":"239","hashOfConfig":"131"},{"size":428,"mtime":1612248841834,"results":"240","hashOfConfig":"131"},{"size":1925,"mtime":1612248229070,"results":"241","hashOfConfig":"131"},{"size":319,"mtime":1612247770194,"results":"242","hashOfConfig":"131"},{"size":331,"mtime":1612248250362,"results":"243","hashOfConfig":"131"},{"size":210,"mtime":1612248857818,"results":"244","hashOfConfig":"131"},{"size":606,"mtime":1612248680778,"results":"245","hashOfConfig":"131"},{"size":452,"mtime":1612248135556,"results":"246","hashOfConfig":"131"},{"size":820,"mtime":1612248276715,"results":"247","hashOfConfig":"131"},{"size":1858,"mtime":1612248927045,"results":"248","hashOfConfig":"131"},{"size":215,"mtime":1612248713729,"results":"249","hashOfConfig":"131"},{"size":309,"mtime":1612247836287,"results":"250","hashOfConfig":"131"},{"size":1075,"mtime":1612248178031,"results":"251","hashOfConfig":"131"},{"size":209,"mtime":1612248110926,"results":"252","hashOfConfig":"131"},{"size":5907,"mtime":1612248059380,"results":"253","hashOfConfig":"131"},{"size":607,"mtime":1612247451908,"results":"254","hashOfConfig":"131"},{"size":1959,"mtime":1612247416339,"results":"255","hashOfConfig":"131"},{"size":804,"mtime":1612248881086,"results":"256","hashOfConfig":"131"},{"size":2597,"mtime":1612248812776,"results":"257","hashOfConfig":"131"},{"size":2455,"mtime":1612251793732,"results":"258","hashOfConfig":"131"},{"size":164,"mtime":1612251789566,"results":"259","hashOfConfig":"131"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"1120ydm",{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"262"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"262"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"262"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"262"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"262"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"262"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"262"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"262"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"479","messages":"480","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"262"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kyle/Easy_Ledger/front_end/src/index.js",[],["528","529"],"/Users/kyle/Easy_Ledger/front_end/src/app.jsx",["530","531"],"/Users/kyle/Easy_Ledger/front_end/src/config/page-settings.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/constants.js",[],"/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/top-menu.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/header/header.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/content/content.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/sidebar-right/sidebar-right.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/footer/footer.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/float-sub-menu/float-sub-menu.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/interceptors.js",["532"],"import { transpileModule } from \"typescript\";\nimport { API_BASE_URL, ACCESS_TOKEN, REFRESH_TOKEN } from \"./constants.js\"\n\nvar axios = require(\"axios\");\n\nasync function refreshAccessToken() {\n  let jwtToken = localStorage.getItem(REFRESH_TOKEN);\n  await axios.get(`${API_BASE_URL}/auth/refresh`, { headers: { Authorization: \"Bearer \" + jwtToken, retry: true } }).then(response => { //MUST send with a 'retry' header marked as true, otherwise will trigger an infinite loop in the response interceptor\n    localStorage.removeItem(ACCESS_TOKEN);\n    localStorage.removeItem(REFRESH_TOKEN);\n    localStorage.setItem(ACCESS_TOKEN, response.data.accessToken);\n    localStorage.setItem(REFRESH_TOKEN, response.data.refreshToken);\n  }).catch(console.log);\n  console.log('Refreshed JWT');\n\n}\n\naxios.interceptors.request.use(\n  function (config) { //Adds JWT stored in localStorage to the authorization headers of every request that does not explicitly set an authorization header\n    let jwtToken = localStorage.getItem(ACCESS_TOKEN);\n    if (jwtToken && !config.headers[\"Authorization\"]) {\n      config.headers[\"Authorization\"] = \"Bearer \" + jwtToken;\n    }\n    return config;\n  },\n  async function (error) {\n    return Promise.reject(error);\n  }\n);\n\n\naxios.interceptors.response.use((response) => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n  console.log(originalRequest.headers[\"retry\"]);\n  if (error.response) {\n    if (error.response.status === 401) { //if response is 401 unauthorized\n      if (!originalRequest.headers[\"retry\"]) { //if we have not retried the request with a refreshed jwt\n        originalRequest.headers[\"retry\"] = true;\n        console.log(originalRequest.headers[\"retry\"]); //flag this upcoming request as a retry attempt\n        await refreshAccessToken(); //attempt to refresh jwt using refresh token\n        let newJwtToken = localStorage.getItem(ACCESS_TOKEN);\n        originalRequest.headers[\"Authorization\"] = \"Bearer \" + newJwtToken;\n        return axios(originalRequest); //send original request again using a refreshed jwt. this request is flagged as a 'retry' attempt, in order to avoid an infinite loop.\n      }\n      console.log(window.location.origin)\n      window.location.href = window.location.origin + \"/user/logout\" //log the user out and redirect user to login page if a 401 error is returned after jwt refresh attempt. \n    }\n  }\n\n  return Promise.reject(error);\n})","/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/top-menu-nav.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar-nav.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/config/page-route.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/float-sub-menu/float-sub-menu-list.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar-profile.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/notification.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/profile.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/mega.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/header/dropdown/language.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/header/search/form.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/menu.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/menu.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/chart-of-accounts/account-details.js",["533","534","535","536"],"import React from 'react';\nimport TableOfJournalEntries from '../journals/components/table-of-journal-entries';\nimport {API_BASE_URL} from '../../utils/constants';\nimport axios from 'axios';\nimport {Link, useParams} from 'react-router-dom';\nimport AccountDetailsSidebar from \"./components/account-details-sidebar\";\nimport { PageSettings } from '../../config/page-settings';\nimport {accountDetailsText} from './account-details-text.js';\nimport ToggleMobileSidebarButton from '../../components/sidebar/toggle-mobile-sidebar-button';\n\nfunction AccountDetails(props) {\n\n    const appContext = React.useContext(PageSettings);\n\n    const columns = React.useMemo(\n        () => [ // accessor is the \"key\" in the data},\n            { Header: accountDetailsText[appContext.locale]['Date'], accessor: 'journalEntryDate', width: \"20%\" },\n            { Header: accountDetailsText[appContext.locale]['Description'], accessor: 'description', width: \"60%\" },\n            { Header: accountDetailsText[appContext.locale]['Debit'], accessor: 'debitAmount', width: \"10%\" },\n            { Header: accountDetailsText[appContext.locale]['Credit'], accessor: 'creditAmount', width: \"10%\" },\n        ],\n        []\n    )\n\n    //get the selected account ID from URL parameters\n    const selectedAccountId = useParams().id;\n\n    // We'll start our table without any data\n    const [data, setData] = React.useState([])\n    const [pageCount, setPageCount] = React.useState(0)\n    const [elementCount, setElementCount] = React.useState(0)\n\n    //\n    const [selectedAccount, setSelectedAccount] = React.useState(null);\n    const [accountGroupOptions, setAccountGroupOptions] = React.useState(null);\n\n    //initially fetch account data, list of subtypes, list of categories, list of types from API\n    React.useEffect(() => {\n        axios.get(`${API_BASE_URL}/account/${selectedAccountId}/accountBalance`).then(response => {\n            let selectedAccount = response.data\n            setSelectedAccount(selectedAccount);\n        }).catch(console.log);\n        \n        axios.get(`${API_BASE_URL}/organization/${appContext.currentOrganization}/accountGroup`).then(response => {\n            let formattedAccountGroupOptions = response.data.map(accountGroup => ({\n                value: accountGroup.accountGroupId,\n                label: accountGroup.accountGroupName,\n                object: accountGroup\n            }))\n            setAccountGroupOptions(formattedAccountGroupOptions);\n        }).catch(console.log);\n    }, [])\n\n    const refreshAccountData = React.useCallback(() => {\n        axios.get(`${API_BASE_URL}/account/${selectedAccountId}/accountBalance`).then(response => {\n            let account = response.data;\n            setSelectedAccount(account);\n        }).catch(console.log)\n\n        axios.get(`${API_BASE_URL}/organization/${appContext.currentOrganization}/accountGroup`).then(response => {\n            let formattedAccountGroupOptions = response.data.map(accountGroup => ({\n                value: accountGroup.accountGroupId,\n                label: accountGroup.accountGroupName,\n                object: accountGroup\n            }))\n            setAccountGroupOptions(formattedAccountGroupOptions);\n        }).catch(console.log);\n\n    }, [])\n\n    const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\n        // This will get called when the table needs new data\n\n        //fetch data from Easy Ledger API\n        const url = `${API_BASE_URL}/account/${selectedAccountId}/lineItem/?page=${pageIndex}&size=${pageSize}`;\n        axios.get(url).then(response => {\n            var dataContent = response.data.content;\n            dataContent.forEach(lineItem => {\n                if (lineItem.isCredit) {\n                    lineItem.debitAmount = 0;\n                    lineItem.creditAmount = lineItem.amount;\n                } else {\n                    lineItem.creditAmount = 0;\n                    lineItem.debitAmount = lineItem.amount;\n                }\n            })\n            setData(dataContent);\n            setPageCount(response.data.totalPages);\n            setElementCount(response.data.totalElements);\n        })\n            .catch(console.log);\n        //also refresh account data    \n        axios.get(`${API_BASE_URL}/account/${selectedAccountId}/accountBalance`).then(response => {\n            let account = response.data;\n            setSelectedAccount(account);\n        }).catch(console.log)\n        axios.get(`${API_BASE_URL}/organization/${appContext.currentOrganization}/accountGroup`).then(response => {\n            let formattedAccountGroupOptions = response.data.map(accountGroup => ({\n                value: accountGroup.accountGroupId,\n                label: accountGroup.accountGroupName,\n                object: accountGroup\n            }))\n            setAccountGroupOptions(formattedAccountGroupOptions);\n        }).catch(console.log);\n\n    }, [])\n\n    return (\n        <>\n            <ol className=\"breadcrumb float-xl-right\">\n                <li className=\"breadcrumb-item\"><Link to=\"/\">{accountDetailsText[appContext.locale][\"Home\"]}</Link></li>\n                <li className=\"breadcrumb-item\"><Link to=\"/chart-of-accounts\">{accountDetailsText[appContext.locale][\"Chart of Accounts\"]}</Link></li>\n                <li className=\"breadcrumb-item active\">{accountDetailsText[appContext.locale][\"Account Details\"]}</li>\n            </ol>\n\n            <h1 className=\"page-header\">\n                {accountDetailsText[appContext.locale][\"Account Details\"]}\n                <ToggleMobileSidebarButton className=\"d-md-none float-right \"/>\n            </h1>\n\n\n            <div className=\"row\">\n                <span className=\"col-md-8\">\n                    {selectedAccount ? <TableOfJournalEntries\n                        columns={columns}\n                        data={data}\n                        fetchData={fetchData}\n                        pageCount={pageCount}\n                        elementCount={elementCount}\n                        tableTitle={selectedAccount.accountName}\n                        hasAddEntryButton={false}\n                    /> : <div className=\"d-flex justify-content-center fa-3x py-3\"><i className=\"fas fa-circle-notch fa-spin\"></i></div>\n                    /* we reuse TableOfJournalEntries component, even though it's more like a TableOfLineItems here */} \n                </span>\n                <span className=\"col-md-4\">\n                    <div>\n                        {selectedAccount && accountGroupOptions ? <AccountDetailsSidebar\n                            {...selectedAccount}\n                            accountGroupOptions={accountGroupOptions}\n                            refreshAccountData={refreshAccountData}\n                            elementCount={elementCount}\n                        /> : <div className=\"d-flex justify-content-center fa-3x py-3\"><i className=\"fas fa-circle-notch fa-spin\"></i></div>}\n                    </div>\n                </span>\n            </div>\n\n        </>\n    )\n}\n\n\n\n\nexport default AccountDetails","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/balance-sheet-report.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/reports/income-statement-report.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/reports/reports.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/chart-of-accounts/chart-of-accounts.js",["537","538","539","540","541","542","543","544","545","546","547"],"/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/user/registration-successful.js",["548","549"],"import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {PageSettings} from '../../config/page-settings.js';\n\nclass RegistrationSuccessful extends React.Component {\n\tstatic contextType = PageSettings;\n\t\n\tconstructor(props) {\n    super(props);\n    }\n\n\tcomponentDidMount() {\n\t\tthis.context.handleSetPageSidebar(false);\n\t\tthis.context.handleSetPageHeader(false);\n\t\tthis.context.handleSetBodyWhiteBg(true);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.context.handleSetPageSidebar(true);\n\t\t//this.context.handleSetPageHeader(true);\n\t\tthis.context.handleSetBodyWhiteBg(false);\n\t}\n  \n\trender() {\n        return (\n            <div className=\"register register-with-news-feed\">\n                <div className=\"news-feed\">\n                    <div className=\"news-image\" style={{ backgroundImage: 'url(/assets/img/login-bg/login-bg-9.jpg)' }}></div>\n                    <div className=\"news-caption\">\n                        <h4 className=\"caption-title\"><b>Easy</b> Ledger App</h4>\n                        <p>\n                            As a Color Admin app administrator, you use the Color Admin console to manage your organization’s account, such as add new users, manage security settings, and turn on the services you want your team to access.\n                        </p>\n                    </div>\n                </div>\n                <div className=\"right-content\">\n                    <h1 className=\"register-header\">\n                        Registration Successful!\n                    </h1>\n                    <div className=\"register-content\">\n                            <div className=\"m-t-20 m-b-40 p-b-40 text-inverse\">\n                                <p>A verification email is on its way to your inbox.</p>\n                                <Link to=\"/user/login-v3\">Return to login page.</Link>\n                            </div>\n                            <hr />\n                            <p className=\"text-center\">\n                                &copy; Color Admin All Right Reserved 2020\n                            </p>\n                    </div>\n                </div>\n            </div>\n        )\t}\n}\n\nexport default RegistrationSuccessful;","/Users/kyle/Easy_Ledger/front_end/src/pages/user/register-v3.js",["550"],"/Users/kyle/Easy_Ledger/front_end/src/pages/user/logout.js",["551","552"],"import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PageSettings } from './../../config/page-settings.js';\nimport LoginV3Render from './login-v3-render.js';\n\nclass Logout extends React.Component {\n\tstatic contextType = PageSettings;\n  \n\tcomponentDidMount() {\n        this.context.logout();\n\t}\n  \n\trender() {\n\t\treturn (\n            <h1>Logging out...</h1>\n        );\n\t}\n}\n\nexport default Logout;","/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v3.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v1.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/journals/journals.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/helper/helper-css.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-scrum-board.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v2.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-cookie-acceptance-banner.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-search.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-invoice.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-coming-soon.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-timeline.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-search-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-profile.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/extra/extra-error.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-transparent-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-boxed-layout.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-mixed-menu.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-boxed-layout-with-mixed-menu.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-mega-menu.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-light-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-top-menu.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-full-height.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-two-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-wide-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-without-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-footer.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/map/map.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-blank.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/calendar/calendar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-right-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/gallery/gallery.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/chart/chart-js.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/chart/chart-apex.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/option/page-with-minified-sidebar.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/chart/chart-d3.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/form/form-plugins.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/table/table-basic.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/form/form-elements.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-social-buttons.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/bootstrap/bootstrap-4.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-language-bar-icon.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-simple-line-icons.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-icons.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-ionicons.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-buttons.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-media-object.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-widget-boxes.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-tabs-accordion.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-modal-notification.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-general.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/ui/ui-typography.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard-v3.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard-v2.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/dashboard-v1.js",[],"/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/sidebar-nav-list.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/components/top-menu/top-menu-nav-list.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/email/email-inbox.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/email/email-compose.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/email/email-detail.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/widget/widget.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/reports/components/report-type-list.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/reports/components/balance-sheet-render.js",["553","554","555","556"],"/Users/kyle/Easy_Ledger/front_end/src/components/panel/panel.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/chart-of-accounts/components/account-details-sidebar.js",["557","558","559"],"import React from 'react';\nimport { PageSettings } from '../../../config/page-settings';\nimport {Link, useHistory} from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Alert } from 'reactstrap';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport {API_BASE_URL} from '../../../utils/constants';\nimport {accountDetailsSidebarText} from './account-details-sidebar-text.js';\n\nfunction AccountDetailsSidebar(props) {\n    /*  required props: accountId, accountName, accountGroupId, accountGroupName, debitTotal, creditTotal, accountTypeName, \n        accountGroupOptions, refreshAccountData, elementCount\n        If spreading an accountBalance object from the api into props, you'll need {...account}, accountGroupOptions, refreshAccountData, elementCount */\n\n    const appContext = React.useContext(PageSettings);\n    const history = useHistory();\n\n    const [accountNameInput, setAccountNameInput] = React.useState(props.accountName);\n    const [selectedAccountGroupOption, setSelectedAccountGroupOption] = React.useState(props.accountGroupOptions.find(accountGroupOption => accountGroupOption.object.accountGroupId == props.accountGroupId));\n    \n    const [editAccountModal, setEditAccountModal] = React.useState(false);\n    const [noAccountNameAlert, setNoAccountNameAlert] = React.useState(false);\n    \n    const [deleteAccountAlert, setDeleteAccountAlert] = React.useState(false);\n    const toggleDeleteAccountAlert = () => {\n        setDeleteAccountAlert(!deleteAccountAlert);\n    }\n    const [cannotDeleteAccountAlert, setCannotDeleteAccountAlert] = React.useState(false);\n    const toggleCannotDeleteAccountAlert = () => {\n        setCannotDeleteAccountAlert(!cannotDeleteAccountAlert);\n    }\n\n\n    /** Begin utils for 'edit account' form */\n    const toggleEditAccountModal = () => {\n        setEditAccountModal(!editAccountModal);\n        setAccountNameInput(props.accountName)\n        setSelectedAccountGroupOption(props.accountGroupOptions.find(accountGroupOption => accountGroupOption.object.accountGroupId == props.accountGroupId));\n        setNoAccountNameAlert(false);\n    }\n\n    const handleChangeAccountGroupOption = (selectedOption) => {\n        setSelectedAccountGroupOption(selectedOption);\n    }\n\n    const handleSaveEditAccount = async () => {\n        if (!accountNameInput) {\n            setNoAccountNameAlert(true);\n        }\n        let postedObject = {\n            accountId: props.accountId,\n            accountName: accountNameInput,\n            accountGroupId: selectedAccountGroupOption.object.accountGroupId\n        }\n        if (accountNameInput) {\n            await putAccount(postedObject);\n            await props.refreshAccountData();\n            toggleEditAccountModal();\n        }\n    }\n    /** End utils for 'edit account' form */\n\n\n    /** Begin utils for deleting account */\n    const handleConfirmDeleteAccountButton = async () => {\n        if (props.elementCount != 0) {\n            toggleDeleteAccountAlert();\n            toggleCannotDeleteAccountAlert();\n        } else {\n            deleteAccount(props.accountId);\n        }\n    }\n    /** End utils for deleting account */\n\n\n    /** Begin API calls */\n    const putAccount = async (account) => {\n        axios.put(`${API_BASE_URL}/account/${account.accountId}`, account).then(response => {\n            console.log(response);\n        }).catch(console.log);\n    }\n\n    const deleteAccount = async (accountId) => {\n        axios.delete(`${API_BASE_URL}/account/${accountId}`).then(response => {\n            console.log(response);\n            history.push(\"/chart-of-accounts\");\n        }).catch(console.log);\n    } \n    /** End API calls */\n\n    \n    const formatCurrency = number => {\n        return new Intl.NumberFormat(appContext.locale, { style: 'currency', currency: appContext.currency }).format(number);\n    }\n\n    return (\n        <div className=\"widget widget-rounded mb-3\">\n            <div className=\"widget-header bg-light border-bottom\">\n                <h4 className=\"widget-header-title\">{accountDetailsSidebarText[appContext.locale][\"Account Details\"]}</h4>\n                <div className=\"widget-header-icon\">\n                    <Link replace to=\"#\" onClick={toggleEditAccountModal} className=\"icon-link-text-muted\"><i className=\"fas fa-fw fa-edit\"></i></Link>\n                </div>\n                <div className=\"widget-header-icon\">\n                    <Link replace to=\"#\" onClick={toggleDeleteAccountAlert} className=\"icon-link-text-muted\"><i className=\"fas fa-fw fa-trash-alt\"></i></Link>\n                </div>\n\n            </div>\n            <div className=\"px-2\">\n                <table className=\"table table-nested\">\n                    <tbody>\n                        <tr>\n                            <td>{accountDetailsSidebarText[appContext.locale][\"Account Name:\"]}</td>\n                            <td>{props.accountName}</td>\n                        </tr>\n                        <tr>\n                            <td>{accountDetailsSidebarText[appContext.locale][\"Account Group:\"]}</td>\n                            <td>{props.accountGroupName}</td>\n                        </tr>\n                        <tr>\n                            <td>{accountDetailsSidebarText[appContext.locale][\"Account Type:\"]}</td>\n                            <td>{props.accountTypeName}</td>\n                        </tr>\n                        <tr>\n                            <td>{accountDetailsSidebarText[appContext.locale][\"Total Debit Amount:\"]}</td>\n                            <td>{formatCurrency(props.debitTotal)}</td>\n                        </tr>\n                        <tr>\n                            <td>{accountDetailsSidebarText[appContext.locale][\"Total Credit Amount:\"]}</td>\n                            <td>{formatCurrency(props.creditTotal)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <Modal isOpen={editAccountModal} toggle={toggleEditAccountModal} centered={true}>\n                <ModalHeader>{accountDetailsSidebarText[appContext.locale][\"Edit Account Details\"]}</ModalHeader>\n                <ModalBody>\n                    {\n                        noAccountNameAlert ?\n                            <Alert color=\"danger\">\n                                {accountDetailsSidebarText[appContext.locale][\"Please provide a name for your account.\"]}\n                            </Alert>\n                            : null\n                    }\n                    <form onSubmit={event => { event.preventDefault(); handleSaveEditAccount() }}>\n                        <div className=\"form-group row\">\n                            <label className=\"col-form-label col-md-3\">\n                                {accountDetailsSidebarText[appContext.locale][\"Account Name\"]}\n                            </label>\n                            <div className=\"col-md-9\">\n                                <input\n                                    className=\"form-control\"\n                                    value={accountNameInput}\n                                    onChange={event => {\n                                        setAccountNameInput(event.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-form-label col-md-3\">\n                                {accountDetailsSidebarText[appContext.locale][\"Account Group\"]}\n                            </label>\n                            <div className=\"col-md-9\">\n                                <Select\n                                    options={props.accountGroupOptions}\n                                    value={selectedAccountGroupOption}\n                                    isSearchable={true}\n                                    onChange={handleChangeAccountGroupOption}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n                    <button\n                        className=\"btn btn-primary width-10ch\"\n                        onClick={handleSaveEditAccount}\n                    >\n                        {accountDetailsSidebarText[appContext.locale][\"Save\"]}\n                    </button>\n                    <button\n                        className=\"btn btn-white width-10ch\"\n                        onClick={toggleEditAccountModal}\n                    >\n                        {accountDetailsSidebarText[appContext.locale][\"Cancel\"]}\n                    </button>\n                </ModalFooter>\n            </Modal>\n\n            {deleteAccountAlert ? \n                <SweetAlert primary showCancel\n                    confirmBtnText={accountDetailsSidebarText[appContext.locale][\"Yes, delete it!\"]}\n                    confirmBtnBsStyle=\"primary\"\n                    cancelBtnBsStyle=\"default\"\n                    cancelBtnText={accountDetailsSidebarText[appContext.locale][\"Cancel\"]}\n                    title={accountDetailsSidebarText[appContext.locale][\"Are you sure?\"]}\n                    onConfirm={() => handleConfirmDeleteAccountButton()}\n                    onCancel={() => toggleDeleteAccountAlert()}\n                >\n                    {accountDetailsSidebarText[appContext.locale][\"Are you sure you want to delete this account?\"]}\n                </SweetAlert> \n            : null}\n            {cannotDeleteAccountAlert ? \n                <SweetAlert danger showConfirm={false} showCancel={true}\n                    cancelBtnBsStyle=\"default\"\n                    cancelBtnText={accountDetailsSidebarText[appContext.locale][\"Cancel\"]}\n                    title={accountDetailsSidebarText[appContext.locale][\"Cannot delete this account.\"]}\n                    onConfirm={() => toggleCannotDeleteAccountAlert()}\n                    onCancel={() => toggleCannotDeleteAccountAlert()}\n                >\n                    {accountDetailsSidebarText[appContext.locale][\"Please remove all line items from this account and try again.\"]}\n                </SweetAlert> \n            : null}\n\n        </div>\n    )\n}\n\nexport default AccountDetailsSidebar","/Users/kyle/Easy_Ledger/front_end/src/pages/user/login-v3-render.js",["560","561"],"/Users/kyle/Easy_Ledger/front_end/src/pages/user/register-v3-render.js",["562","563","564"],"/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/components/income-and-expense-summary.js",["565","566","567","568","569","570","571","572","573","574","575"],"/Users/kyle/Easy_Ledger/front_end/src/pages/dashboard/components/balance-summary.js",["576","577","578","579"],"/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/general-journal.jsx",["580","581"],"import React from 'react';\nimport { API_BASE_URL } from '../../../utils/constants.js';\nimport axios from 'axios';\nimport { PageSettings } from '../../../config/page-settings';\nimport TableOfJournalEntries from './table-of-journal-entries';\nimport {generalJournalText} from './general-journal-text.js';\n\n\nfunction GeneralJournal() {\n\n  const appContext = React.useContext(PageSettings);\n  \n  const columns = React.useMemo(\n    () => [ // accessor is the \"key\" in the data},\n      { Header: generalJournalText[appContext.locale][\"Date\"], accessor: 'journalEntryDate', width:\"20%\"},\n      { Header: generalJournalText[appContext.locale][\"Description\"], accessor: 'description', width:\"50%\"},\n      { Header: generalJournalText[appContext.locale][\"Debit\"], accessor: 'debitAmount', width:\"15%\"},\n      { Header: generalJournalText[appContext.locale][\"Credit\"], accessor: 'creditAmount', width: \"15%\"},\n    ],\n    []\n  )\n\n  // We'll start our table without any data\n  const [data, setData] = React.useState([])\n  const [pageCount, setPageCount] = React.useState(0)\n  const [elementCount, setElementCount] = React.useState(0)\n\n  const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\n    // This will get called when the table needs new data\n        \n    //fetch data from Easy Ledger API\n    const url = `${API_BASE_URL}/organization/${appContext.currentOrganization}/journalEntryViewModel/?page=${pageIndex}&size=${pageSize}`;\n    axios.get(url).then(response => {\n        var dataContent = response.data.content;\n        setData(dataContent);\n        setPageCount(response.data.totalPages);\n        setElementCount(response.data.totalElements);\n      })\n      .catch(console.log);\n  }, [API_BASE_URL, appContext.currentOrganization])\n  \n  return (\n    <div >\n      <TableOfJournalEntries\n        columns={columns}\n        data={data}\n        fetchData={fetchData}\n        pageCount={pageCount}\n        elementCount={elementCount}\n        tableTitle={generalJournalText[appContext.locale][\"Accounting Entries\"]}\n        hasAddEntryButton={true}\n      />\n    </div>\n  )\n}\n\n\n\n\nexport default GeneralJournal","/Users/kyle/Easy_Ledger/front_end/src/pages/reports/components/income-statement-render.js",["582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"import React from 'react';\nimport { PageSettings } from '../../../config/page-settings';\nimport { API_BASE_URL} from '../../../utils/constants';\nimport axios from 'axios';\nimport {incomeStatementRenderText} from './income-statement-render-text';\n\n/**\n * INCOME STATEMENT FORMAT\n * \n * 21 Revenue\n *      Revenue account groups\n *          Total Revenue\n * empty\n * 23 Cost of sales\n *      COS account groups\n *          total COS\n *          Gross Margin \n * empty\n * Operating Expenses\n *      24 R&D\n *      25 SG&A\n *      26 Depreciation\n *      27 Amortization\n *          Total operating expenses\n * empty\n * Operating income\n * 22 - 28 Other income/expense, net\n * Income before provision for income taxes\n * 29 Income taxes\n * empty\n * Net income\n */\nfunction IncomeStatementRender() {\n    const appContext = React.useContext(PageSettings);\n\n    const today = new Date();\n    const [startDate, setStartDate] = React.useState(today.getFullYear() + \"-01-01\");\n    const [endDate, setEndDate] = React.useState(today.toISOString().split('T')[0]);\n    const [loading, setLoading] = React.useState(true);\n\n    const [totalRevenue, setTotalRevenue] = React.useState(null);\n    const [totalCostOfSales, setTotalCostOfSales] = React.useState(null);\n    const [grossProfit, setGrossProfit] = React.useState(null);\n    const [rd, setRd] = React.useState(null);\n    const [sga, setSga] = React.useState(null);\n    const [depreciation, setDepreciation] = React.useState(null);\n    const [amortization, setAmortization] = React.useState(null);\n    const [totalOperatingExpenses, setTotalOperatingExpenses] = React.useState(null);\n    const [operatingIncome, setOperatingIncome] = React.useState(null);\n    const [netOtherIncomeExpense, setNetOtherIncomeExpense] = React.useState(null);\n    const [incomeBeforeTax, setIncomeBeforeTax] = React.useState(null);\n    const [incomeTax, setIncomeTax] = React.useState(null);\n    const [netIncome, setNetIncome] = React.useState(null);\n\n    const [revenueSubtypeId, setRevenueSubtypeId] = React.useState(null);\n    const [otherIncomeSubtypeId, setOtherIncomeSubtypeId] = React.useState(null);\n    const [costOfSalesSubtypeId, setCostOfSalesSubtypeId] = React.useState(null);\n    const [researchAndDevelopmentSubtypeId, setResearchAndDevelopmentSubtypeId] = React.useState(null);\n    const [sgaSubtypeId, setSgaSubtypeId] = React.useState(null);\n    const [depreciationSubtypeId, setDepreciationSubtypeId] = React.useState(null);\n    const [amortizationSubtypeId, setAmortizationSubtypeId] = React.useState(null);\n    const [otherExpensesSubtypeId, setOtherExpensesSubtypeId] = React.useState(null);\n    const [incomeTaxSubtypeId, setIncomeTaxSubtypeId] = React.useState(null);\n\n    const [accountGroupBalances, setAccountGroupBalances] = React.useState(null);\n    const [accountBalances, setAccountBalances] = React.useState(null);\n\n\n    React.useEffect(() => {\n        async function fetchData() {\n            setLoading(true);\n            await axios.get(`${API_BASE_URL}/organization/${appContext.currentOrganization}/reports/incomeStatement/${startDate}/${endDate}`).then(response => {\n                if (response.data) {\n                    setTotalRevenue(response.data.totalRevenue);\n                    setTotalCostOfSales(response.data.totalCostOfSales);\n                    setGrossProfit(response.data.grossProfit);\n                    setRd(response.data.totalResearchAndDevelopment);\n                    setSga(response.data.totalSalesGeneralAndAdministration);\n                    setDepreciation(response.data.totalDepreciation);\n                    setAmortization(response.data.totalAmortization);\n                    setTotalOperatingExpenses(response.data.totalOperatingExpenses);\n                    setOperatingIncome(response.data.operatingIncome);\n                    setNetOtherIncomeExpense(response.data.otherIncomeExpense);\n                    setIncomeBeforeTax(response.data.incomeBeforeTax);\n                    setIncomeTax(response.data.incomeTax);\n                    setNetIncome(response.data.netIncome);\n                    setAccountGroupBalances(response.data.accountGroupBalances);\n                    setAccountBalances(response.data.accountBalances);\n                    setRevenueSubtypeId(response.data.revenueSubtypeId);\n                    setOtherIncomeSubtypeId(response.data.otherIncomeSubtypeId);\n                    setCostOfSalesSubtypeId(response.data.costOfSalesSubtypeId);\n                    setResearchAndDevelopmentSubtypeId(response.data.researchAndDevelopmentSubtypeId);\n                    setSgaSubtypeId(response.data.sgaSubtypeId);\n                    setDepreciationSubtypeId(response.data.depreciationSubtypeId);\n                    setAmortizationSubtypeId(response.data.amortizationSubtypeId);\n                    setOtherExpensesSubtypeId(response.data.otherExpensesSubtypeId);\n                    setIncomeTaxSubtypeId(response.data.incomeTaxSubtypeId);\n                }\n            }).catch(error => {\n                console.log(error);\n            });\n            setLoading(false);\n        }\n        fetchData();\n    }, [startDate, endDate]);\n\n    const handleChangeStartDate = date => {\n        setStartDate(date);\n    }\n    const handleChangeEndDate = date => {\n        setEndDate(date);\n    }\n\n    const numberAsCurrency = (number) => {\n        if (number == 0) {\n            return new Intl.NumberFormat(appContext.locale, { style: 'currency', currency: appContext.currency }).format(0);\n        }\n        return new Intl.NumberFormat(appContext.locale, { style: 'currency', currency: appContext.currency }).format(number)\n    }\n\n\n    return (\n        <div className=\"widget widget-rounded m-b-30\">\n            <div className=\"widget-header bg-light border-bottom\">\n                <div className=\"widget-header-title\">\n                    <div className=\"form-inline justify-content-between\">\n                        <div className=\"font-weight-600\">{incomeStatementRenderText[appContext.locale][\"Income Statement\"]}</div>    \n                        <div className=\"form-group\">\n                            <label className=\"ml-sm-5 px-1\">{incomeStatementRenderText[appContext.locale][\"From:\"]} </label>\n                            <input type=\"date\" className=\"form-control form-control-sm width-125\" value={startDate} onChange={event => handleChangeStartDate(event.target.value)} />\n                            <label className=\"ml-sm-5 px-1\">{incomeStatementRenderText[appContext.locale][\"to:\"]} </label>\n                            <input type=\"date\" className=\"form-control form-control-sm width-125\" value={endDate} onChange={event => handleChangeEndDate(event.target.value)} />\n                        </div> \n                    </div>\n                </div>\n            </div>\n            <div>\n                {loading? <div className=\"d-flex justify-content-center fa-3x py-3\"><i className=\"fas fa-circle-notch fa-spin\"></i></div> : \n                <div>\n                    <table className=\"table table-striped m-b-0\">\n                        <tbody>\n                            {!accountGroupBalances.filter(accountGroup => accountGroup.accountSubtypeId == revenueSubtypeId).length? null : \n                                <>\n                                <tr><td className=\"font-weight-600\">{incomeStatementRenderText[appContext.locale][\"Revenue\"]}</td></tr>\n                                    {accountGroupBalances.filter(accountGroup => accountGroup.accountSubtypeId == revenueSubtypeId).map(accountGroup => {\n                                        return(\n                                            <tr key={accountGroup.accountGroupId}><td className=\"d-flex justify-content-between p-l-30\"><div>{accountGroup.accountGroupName}</div><div>{numberAsCurrency(accountGroup.debitsMinusCredits * -1)}</div></td></tr>\n                                        )\n                                    })}\n                                    <tr><td className=\"d-flex justify-content-between p-l-30 font-weight-600\"><div className=\"p-l-30\">{incomeStatementRenderText[appContext.locale][\"Total revenue\"]}</div><div>{numberAsCurrency(totalRevenue)}</div></td></tr>\n                                    <tr><td>{/* empty row */}<div className=\"visibility-hidden\">spacer row</div></td></tr>\n                                </>\n                            }\n                            {!accountGroupBalances.filter(accountGroup => accountGroup.accountSubtypeId == costOfSalesSubtypeId).length? null : \n                                <>\n                                    <tr><td className=\"font-weight-600\">{incomeStatementRenderText[appContext.locale][\"Cost of sales\"]}</td></tr>\n                                    {accountGroupBalances.filter(accountGroup => accountGroup.accountSubtypeId == costOfSalesSubtypeId).map(accountGroup => {\n                                        return(\n                                            <tr key={accountGroup.accountGroupId}><td className=\"d-flex justify-content-between p-l-30\"><div>{accountGroup.accountGroupName}</div><div>{numberAsCurrency(accountGroup.debitsMinusCredits)}</div></td></tr>\n                                        )\n                                    })}\n                                    <tr><td className=\"d-flex justify-content-between p-l-30 font-weight-600\"><div className=\"p-l-30\">{incomeStatementRenderText[appContext.locale][\"Total cost of sales\"]}</div><div>{numberAsCurrency(totalCostOfSales)}</div></td></tr>\n                                    <tr><td>{/* empty row */}<div className=\"visibility-hidden\">spacer row</div></td></tr>\n                                </>\n                            }\n                            <tr><td className=\"d-flex justify-content-between font-weight-600\"><div>{incomeStatementRenderText[appContext.locale][\"Gross profit\"]}</div><div>{numberAsCurrency(grossProfit)}</div></td></tr>\n                            <tr><td>{/* empty row */}<div className=\"visibility-hidden\">spacer row</div></td></tr>\n                            <tr><td className=\"font-weight-600\">{incomeStatementRenderText[appContext.locale][\"Operating expenses\"]}</td></tr>\n                            {!rd? null : <tr><td className=\"d-flex justify-content-between p-l-30\"><div>{incomeStatementRenderText[appContext.locale][\"Research and development\"]}</div><div>{numberAsCurrency(rd)}</div></td></tr>}\n                            {!sga? null : <tr><td className=\"d-flex justify-content-between p-l-30\"><div>{incomeStatementRenderText[appContext.locale][\"Sales, general, and administration\"]}</div><div>{numberAsCurrency(sga)}</div></td></tr>}\n                            {!depreciation? null : <tr><td className=\"d-flex justify-content-between p-l-30\"><div>{incomeStatementRenderText[appContext.locale][\"Depreciation\"]}</div><div>{numberAsCurrency(depreciation)}</div></td></tr>}\n                            {!amortization? null : <tr><td className=\"d-flex justify-content-between p-l-30\"><div>{incomeStatementRenderText[appContext.locale][\"Amortization\"]}</div><div>{numberAsCurrency(amortization)}</div></td></tr>}\n                            <tr><td className=\"d-flex justify-content-between p-l-30 font-weight-600\"><div className=\"p-l-30\">{incomeStatementRenderText[appContext.locale][\"Total operating expenses\"]}</div><div>{numberAsCurrency(totalOperatingExpenses)}</div></td></tr>\n                            <tr><td>{/* empty row */}<div className=\"visibility-hidden\">spacer row</div></td></tr>\n                            <tr><td className=\"d-flex justify-content-between font-weight-600\"><div>{incomeStatementRenderText[appContext.locale][\"Operating income\"]}</div><div>{numberAsCurrency(operatingIncome)}</div></td></tr>\n                            <tr><td className=\"d-flex justify-content-between\"><div>{incomeStatementRenderText[appContext.locale][\"Other income/expense, net\"]}</div><div>{numberAsCurrency(netOtherIncomeExpense)}</div></td></tr>\n                            <tr><td className=\"d-flex justify-content-between font-weight-600\"><div>{incomeStatementRenderText[appContext.locale][\"Income before tax\"]}</div><div>{numberAsCurrency(incomeBeforeTax)}</div></td></tr>\n                            <tr><td className=\"d-flex justify-content-between\"><div>{incomeStatementRenderText[appContext.locale][\"Income tax\"]}</div><div>{numberAsCurrency(incomeTax)}</div></td></tr>\n                            <tr><td>{/* empty row */}<div className=\"visibility-hidden\">spacer row</div></td></tr>\n                            <tr><td className=\"d-flex justify-content-between font-weight-600\"><div>{incomeStatementRenderText[appContext.locale][\"Net income\"]}</div><div>{numberAsCurrency(netIncome)}</div></td></tr>\n                        </tbody>\n                    </table>\n                </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default IncomeStatementRender;","/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-entry-view-mode.jsx",["596","597","598","599","600"],"import React from 'react';\nimport { useTable } from 'react-table';\nimport { PageSettings } from '../../../config/page-settings';\nimport {journalEntryViewModeText} from '../../../utils/i18n/journal-entry-view-mode-text.js'\n\nfunction JournalEntryViewMode({ data, journalEntryDescription, journalEntryDate}) {\n  const appContext = React.useContext(PageSettings);\n  const columns = React.useMemo(\n    () => [ // accessor is the \"key\" in the data},\n      { Header: journalEntryViewModeText[appContext.locale]['Description'], accessor: 'description', width:'50%'},\n      { Header: journalEntryViewModeText[appContext.locale]['Account'], accessor: 'accountName', width:'24%'},\n      { Header: journalEntryViewModeText[appContext.locale]['Debit'], accessor: 'debitAmount', width:'13%'},\n      { Header: journalEntryViewModeText[appContext.locale]['Credit'], accessor: 'creditAmount', width:'13%'},\n    ],\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data\n    }\n  )\n\n  const sumAmountsInColumn = columnName => {\n    let sum = 0;\n    data.forEach(row => {\n        sum += row[columnName];\n    });\n    if (isNaN(sum)) {\n        return 0\n    } else {\n        return sum;\n    }\n  }\n\n  const formatCell = cell => {\n    let columnId = cell.column.id;\n    switch (columnId) {\n      case \"debitAmount\":\n      case \"creditAmount\":\n        if (cell.value) {\n          return (new Intl.NumberFormat(appContext.locale, { style: 'currency', currency: appContext.currency }).format(cell.value));\n        } else {\n          return null;\n        }\n      default:\n        return cell.value;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row m-b-10\">\n        <div className=\"col-md-1\"><strong>{journalEntryViewModeText[appContext.locale][\"Date\"]}</strong></div> <div className=\"col-md-11\">{journalEntryDate}</div>\n      </div>\n      <div className=\"row m-b-10\">\n        <div className=\"col-md-1\"><strong>{journalEntryViewModeText[appContext.locale][\"Description\"]}</strong></div> <div className=\"col-md-11\">{journalEntryDescription}</div>\n      </div>\n      <br></br>\n      \n      <div className=\"table-responsive\">\n      <table className=\"table\"{...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps()} style={{width: column.width}} className={column.id == \"debitAmount\" || column.id == \"creditAmount\" ? \"text-right\" : \"\"}>\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td className={cell.column.id == \"debitAmount\" || cell.column.id == \"creditAmount\" ? \"text-right\" : \"\"} {...cell.getCellProps()}>{formatCell(cell)}</td>\n                    )\n                  })}\n                </tr>\n              )}\n          )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>{journalEntryViewModeText[appContext.locale][\"Total\"]}</td>\n            <td></td>\n            <td className=\"text-right\">\n              {new Intl.NumberFormat(appContext.locale, { style: 'currency', currency: appContext.currency }).format(sumAmountsInColumn(\"debitAmount\"))}\n            </td>\n            <td className=\"text-right\">\n              {new Intl.NumberFormat(appContext.locale, { style: 'currency', currency: appContext.currency }).format(sumAmountsInColumn(\"creditAmount\"))}\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n      </div>\n    </>\n  )\n}\n\nexport default JournalEntryViewMode\n","/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/journal-entry-edit-mode.jsx",["601","602"],"/Users/kyle/Easy_Ledger/front_end/src/pages/journals/components/table-of-journal-entries.jsx",["603","604","605","606","607","608","609","610","611","612"],"import React from 'react'\nimport { useTable, usePagination } from 'react-table'\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {API_BASE_URL} from '../../../utils/constants.js';\nimport JournalEntryViewMode from './journal-entry-view-mode';\nimport JournalEntryEditMode from './journal-entry-edit-mode';\nimport { PageSettings } from '../../../config/page-settings.js';\nimport {tableOfJournalEntriesText} from './table-of-journal-entries-text.js';\n\n//Generates a table with react-table 7 using pagination\n\n// Let's add a fetchData method to our Table component that will be used to fetch\n// new data when pagination state changes\n// We can also add a loading state to let our table know it's loading new data\nfunction TableOfJournalEntries({\n  columns,\n  data,\n  fetchData,\n  pageCount: controlledPageCount,\n  elementCount,\n  tableTitle,\n  hasAddEntryButton\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Get the state from the instance\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 }, // Pass our hoisted table state\n      manualPagination: true, // Tell the usePagination\n      // hook that we'll handle our own data fetching\n      // This means we'll also have to provide our own\n      // pageCount.\n      pageCount: controlledPageCount,\n    },\n    usePagination\n  )\n  \n  const appContext = React.useContext(PageSettings);\n\n  const [journalEntryExpanded, setJournalEntryExpanded] = React.useState(false); //Whether or not the modal  is shown\n  const toggleJournalEntryExpanded = () => setJournalEntryExpanded(!journalEntryExpanded); //Toggles modal on or off\n  const expandJournalEntry = i => { //fetches a journalEntry from the API and toggles the modal on\n    fetchJournalEntry(i);\n    toggleJournalEntryExpanded();\n  }\n  const [editMode, setEditMode] = React.useState(false); //Toggle editmode for an expanded entry\n  const [createMode, setCreateMode] = React.useState(false);\n  const toggleEditMode = () => setEditMode(!editMode);\n\n\n  const [journalEntryId, setJournalEntryId] = React.useState(null);\n  const [journalEntryDescription, setJournalEntryDescription] = React.useState('');\n  const [journalEntryDate, setJournalEntryDate] = React.useState('');\n  const [lineItemData, setLineItemData] = React.useState([]); //Data to be passed in to lineItemTable\n  const [accountOptions, setAccountOptions] = React.useState([]);\n\n  const [alertMessages, setAlertMessages] = React.useState([]);\n\n  const fetchJournalEntry = i => {\n    const url = `${API_BASE_URL}/journalEntry/${i}`;\n    axios.get(url).then(response => {\n      var journalEntry = response.data;\n      var formattedLineItems = [];\n      journalEntry.lineItems.forEach(lineItem => {\n        var formattedLineItem = {\n          lineItemId: lineItem.lineItemId,\n          accountName: lineItem.accountName,\n          accountId: lineItem.accountId,\n          description: lineItem.description,\n          debitAmount: (lineItem.isCredit ? null : lineItem.amount),\n          creditAmount: (lineItem.isCredit ? lineItem.amount : null)\n        };\n        formattedLineItems.push(formattedLineItem);\n      })\n      formattedLineItems.sort((a, b) => (a.lineItemId > b.lineItemId) ? 1 : -1) //sort by LineItemId to preserve insertion order\n      setLineItemData(formattedLineItems);\n      setJournalEntryId(journalEntry.journalEntryId);\n      setJournalEntryDescription(journalEntry.description);\n      setJournalEntryDate(journalEntry.journalEntryDate);\n      setAlertMessages([]); //reset alert messages every time an entry is fetched to refresh the page\n    })\n      .catch(console.log);\n  }\n  const openEditorForNewEntry = () => {\n    setJournalEntryId(null);\n    let today = new Date();\n    setJournalEntryDate(today.toISOString().split('T')[0]);\n    setJournalEntryDescription('');\n    setLineItemData([{\n      lineItemId: \"\",\n      accountName: \"\",\n      accountId: \"\",\n      description: \"\",\n      debitAmount: 0,\n      creditAmount: 0\n    }, \n    {\n      lineItemId: \"\",\n      accountName: \"\",\n      accountId: \"\",\n      description: \"\",\n      debitAmount: 0,\n      creditAmount: 0\n    }])\n    toggleEditMode();\n    setCreateMode(true);\n    toggleJournalEntryExpanded();\n  }\n\n  const cancelCreateMode = () => {\n    setCreateMode(false);\n    setAlertMessages([]);\n    toggleJournalEntryExpanded();\n  }\n\n  // Listen for changes in pagination and use the state to fetch our new data\n  React.useEffect(() => {\n    fetchData({ pageIndex, pageSize })\n  }, [fetchData, pageIndex, pageSize])\n  \n  //initially retrieve categories and accounts from API\n  React.useEffect(() => {\n    axios.get(`${API_BASE_URL}/organization/${appContext.currentOrganization}/account`).then(response => {\n      const formattedAccounts = response.data.map(account => {\n        return({\n          value: account.accountId,\n          label: account.accountName,\n          object: account\n        })\n      });\n      setAccountOptions(formattedAccounts);\n    })\n      .catch(console.log);\n  }, [API_BASE_URL, appContext.currentOrganization])\n\n  //refresh lists of accounts and categories, should be called every time the 'edit' button for an entry is clicked\n  const refreshAccounts = () => {\n    axios.get(`${API_BASE_URL}/organization/${appContext.currentOrganization}/account`).then(response => {\n      const formattedAccounts = response.data.map(account => {\n        return({\n          value: account.accountId,\n          label: account.accountName,\n          object: account\n        })\n      });\n      setAccountOptions(formattedAccounts);\n    })\n      .catch(console.log);\n  }\n\n  //format table cell value based on column name and locale\n  const formatCellValue = cell => {\n    let columnId = cell.column.id;\n    switch (columnId) {\n      case \"creditAmount\":\n      case \"debitAmount\":\n        if (cell.value == 0) {\n          return '';\n        }\n        return (new Intl.NumberFormat(appContext.locale, { style: 'currency', currency: appContext.currency }).format(cell.value));\n      default:\n        return (cell.value);\n    }\n  }\n\n  const checkEntryForValidationErrors = () => {\n    let errorMessages = [];\n    if (!journalEntryDate) {\n      errorMessages.push(tableOfJournalEntriesText[appContext.locale][\"Please choose a date for this entry.\"]);\n    }\n    if (!journalEntryDescription) {\n      errorMessages.push(tableOfJournalEntriesText[appContext.locale][\"Please provide a description for this entry.\"]);\n    }\n\n    let debitSum = 0;\n    let creditSum = 0;\n    let missingDescription = false;\n    let missingAmount = false;\n    let missingAccount = false;\n    lineItemData.forEach(lineItem => { // check for missing fields within lineItems, and sum debits and credits.\n      if (!lineItem.description) {\n        missingDescription = true;\n      }\n      if (!lineItem.creditAmount && !lineItem.debitAmount) { \n        missingAmount = true;\n      }\n      if (!lineItem.accountId) {\n        missingAccount = true;\n      }\n      \n      // sum debits and credits\n      if (lineItem.debitAmount) {\n        debitSum += lineItem.debitAmount;\n      }\n      if (lineItem.creditAmount) {\n        creditSum += lineItem.creditAmount;\n      }\n    })\n    //move missing description and missing amount error messages out of the loop to avoid duplicate messages\n    if (missingDescription) {\n      errorMessages.push(tableOfJournalEntriesText[appContext.locale][\"Line-items must have a description.\"]);\n    }\n    if (missingAmount) {\n      errorMessages.push(tableOfJournalEntriesText[appContext.locale][\"Line-items must have either a debit or credit.\"]);\n    }\n    if (missingAccount) {\n      errorMessages.push(tableOfJournalEntriesText[appContext.locale][\"Line-items must be assigned to an account.\"]);\n    }\n    if (debitSum.toFixed(2) !== creditSum.toFixed(2)) {\n      errorMessages.push(tableOfJournalEntriesText[appContext.locale][\"Debits and Credits must balance.\"])\n    }\n    setAlertMessages(errorMessages);\n    return errorMessages;\n  }\n\n  //Returns a POSTable/PUTable journalEntry created from this function's state POSTable entries have null journalEntryId, otherwise they should be PUT instead. \n  //Before calling this function please check for validity of the entry by making sure checkEntryForValidationErrors().length == 0\n  const formatJournalEntryToSendToServer = () => {\n    let lineItems = lineItemData.map(lineItem => {\n      return {\n        accountId: lineItem.accountId,\n        amount: (lineItem.debitAmount ? lineItem.debitAmount : lineItem.creditAmount),\n        description: lineItem.description,\n        isCredit: (lineItem.creditAmount ? true : false)\n      }\n    });\n    return {\n      journalEntryId : journalEntryId,\n      journalEntryDate: journalEntryDate,\n      description: journalEntryDescription,\n      personId: appContext.currentUser,\n      organizationId: appContext.currentOrganization,\n      lineItems: lineItems\n    }\n  }\n\n  const postJournalEntry = (data) => {\n    console.log(data);\n    axios.post(`${API_BASE_URL}/journalEntry`, data)\n      .then(response => {\n        fetchData({pageIndex, pageSize});\n        fetchJournalEntry(response.data.journalEntryId);\n        setCreateMode(false);\n        toggleEditMode();\n      }).catch(console.log);\n  }\n\n  const putJournalEntry = (id, data) => {\n    axios.put(`${API_BASE_URL}/journalEntry/${id}`, data)\n      .then(response => {\n        console.log(response);\n        fetchData({pageIndex, pageSize});\n        fetchJournalEntry(id);\n        toggleEditMode();\n      }).catch(console.log);\n  }\n\n  const handleCopyJournalEntryButton = () => {\n      let today = new Date();\n      setJournalEntryDate(today.toISOString().split('T')[0]);\n      toggleEditMode();\n      setCreateMode(true);\n      setJournalEntryId(null); //must set journalEntryId to null, otherwise program will edit the original journal entry instead of posting a copy to the server. Server requires journalEntryId to be null for POST requests, so we cannot check for createMode=true to determine PUT/POST instead.\n    }\n\n  const handleSaveJournalEntryButton = () => {\n    if (checkEntryForValidationErrors().length === 0) {\n      let formattedEntry = formatJournalEntryToSendToServer();\n      if (journalEntryId) {\n        putJournalEntry(journalEntryId, formattedEntry);\n      } else {\n        postJournalEntry(formattedEntry);\n      }\n    }\n  }\n  const handleDeleteJournalEntryButton = (id) => {\n    axios.delete(`${API_BASE_URL}/journalEntry/${id}`)\n      .then(response => {\n        console.log(response)\n        fetchData({pageIndex, pageSize});\n        toggleEditMode();\n        toggleJournalEntryExpanded();\n    });\n  }\n\n  // Render the UI for your table\n  return (\n    <>\n      <div className=\"widget widget-rounded m-b-30\">\n        <div className=\"widget-header bg-light\">\n          <h4 className=\"widget-header-title d-flex justify-content-between \">\n            <div className=\"align-self-center\">{tableTitle}</div>\n            <div>\n              {hasAddEntryButton ? \n                <button className=\"btn btn-sm btn-primary align-self-center\" onClick={() => openEditorForNewEntry()}>\n                  <i className=\"ion ion-md-add fa-fw fa-lg\"></i>{tableOfJournalEntriesText[appContext.locale][\"Add an entry\"]}\n                </button> : null}\n            </div>\n\n          </h4>\n     \n        </div>\n        <div className=\"table-responsive bg-white border-top\">\n          <table className=\"table table-hover m-b-0 text-inverse\" {...getTableProps()}>\n            <thead>\n              {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map(column => (\n                    <th style={{width: column.width}} className={column.id == \"debitAmount\" || column.id == \"creditAmount\" ? \"text-right\" : \"\"} {...column.getHeaderProps()}>\n                      {column.render('Header')}\n                      <span>\n                        {column.isSorted\n                          ? column.isSortedDesc\n                            ? ' 🔽'\n                            : ' 🔼'\n                          : ''}\n                      </span>\n                    </th>\n\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.map((row, i) => {\n                prepareRow(row)\n                return (\n                  <tr className=\"cursor-pointer\" onClick={() => expandJournalEntry(data[i].journalEntryId)} {...row.getRowProps()}>{/* entry is represented as a clickable row that opens a modal when clicked*/}\n                    {row.cells.map(cell => {\n                      return <td className={cell.column.id == \"debitAmount\" || cell.column.id == \"creditAmount\" ? \"text-right\" : \"\"} {...cell.getCellProps()}> {formatCellValue(cell)} </td>\n                    })}\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"d-flex justify-content-between px-1 py-2 border-top bg-light\" >\n          <span style={{ width: \"25ch\" }}>\n            <ul className=\"pager align-self-center m-t-0 m-b-0\">\n              <li className={canPreviousPage ? \"previous\" : \"previous disabled\"}>\n                {canPreviousPage ? <Link onClick={() => previousPage()} to=\"/journals\">&larr; {tableOfJournalEntriesText[appContext.locale][\"Newer\"]}</Link> : null}\n              </li>\n            </ul>\n          </span>\n          <span className=\"align-self-center\">\n            Showing {((pageIndex * page.length) + 1) + \"-\" + ((pageIndex + 1) * page.length)} of {elementCount}{' '}\n                      results\n          </span>{/**TODO replace with page selector */}\n          <span>\n            <ul className=\"pager align-self-center m-t-0 m-b-0\" style={{ width: \"25ch\" }}>\n              <li className={canNextPage ? \"next\" : \"next disabled\"}>\n                {canNextPage ? <Link onClick={() => nextPage()} to=\"/journals\">{tableOfJournalEntriesText[appContext.locale][\"Older\"]} &rarr;</Link> : null}\n              </li> \n            </ul>\n          </span>\n        </div>\n      </div>\n      {/* Modal that opens when a row in the table is clicked */}\n      <Modal\n        isOpen={journalEntryExpanded}\n        toggle={() => toggleJournalEntryExpanded()}\n        size=\"lg\" style={{ maxWidth: '1600px', width: '80%', margin: 'auto' }}\n        backdrop={editMode ? \"static\" : true}\n        centered={true}\n      >\n        <ModalHeader style={{backgroundColor: \"#e4e4e4\"}}>{tableOfJournalEntriesText[appContext.locale][\"Journal Entry\"]}</ModalHeader>\n        <ModalBody className=\"bg-light\">\n          {editMode ?\n            <JournalEntryEditMode\n              data={lineItemData} setLineItemData={setLineItemData}\n              journalEntryDate={journalEntryDate} setJournalEntryDate={setJournalEntryDate}\n              journalEntryDescription={journalEntryDescription} setJournalEntryDescription={setJournalEntryDescription}\n              accountOptions={accountOptions}\n              alertMessages={alertMessages}>\n            </JournalEntryEditMode> :\n            <JournalEntryViewMode\n              data={lineItemData}\n              journalEntryDate={journalEntryDate}\n              journalEntryDescription={journalEntryDescription}\n            >\n            </JournalEntryViewMode>\n          }\n        </ModalBody>\n        <ModalFooter className=\"justify-content-between\" style={{ backgroundColor: \"#e4e4e4\" }}>\n          {editMode ?\n            <>\n              <div>\n                {createMode ? null : \n                <button \n                  className=\"btn btn-red\" \n                  style={{ width: \"10ch\" }}\n                  onClick={() => handleDeleteJournalEntryButton(journalEntryId)}>{tableOfJournalEntriesText[appContext.locale][\"Delete\"]}</button>}\n              </div>\n              <div>\n                <button className=\"btn btn-primary\"\n                  style={{ width: \"10ch\" }}\n                  onClick={() => handleSaveJournalEntryButton()}>\n                  {tableOfJournalEntriesText[appContext.locale][\"Save\"]}</button>\n                <button\n                  className=\"btn btn-white m-l-10\"\n                  style={{ width: \"10ch\" }}\n                  onClick={() => {\n                    createMode ? cancelCreateMode() : fetchJournalEntry(journalEntryId);\n                    toggleEditMode();\n                  }}>\n                  {tableOfJournalEntriesText[appContext.locale][\"Cancel\"]}</button>\n              </div>\n            </> :\n            <>\n              <div>{/*empty div to push the other two buttons to the right*/}</div>\n              <div>\n                <button className=\"btn btn-info width-10ch\" onClick={() => {handleCopyJournalEntryButton()}}>{tableOfJournalEntriesText[appContext.locale][\"Copy\"]}</button>\n                <button className=\"btn btn-primary m-l-10 width-10ch\" onClick={() => {toggleEditMode(); refreshAccounts()}}>{tableOfJournalEntriesText[appContext.locale][\"Edit\"]}</button>\n                <button className=\"btn btn-white m-l-10 width-10ch\" onClick={() => toggleJournalEntryExpanded()}>{tableOfJournalEntriesText[appContext.locale][\"Close\"]}</button>\n              </div>\n            </>\n          }\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nexport default TableOfJournalEntries\n\n","/Users/kyle/Easy_Ledger/front_end/src/components/sidebar/toggle-mobile-sidebar-button.jsx",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/login-v3-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/balance-sheet-render-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/report-type-list-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/income-statement-render-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/balance-sheet-report-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/income-statement-report-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/reports-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/journal-entry-view-mode-text.js",["613","614"],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/general-journal-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/journal-entry-edit-mode-text.js",["615","616"],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/table-of-journal-entries-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/journals-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/balance-summary-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/income-and-expense-summary-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/dashboard-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/chart-of-accounts-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/account-details-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/account-details-sidebar-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/sidebar-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/register-v3-text.js",[],"/Users/kyle/Easy_Ledger/front_end/src/pages/settings/settings.js",["617"],"/Users/kyle/Easy_Ledger/front_end/src/utils/i18n/settings-text.js",[],{"ruleId":"618","replacedBy":"619"},{"ruleId":"620","replacedBy":"621"},{"ruleId":"622","severity":1,"message":"623","line":13,"column":8,"nodeType":"624","messageId":"625","endLine":13,"endColumn":20},{"ruleId":"622","severity":1,"message":"626","line":14,"column":8,"nodeType":"624","messageId":"625","endLine":14,"endColumn":13},{"ruleId":"622","severity":1,"message":"627","line":1,"column":10,"nodeType":"624","messageId":"625","endLine":1,"endColumn":25},{"ruleId":"628","severity":1,"message":"629","line":22,"column":9,"nodeType":"630","endLine":22,"endColumn":11,"suggestions":"631"},{"ruleId":"628","severity":1,"message":"632","line":52,"column":8,"nodeType":"630","endLine":52,"endColumn":10,"suggestions":"633"},{"ruleId":"628","severity":1,"message":"634","line":69,"column":8,"nodeType":"630","endLine":69,"endColumn":10,"suggestions":"635"},{"ruleId":"628","severity":1,"message":"634","line":106,"column":8,"nodeType":"630","endLine":106,"endColumn":10,"suggestions":"636"},{"ruleId":"622","severity":1,"message":"637","line":2,"column":16,"nodeType":"624","messageId":"625","endLine":2,"endColumn":26},{"ruleId":"638","severity":1,"message":"639","line":63,"column":135,"nodeType":"640","messageId":"641","endLine":63,"endColumn":137},{"ruleId":"638","severity":1,"message":"639","line":72,"column":184,"nodeType":"640","messageId":"641","endLine":72,"endColumn":186},{"ruleId":"638","severity":1,"message":"639","line":102,"column":123,"nodeType":"640","messageId":"641","endLine":102,"endColumn":125},{"ruleId":"638","severity":1,"message":"639","line":103,"column":135,"nodeType":"640","messageId":"641","endLine":103,"endColumn":137},{"ruleId":"638","severity":1,"message":"639","line":117,"column":123,"nodeType":"640","messageId":"641","endLine":117,"endColumn":125},{"ruleId":"638","severity":1,"message":"639","line":180,"column":74,"nodeType":"640","messageId":"641","endLine":180,"endColumn":76},{"ruleId":"638","severity":1,"message":"639","line":269,"column":96,"nodeType":"640","messageId":"641","endLine":269,"endColumn":98},{"ruleId":"638","severity":1,"message":"639","line":293,"column":113,"nodeType":"640","messageId":"641","endLine":293,"endColumn":115},{"ruleId":"638","severity":1,"message":"639","line":314,"column":140,"nodeType":"640","messageId":"641","endLine":314,"endColumn":142},{"ruleId":"638","severity":1,"message":"639","line":376,"column":161,"nodeType":"640","messageId":"641","endLine":376,"endColumn":163},{"ruleId":"622","severity":1,"message":"637","line":2,"column":16,"nodeType":"624","messageId":"625","endLine":2,"endColumn":26},{"ruleId":"642","severity":1,"message":"643","line":8,"column":2,"nodeType":"644","messageId":"645","endLine":10,"endColumn":6},{"ruleId":"642","severity":1,"message":"643","line":8,"column":2,"nodeType":"644","messageId":"645","endLine":10,"endColumn":6},{"ruleId":"622","severity":1,"message":"637","line":2,"column":10,"nodeType":"624","messageId":"625","endLine":2,"endColumn":20},{"ruleId":"622","severity":1,"message":"646","line":4,"column":8,"nodeType":"624","messageId":"625","endLine":4,"endColumn":21},{"ruleId":"622","severity":1,"message":"647","line":56,"column":12,"nodeType":"624","messageId":"625","endLine":56,"endColumn":32},{"ruleId":"622","severity":1,"message":"648","line":57,"column":12,"nodeType":"624","messageId":"625","endLine":57,"endColumn":27},{"ruleId":"638","severity":1,"message":"639","line":64,"column":20,"nodeType":"640","messageId":"641","endLine":64,"endColumn":22},{"ruleId":"628","severity":1,"message":"649","line":91,"column":8,"nodeType":"630","endLine":91,"endColumn":17,"suggestions":"650"},{"ruleId":"638","severity":1,"message":"639","line":20,"column":182,"nodeType":"640","messageId":"641","endLine":20,"endColumn":184},{"ruleId":"638","severity":1,"message":"639","line":39,"column":133,"nodeType":"640","messageId":"641","endLine":39,"endColumn":135},{"ruleId":"638","severity":1,"message":"651","line":67,"column":32,"nodeType":"640","messageId":"641","endLine":67,"endColumn":34},{"ruleId":"622","severity":1,"message":"652","line":2,"column":15,"nodeType":"624","messageId":"625","endLine":2,"endColumn":23},{"ruleId":"638","severity":1,"message":"639","line":40,"column":45,"nodeType":"640","messageId":"641","endLine":40,"endColumn":47},{"ruleId":"638","severity":1,"message":"639","line":64,"column":60,"nodeType":"640","messageId":"641","endLine":64,"endColumn":62},{"ruleId":"638","severity":1,"message":"639","line":148,"column":48,"nodeType":"640","messageId":"641","endLine":148,"endColumn":50},{"ruleId":"638","severity":1,"message":"639","line":151,"column":48,"nodeType":"640","messageId":"641","endLine":151,"endColumn":50},{"ruleId":"622","severity":1,"message":"653","line":14,"column":28,"nodeType":"624","messageId":"625","endLine":14,"endColumn":45},{"ruleId":"638","severity":1,"message":"639","line":20,"column":120,"nodeType":"640","messageId":"641","endLine":20,"endColumn":122},{"ruleId":"638","severity":1,"message":"639","line":20,"column":161,"nodeType":"640","messageId":"641","endLine":20,"endColumn":163},{"ruleId":"638","severity":1,"message":"651","line":26,"column":49,"nodeType":"640","messageId":"641","endLine":26,"endColumn":51},{"ruleId":"638","severity":1,"message":"639","line":31,"column":39,"nodeType":"640","messageId":"641","endLine":31,"endColumn":41},{"ruleId":"638","severity":1,"message":"639","line":39,"column":43,"nodeType":"640","messageId":"641","endLine":39,"endColumn":45},{"ruleId":"638","severity":1,"message":"639","line":44,"column":116,"nodeType":"640","messageId":"641","endLine":44,"endColumn":118},{"ruleId":"638","severity":1,"message":"639","line":44,"column":148,"nodeType":"640","messageId":"641","endLine":44,"endColumn":150},{"ruleId":"638","severity":1,"message":"639","line":45,"column":117,"nodeType":"640","messageId":"641","endLine":45,"endColumn":119},{"ruleId":"638","severity":1,"message":"639","line":45,"column":149,"nodeType":"640","messageId":"641","endLine":45,"endColumn":151},{"ruleId":"628","severity":1,"message":"654","line":66,"column":8,"nodeType":"630","endLine":66,"endColumn":10,"suggestions":"655"},{"ruleId":"638","severity":1,"message":"639","line":19,"column":108,"nodeType":"640","messageId":"641","endLine":19,"endColumn":110},{"ruleId":"638","severity":1,"message":"639","line":19,"column":145,"nodeType":"640","messageId":"641","endLine":19,"endColumn":147},{"ruleId":"638","severity":1,"message":"639","line":20,"column":94,"nodeType":"640","messageId":"641","endLine":20,"endColumn":96},{"ruleId":"628","severity":1,"message":"649","line":27,"column":8,"nodeType":"630","endLine":27,"endColumn":10,"suggestions":"656"},{"ruleId":"628","severity":1,"message":"629","line":20,"column":5,"nodeType":"630","endLine":20,"endColumn":7,"suggestions":"657"},{"ruleId":"628","severity":1,"message":"658","line":40,"column":6,"nodeType":"630","endLine":40,"endColumn":52,"suggestions":"659"},{"ruleId":"622","severity":1,"message":"660","line":56,"column":12,"nodeType":"624","messageId":"625","endLine":56,"endColumn":32},{"ruleId":"622","severity":1,"message":"661","line":58,"column":12,"nodeType":"624","messageId":"625","endLine":58,"endColumn":43},{"ruleId":"622","severity":1,"message":"662","line":59,"column":12,"nodeType":"624","messageId":"625","endLine":59,"endColumn":24},{"ruleId":"622","severity":1,"message":"663","line":60,"column":12,"nodeType":"624","messageId":"625","endLine":60,"endColumn":33},{"ruleId":"622","severity":1,"message":"664","line":61,"column":12,"nodeType":"624","messageId":"625","endLine":61,"endColumn":33},{"ruleId":"622","severity":1,"message":"665","line":62,"column":12,"nodeType":"624","messageId":"625","endLine":62,"endColumn":34},{"ruleId":"622","severity":1,"message":"666","line":63,"column":12,"nodeType":"624","messageId":"625","endLine":63,"endColumn":30},{"ruleId":"622","severity":1,"message":"648","line":66,"column":12,"nodeType":"624","messageId":"625","endLine":66,"endColumn":27},{"ruleId":"628","severity":1,"message":"649","line":105,"column":8,"nodeType":"630","endLine":105,"endColumn":28,"suggestions":"667"},{"ruleId":"638","severity":1,"message":"639","line":115,"column":20,"nodeType":"640","messageId":"641","endLine":115,"endColumn":22},{"ruleId":"638","severity":1,"message":"639","line":142,"column":105,"nodeType":"640","messageId":"641","endLine":142,"endColumn":107},{"ruleId":"638","severity":1,"message":"639","line":145,"column":112,"nodeType":"640","messageId":"641","endLine":145,"endColumn":114},{"ruleId":"638","severity":1,"message":"639","line":154,"column":105,"nodeType":"640","messageId":"641","endLine":154,"endColumn":107},{"ruleId":"638","severity":1,"message":"639","line":157,"column":112,"nodeType":"640","messageId":"641","endLine":157,"endColumn":114},{"ruleId":"628","severity":1,"message":"629","line":15,"column":5,"nodeType":"630","endLine":15,"endColumn":7,"suggestions":"668"},{"ruleId":"638","severity":1,"message":"639","line":76,"column":101,"nodeType":"640","messageId":"641","endLine":76,"endColumn":103},{"ruleId":"638","severity":1,"message":"639","line":76,"column":131,"nodeType":"640","messageId":"641","endLine":76,"endColumn":133},{"ruleId":"638","severity":1,"message":"639","line":91,"column":53,"nodeType":"640","messageId":"641","endLine":91,"endColumn":55},{"ruleId":"638","severity":1,"message":"639","line":91,"column":88,"nodeType":"640","messageId":"641","endLine":91,"endColumn":90},{"ruleId":"628","severity":1,"message":"629","line":24,"column":9,"nodeType":"630","endLine":24,"endColumn":11,"suggestions":"669"},{"ruleId":"638","severity":1,"message":"639","line":91,"column":112,"nodeType":"640","messageId":"641","endLine":91,"endColumn":114},{"ruleId":"622","severity":1,"message":"670","line":34,"column":5,"nodeType":"624","messageId":"625","endLine":34,"endColumn":16},{"ruleId":"622","severity":1,"message":"671","line":35,"column":5,"nodeType":"624","messageId":"625","endLine":35,"endColumn":14},{"ruleId":"622","severity":1,"message":"672","line":36,"column":5,"nodeType":"624","messageId":"625","endLine":36,"endColumn":13},{"ruleId":"622","severity":1,"message":"673","line":39,"column":5,"nodeType":"624","messageId":"625","endLine":39,"endColumn":16},{"ruleId":"628","severity":1,"message":"674","line":152,"column":6,"nodeType":"630","endLine":152,"endColumn":52,"suggestions":"675"},{"ruleId":"638","severity":1,"message":"639","line":175,"column":24,"nodeType":"640","messageId":"641","endLine":175,"endColumn":26},{"ruleId":"638","severity":1,"message":"639","line":327,"column":76,"nodeType":"640","messageId":"641","endLine":327,"endColumn":78},{"ruleId":"638","severity":1,"message":"639","line":327,"column":106,"nodeType":"640","messageId":"641","endLine":327,"endColumn":108},{"ruleId":"638","severity":1,"message":"639","line":348,"column":60,"nodeType":"640","messageId":"641","endLine":348,"endColumn":62},{"ruleId":"638","severity":1,"message":"639","line":348,"column":95,"nodeType":"640","messageId":"641","endLine":348,"endColumn":97},{"ruleId":"676","severity":1,"message":"677","line":9,"column":9,"nodeType":"678","messageId":"641","endLine":9,"endColumn":22},{"ruleId":"676","severity":1,"message":"677","line":20,"column":9,"nodeType":"678","messageId":"641","endLine":20,"endColumn":22},{"ruleId":"676","severity":1,"message":"677","line":9,"column":9,"nodeType":"678","messageId":"641","endLine":9,"endColumn":22},{"ruleId":"676","severity":1,"message":"677","line":22,"column":9,"nodeType":"678","messageId":"641","endLine":22,"endColumn":22},{"ruleId":"638","severity":1,"message":"639","line":44,"column":90,"nodeType":"640","messageId":"641","endLine":44,"endColumn":92},"no-native-reassign",["679"],"no-negated-in-lhs",["680"],"no-unused-vars","'interceptors' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'transpileModule' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'appContext.locale'. Either include it or remove the dependency array.","ArrayExpression",["681"],"React Hook React.useEffect has missing dependencies: 'appContext.currentOrganization' and 'selectedAccountId'. Either include them or remove the dependency array.",["682"],"React Hook React.useCallback has missing dependencies: 'appContext.currentOrganization' and 'selectedAccountId'. Either include them or remove the dependency array.",["683"],["684"],"'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'LoginV3Render' is defined but never used.","'accountGroupBalances' is assigned a value but never used.","'accountBalances' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'appContext.currentOrganization'. Either include it or remove the dependency array.",["685"],"Expected '!==' and instead saw '!='.","'Redirect' is defined but never used.","'setNumberOfMonths' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'appContext.currentOrganization', 'numberOfMonths', and 'parseYearMonth'. Either include them or remove the dependency array.",["686"],["687"],["688"],"React Hook React.useCallback has an unnecessary dependency: 'API_BASE_URL'. Either exclude it or remove the dependency array. Outer scope values like 'API_BASE_URL' aren't valid dependencies because mutating them doesn't re-render the component.",["689"],"'otherIncomeSubtypeId' is assigned a value but never used.","'researchAndDevelopmentSubtypeId' is assigned a value but never used.","'sgaSubtypeId' is assigned a value but never used.","'depreciationSubtypeId' is assigned a value but never used.","'amortizationSubtypeId' is assigned a value but never used.","'otherExpensesSubtypeId' is assigned a value but never used.","'incomeTaxSubtypeId' is assigned a value but never used.",["690"],["691"],["692"],"'pageOptions' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'gotoPage' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","React Hook React.useEffect has an unnecessary dependency: 'API_BASE_URL'. Either exclude it or remove the dependency array. Outer scope values like 'API_BASE_URL' aren't valid dependencies because mutating them doesn't re-render the component.",["693"],"no-dupe-keys","Duplicate key 'Description'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"696","fix":"698"},{"desc":"696","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"694","fix":"706"},{"desc":"704","fix":"707"},{"desc":"708","fix":"709"},{"desc":"694","fix":"710"},{"desc":"694","fix":"711"},{"desc":"704","fix":"712"},"Update the dependencies array to be: [appContext.locale]",{"range":"713","text":"714"},"Update the dependencies array to be: [appContext.currentOrganization, selectedAccountId]",{"range":"715","text":"716"},{"range":"717","text":"716"},{"range":"718","text":"716"},"Update the dependencies array to be: [appContext.currentOrganization, endDate]",{"range":"719","text":"720"},"Update the dependencies array to be: [appContext.currentOrganization, numberOfMonths, parseYearMonth]",{"range":"721","text":"722"},"Update the dependencies array to be: [appContext.currentOrganization]",{"range":"723","text":"724"},{"range":"725","text":"714"},{"range":"726","text":"724"},"Update the dependencies array to be: [startDate, endDate, appContext.currentOrganization]",{"range":"727","text":"728"},{"range":"729","text":"714"},{"range":"730","text":"714"},{"range":"731","text":"724"},[1187,1189],"[appContext.locale]",[2495,2497],"[appContext.currentOrganization, selectedAccountId]",[3234,3236],[4886,4888],[3799,3808],"[appContext.currentOrganization, endDate]",[3933,3935],"[appContext.currentOrganization, numberOfMonths, parseYearMonth]",[1291,1293],"[appContext.currentOrganization]",[909,911],[1695,1741],[5132,5152],"[startDate, endDate, appContext.currentOrganization]",[901,903],[1197,1199],[5304,5350]]